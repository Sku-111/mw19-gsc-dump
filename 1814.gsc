// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

initarbitraryuptriggers()
{
    if ( isdefined( level.arbitraryuptriggers ) )
        return;

    level.arbitraryuptriggers = [];
    level.arbitraryuptriggersstructs = [];

    if ( scripts\cp_mp\utility\game_utility::getmapname() == "mp_junk" )
    {
        var_0 = getentarray( "mag_up", "targetname" );

        if ( !isdefined( var_0 ) || var_0.size == 0 )
            return;

        level.arbitraryuptriggers = var_0;

        foreach ( var_2 in var_0 )
        {
            var_3 = var_2 getentitynumber();
            var_4 = spawnstruct();
            var_4.trigger = var_2;
            var_4.base = undefined;
            var_4.entsinside = [];

            if ( isdefined( var_2.target ) )
            {
                var_4.base = getent( var_2.target, "targetname" );
                var_4.blinkloc = var_4.base.origin + ( 0, 0, -175 );
            }

            level.arbitraryuptriggersstructs[var_3] = var_4;
            thread watcharbitraryuptriggerenter( var_4 );
            thread watcharbitraryuptriggerexit( var_4 );
        }
    }
}

watcharbitraryuptriggerenter( var_0 )
{
    for (;;)
    {
        var_0.trigger waittill( "trigger", var_1 );

        if ( !isdefined( var_1 ) )
            continue;

        if ( !shouldaddtoarbitraryuptrigger( var_0, var_1 ) )
            continue;

        var_2 = var_1 getentitynumber();
        var_0.entsinside[var_2] = var_1;
        var_1.arbitraryuptriggerstruct = var_0;
    }
}

watcharbitraryuptriggerexit( var_0 )
{
    for (;;)
    {
        foreach ( var_2 in var_0.entsinside )
        {
            if ( !isdefined( var_2 ) )
                continue;

            if ( !shouldremovefromarbitraryuptrigger( var_0, var_2 ) )
                continue;

            var_3 = var_2 getentitynumber();
            var_0.entsinside[var_3] = undefined;

            if ( isdefined( var_2.arbitraryuptriggerstruct ) && var_2.arbitraryuptriggerstruct == var_0 )
                var_2.arbitraryuptriggerstruct = undefined;
        }

        waitframe();
    }
}

shouldaddtoarbitraryuptrigger( var_0, var_1 )
{
    if ( !isplayer( var_1 ) )
        return 0;

    var_2 = var_1 getentitynumber();

    if ( isdefined( var_0.entsinside[var_2] ) )
        return 0;

    return 1;
}

shouldremovefromarbitraryuptrigger( var_0, var_1 )
{
    if ( !var_1 istouching( var_0.trigger ) )
        return 1;

    return 0;
}

getarbitraryuptrigger()
{
    if ( !isdefined( self.arbitraryuptriggerstruct ) )
        return undefined;

    return self.arbitraryuptriggerstruct.trigger;
}

getarbitraryuptriggerbase()
{
    if ( !isdefined( self.arbitraryuptriggerstruct ) )
        return undefined;

    return self.arbitraryuptriggerstruct.base;
}

getarbitraryuptriggerblinkloc()
{
    if ( !isdefined( self.arbitraryuptriggerstruct ) )
        return undefined;

    return self.arbitraryuptriggerstruct.blinkloc;
}

isinarbitraryup()
{
    if ( isplayer( self ) )
    {
        if ( self getworldupreferenceangles() != ( 0, 0, 0 ) )
            return 1;
    }

    return 0;
}
