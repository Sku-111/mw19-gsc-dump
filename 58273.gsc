// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

stopusingbomb()
{
    level._effect["airstrike_tracer"] = loadfx( "vfx/iw8_mp/killstreak/vfx_a10_tracer_sep.vfx" );
    level._effect["cluster_optimzed"] = loadfx( "vfx/iw8_mp/killstreak/vfx_contain_cluster_exp.vfx" );
    level._effect["105_optimzed"] = loadfx( "vfx/iw8_mp/killstreak/vfx_contain_ac130_105mm_imp.vfx" );
    game["dialog"]["ebr_alert_missile_10"] = "ebr_alert_missile_10";
    game["dialog"]["ebr_alert_missile_20"] = "ebr_alert_missile_20";
    game["dialog"]["ebr_alert_missile_30"] = "ebr_alert_missile_30";
    level.create_agent_definition = 0;
    level.create_ai_type_override = ( 0, 0, 0 );
    level._id_13B46 = getdvarfloat( "scr_threat_max_radius_strikes_around_player", 3000 );
    level._id_13B47 = getdvarfloat( "scr_threat_min_radius_strikes_around_player", 1500 );
    level._id_13B45 = getdvarint( "scr_threat_explosion_per_strikes", 10 );
    level._id_13B48 = getdvarfloat( "scr_threat_thickness_radius_strikes_around_player", 400 );
    level._id_13B43 = getdvarfloat( "scr_threat_delay_between_strikes", 0.15 );
    level._id_13B44 = getdvarint( "scr_threat_explosion_damage", 10 );
    var_0 = scripts\cp_mp\utility\game_utility::getmapname();

    switch ( var_0 )
    {
        case "mp_br_mechanics":
            _id_1322A();
            break;
        case "mp_don3":
        case "mp_don4":
            _id_1322B();
            break;
        default:
            _id_1322B();
            break;
    }
}

_id_1322B()
{
    level.create_exfil_animstruct = [];
    level.create_exfil_animstruct[0] = spawnstruct();
    level.create_exfil_animstruct[0].locname = "Vodianoy";
    level.create_exfil_animstruct[0].refname = "ship_tac";
    level.create_exfil_animstruct[0]._id_119A7 = ( 39696, -42616, -556 );
    level.create_exfil_animstruct[0]._id_119A8 = 4000;
    level.create_exfil_animstruct[1] = spawnstruct();
    level.create_exfil_animstruct[1].locname = "Gulag";
    level.create_exfil_animstruct[1].refname = "gulag_tac";
    level.create_exfil_animstruct[1]._id_119A7 = ( 51072, -39208, 1351 );
    level.create_exfil_animstruct[1]._id_119A8 = 4000;
    level.create_exfil_animstruct[2] = spawnstruct();
    level.create_exfil_animstruct[2].locname = "Hospital";
    level.create_exfil_animstruct[2].refname = "hospital_tac";
    level.create_exfil_animstruct[2]._id_119A7 = ( 9072, -10984, -280 );
    level.create_exfil_animstruct[2]._id_119A8 = 3000;
    level.create_exfil_animstruct[3] = spawnstruct();
    level.create_exfil_animstruct[3].locname = "Stadium";
    level.create_exfil_animstruct[3].refname = "stadium_tac";
    level.create_exfil_animstruct[3]._id_119A7 = ( 28720, 2272, -816 );
    level.create_exfil_animstruct[3]._id_119A8 = 6000;
    level.create_exfil_animstruct[4] = spawnstruct();
    level.create_exfil_animstruct[4].locname = "TV Station";
    level.create_exfil_animstruct[4].refname = "tvstation_tac";
    level.create_exfil_animstruct[4]._id_119A7 = ( 15024, 18216, 152 );
    level.create_exfil_animstruct[4]._id_119A8 = 2000;
    level.create_exfil_animstruct[5] = spawnstruct();
    level.create_exfil_animstruct[5].locname = "Super";
    level.create_exfil_animstruct[5].refname = "super_tac";
    level.create_exfil_animstruct[5]._id_119A7 = ( -12792, 7912, -392 );
    level.create_exfil_animstruct[5]._id_119A8 = 4000;
    level.create_exfil_animstruct[6] = spawnstruct();
    level.create_exfil_animstruct[6].locname = "Dam";
    level.create_exfil_animstruct[6].refname = "dam_tac";
    level.create_exfil_animstruct[6]._id_119A7 = ( -22080, 46160, -364 );
    level.create_exfil_animstruct[6]._id_119A8 = 6000;
    level.create_exfil_animstruct[7] = spawnstruct();
    level.create_exfil_animstruct[7].locname = "Bank";
    level.create_exfil_animstruct[7].refname = "bank_tac";
    level.create_exfil_animstruct[7]._id_119A7 = ( 22688, -19272, 48 );
    level.create_exfil_animstruct[7]._id_119A8 = 2000;
}

_id_1322A()
{
    level.create_exfil_animstruct = [];
    level.create_exfil_animstruct[0] = spawnstruct();
    level.create_exfil_animstruct[0].locname = "Zombie Test Ground";
    level.create_exfil_animstruct[0].refname = "ship_tac";
    level.create_exfil_animstruct[0]._id_119A7 = ( -3890, -6375, 100 );
    level.create_exfil_animstruct[0]._id_119A8 = 1500;
    level.create_exfil_animstruct[1] = spawnstruct();
    level.create_exfil_animstruct[1].locname = "Gulag Mechanics";
    level.create_exfil_animstruct[1].refname = "gulag_tac";
    level.create_exfil_animstruct[1]._id_119A7 = ( 1800, -6400, 100 );
    level.create_exfil_animstruct[1]._id_119A8 = 4000;
    level.create_exfil_animstruct[2] = spawnstruct();
    level.create_exfil_animstruct[2].locname = "Mountan1";
    level.create_exfil_animstruct[2].refname = "hospital_tac";
    level.create_exfil_animstruct[2]._id_119A7 = ( -8245, 17400, 1000 );
    level.create_exfil_animstruct[2]._id_119A8 = 3000;
    level.create_exfil_animstruct[3] = spawnstruct();
    level.create_exfil_animstruct[3].locname = "Jump Ramp";
    level.create_exfil_animstruct[3].refname = "stadium_tac";
    level.create_exfil_animstruct[3]._id_119A7 = ( -2300, 1640, 600 );
    level.create_exfil_animstruct[3]._id_119A8 = 2000;
    level.create_exfil_animstruct[4] = spawnstruct();
    level.create_exfil_animstruct[4].locname = "Loot Pile";
    level.create_exfil_animstruct[4].refname = "tvstation_tac";
    level.create_exfil_animstruct[4]._id_119A7 = ( 2400, 0, 100 );
    level.create_exfil_animstruct[4]._id_119A8 = 5000;
    level.create_exfil_animstruct[5] = spawnstruct();
    level.create_exfil_animstruct[5].locname = "Mountan2";
    level.create_exfil_animstruct[5].refname = "super_tac";
    level.create_exfil_animstruct[5]._id_119A7 = ( -18200, 9800, 800 );
    level.create_exfil_animstruct[5]._id_119A8 = 4000;
    level.create_exfil_animstruct[6] = spawnstruct();
    level.create_exfil_animstruct[6].locname = "End of runway";
    level.create_exfil_animstruct[6].refname = "dam_tac";
    level.create_exfil_animstruct[6]._id_119A7 = ( -9300, -11150, 100 );
    level.create_exfil_animstruct[6]._id_119A8 = 6000;
    level.create_exfil_animstruct[7] = spawnstruct();
    level.create_exfil_animstruct[7].locname = "Bank";
    level.create_exfil_animstruct[7].refname = "bank_tac";
    level.create_exfil_animstruct[7]._id_119A7 = ( -3900, -2000, 480 );
    level.create_exfil_animstruct[7]._id_119A8 = 2000;
}

changing_loadout( var_0 )
{
    var_1 = 20;
    var_2 = getdvarfloat( "scr_bombardment_duration", var_1 );
    var_3 = 3000;
    var_4 = getdvarfloat( "scr_bombardment_radius", var_3 );
    var_5 = ( level.br_circle.safecircleent.origin[0], level.br_circle.safecircleent.origin[1], 0 );
    var_6 = var_5;
    return level changetimertoovertimetimer( var_6, var_0, var_2, var_4 );
}

changetimertoovertimetimer( var_0, var_1, var_2, var_3 )
{
    if ( getdvarint( "scr_bombardment_killswitch", 0 ) )
        return 0;

    if ( istrue( level.create_agent_definition ) )
        return 0;

    level thread clear_three_room_screens( var_0, var_1, var_2, var_3 );
    return 1;
}

chase( var_0, var_1, var_2 )
{
    level endon( "game_ended" );

    if ( istrue( level.create_agent_definition ) )
    {
        level notify( "stop_bomb" );
        waitframe();
    }

    level.create_apc_vehicle_interaction = var_2;
    level thread clear_trap_console_activation( var_0, var_1 );
}

clear_three_room_screens( var_0, var_1, var_2, var_3 )
{
    level.create_agent_definition = 1;

    if ( !isdefined( level._id_12D05 ) )
        _id_11ECA( var_0, var_3, var_1 );

    var_4 = getdvarfloat( "scr_bombardment_delay_before_start", 8 );

    if ( getdvarint( "scr_bombardment_show_zone_debug", 0 ) )
        level thread _id_11AA8( var_0, var_2 + var_4, var_3 );

    wait( var_4 );
    level thread create_debug_model_for_spawnpoint( var_0, var_1, var_2, var_3 );
}

create_debug_model_for_spawnpoint( var_0, var_1, var_2, var_3 )
{
    var_4 = gettime() + var_2 * 1000;
    var_5 = "free";

    if ( isdefined( var_1 ) )
        var_5 = var_1.team;

    level thread create_execution_devgui( var_0, var_4, var_3 );

    while ( gettime() < var_4 )
    {
        var_6 = scripts\mp\utility\player::getplayersinradius( var_0, var_3 );
        var_7 = [];
        var_8 = [];

        foreach ( var_10 in var_6 )
        {
            if ( var_10.team == var_5 )
                continue;

            if ( var_10 updatemlgspectatorinfo() && ( scripts\mp\utility\player::isreallyalive( var_10 ) && !scripts\mp\utility\player::unset_relic_trex( var_10 ) ) )
            {
                var_8[var_8.size] = var_10;
                continue;
            }

            var_7[var_7.size] = var_10;
        }

        if ( var_8.size != 0 )
        {
            foreach ( var_10 in var_8 )
            {
                level thread _id_13816( var_10.origin, var_1 );
                wait 1;
            }

            continue;
        }

        if ( var_7.size != 0 )
        {
            foreach ( var_10 in var_7 )
            {
                level thread _id_13816( var_10.origin, var_1 );
                wait 1;
            }

            continue;
        }

        var_16 = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_0, var_3, 0.2, 0.9, 1, 0 );
        level thread _id_13816( var_16, var_1 );
        wait 1.5;
    }

    level.create_agent_definition = 0;
}

create_execution_devgui( var_0, var_1, var_2 )
{
    var_3 = [];
    var_4 = 0;
    var_3[0] = scripts\engine\utility::getfx( "cranked_explode" );
    var_3[1] = scripts\engine\utility::getfx( "cluster_optimzed" );
    var_3[2] = scripts\engine\utility::getfx( "cluster_optimzed" );
    var_3[3] = scripts\engine\utility::getfx( "cluster_optimzed" );
    var_3[4] = scripts\engine\utility::getfx( "105_optimzed" );
    var_5 = [];
    var_6 = getdvarfloat( "scr_debug_bomb_point_dist", 800 );
    var_7 = [];
    var_8 = var_2 * 2 / var_6;
    var_9 = var_0 - ( var_2, var_2, 0 );

    for ( var_10 = 0; var_10 < var_8; var_10++ )
    {
        for ( var_11 = 0; var_11 < var_8; var_11++ )
        {
            var_12 = ( var_9[0] + var_10 * var_6, var_9[1] + var_11 * var_6, var_0[2] );

            if ( distance2dsquared( var_0, var_12 ) < var_2 * var_2 )
                var_5[var_5.size] = scripts\engine\utility::drop_to_ground( var_12 );
        }

        waitframe();
    }

    var_5 = scripts\engine\utility::array_randomize( var_5 );
    var_13 = getdvarfloat( "scr_debug_bombardment_fx_per_interval", 5 );
    var_14 = getdvarfloat( "scr_debug_bombardment_fx_interval_time", 0.35 );

    while ( gettime() < var_1 )
    {
        for ( var_10 = 0; var_10 < var_13; var_10++ )
        {
            playfx( var_3[var_4 % var_3.size], var_5[var_4 % var_5.size] );
            var_4++;
        }

        wait( var_14 );
    }
}

_id_11AA8( var_0, var_1, var_2 )
{
    var_3 = _id_11A9B( var_0, var_2 );
    wait( var_1 );
    var_3 delete();
}

_id_11ECA( var_0, var_1, var_2 )
{
    var_3 = [];

    foreach ( var_5 in level.players )
    {
        if ( var_5 scripts\mp\gametypes\br_public.gsc::isplayeringulag() || !var_5 scripts\cp_mp\utility\player_utility::_isalive() )
            continue;

        if ( isdefined( var_2 ) && var_5.team == var_2.team )
        {
            var_3[var_3.size] = var_5;
            button( var_5, var_2 );
            continue;
        }

        if ( length2dsquared( var_5.origin - var_0 ) < var_1 * var_1 )
        {
            button_sequence( var_5 );
            var_3[var_3.size] = var_5;
            continue;
        }

        if ( istrue( level.delete_airlock_ents ) )
            buttonmashcount( var_5 );
    }

    var_7 = [ "ebr_alert_missile_10", "ebr_alert_missile_20", "ebr_alert_missile_30" ];
    scripts\mp\gametypes\br_public.gsc::brleaderdialog( var_7[randomintrange( 0, 3 )], 1, var_3 );
}

button( var_0, var_1 )
{
    var_0 scripts\mp\hud_message::showsplash( "br_reveal_bombardment_launch", undefined, var_1 );
}

button_sequence( var_0 )
{
    var_0 scripts\mp\hud_message::showsplash( "br_reveal_bombardment_incoming" );
}

buttonmashcount( var_0 )
{
    var_0 scripts\mp\hud_message::showsplash( "br_reveal_bombardment_launch_enemy" );
}

updatemlgspectatorinfo()
{
    var_0 = self;
    var_1 = var_0.origin;
    var_2 = var_1 + ( 0, 0, 3000 );

    if ( var_2[2] <= var_1[2] )
        return 0;

    var_3 = scripts\engine\trace::_bullet_trace_passed( var_1, var_2, 0, var_0 );
    return var_3;
}

_id_11A9B( var_0, var_1 )
{
    var_2 = getmaxobjectivecount( var_0[0], var_0[1], var_1 );
    var_2 setmapcirclecolorindex( 12 );
    var_2 setmapcircleiconindex( 3 );
    var_2 setmapcirclestyleindex( 1 );
    return var_2;
}

_id_13816( var_0, var_1 )
{
    if ( !isdefined( level._id_13922 ) )
        level._id_13922 = 0;

    level._id_13922++;

    if ( !isdefined( var_1 ) || !isplayer( var_1 ) )
        _id_12E22( var_0, undefined );
    else if ( level._id_13922 % 3 == 0 )
        _id_12E22( var_0, var_1 );
    else
    {
        if ( level._id_13922 % 3 == 1 )
        {
            _id_12E25( var_0, var_1 );
            return;
        }

        _id_12E24( var_0, var_1 );
    }
}

_id_12E22( var_0, var_1 )
{
    var_2 = 16;
    var_3 = [ ( 0.33, 0.33, 0 ), ( 0.33, 0.66, 0 ), ( 0.66, 0.33, 0 ), ( 0.66, 0.66, 0 ), ( -0.33, 0.33, 0 ), ( -0.33, 0.66, 0 ), ( -0.66, 0.33, 0 ), ( -0.66, 0.66, 0 ), ( 0.33, -0.33, 0 ), ( 0.33, -0.66, 0 ), ( 0.66, -0.33, 0 ), ( 0.66, -0.66, 0 ), ( -0.33, -0.33, 0 ), ( -0.33, -0.66, 0 ), ( -0.66, -0.33, 0 ), ( -0.66, -0.66, 0 ) ];
    var_4 = getdvarfloat( "scr_bombardment_strike_radius", 514 );
    var_5 = scripts\engine\utility::randomvectorrange( var_4 * -0.25, var_4 * 0.25 );

    for ( var_6 = 0; var_6 < var_2; var_6++ )
        var_3[var_6] = var_0 + var_5 + ( var_3[var_6][0] * var_4, var_3[var_6][1] * var_4, 5000 );

    var_3 = scripts\engine\utility::array_randomize( var_3 );
    var_7 = spawn( "script_model", var_0 );
    var_7 setmodel( "ks_airstrike_target_mp" );

    if ( isdefined( var_1 ) )
        var_7 setentityowner( var_1 );

    var_7.weapon_name = "artillery_mp";
    var_7.angles = ( 0, 0, 0 );
    var_7 dontinterpolate();

    for ( var_6 = 0; var_6 < var_3.size; var_6++ )
    {
        var_8 = var_3[var_6];
        var_9 = var_3[var_6] - ( randomfloatrange( -10, 10 ), randomfloatrange( -10, 10 ), 30000 );
        var_10 = scripts\engine\trace::ray_trace( var_8, var_9, undefined, scripts\engine\trace::create_contents( 0, 1, 0, 1, 0, 1, 0 ) );
        var_11 = var_10["position"];
        var_12 = var_10["normal"];
        var_13 = var_11 + var_12 * 10;
        var_14 = vectornormalize( var_11 - var_8 );

        if ( var_14 == ( 0, 0, 1 ) )
            var_15 = ( 0, 1, 0 );
        else
            var_15 = vectorcross( var_14, ( 0, 0, 1 ) );

        var_16 = vectorcross( var_15, var_14 );
        thread callstrike_playmultitracerfx( scripts\engine\utility::getfx( "airstrike_tracer" ), var_13, var_14, var_16 );
        var_7 thread moveanddamagepoint( var_6 + 1, var_13 );
        wait 0.05;
    }

    wait 2;
    var_7 delete();
}

_id_12E25( var_0, var_1 )
{
    var_2 = var_0 + scripts\engine\utility::randomvectorrange( -1000, 1000 ) + ( 0, 0, 3000 );
    var_3 = scripts\cp_mp\utility\weapon_utility::_magicbullet( getcompleteweaponname( "iw8_la_kgolf_mp" ), var_2, var_0, var_1 );
    wait 4;

    if ( isdefined( var_3 ) )
        var_3 delete();
}

_id_12E24( var_0, var_1 )
{
    var_2 = var_0 + scripts\engine\utility::randomvectorrange( -1000, 1000 ) + ( 0, 0, 5000 );
    var_3 = [ ( 300, 300, 0 ), ( -300, 300, 0 ), ( -300, -300, 0 ), ( 300, -300, 0 ) ];
    var_4 = getcompleteweaponname( "ac130_40mm_mp" );

    foreach ( var_6 in var_3 )
    {
        var_1 thread set_up_chopper_boss( var_4, var_2, var_0 + var_6 );
        wait 0.1;
    }

    wait 0.1;
    var_1 thread set_up_chopper_boss( getcompleteweaponname( "ac130_105mm_mp" ), var_2, var_0 );
}

set_up_chopper_boss( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_3 = scripts\cp_mp\utility\weapon_utility::_magicbullet( var_0, var_1, var_2, self );
    var_3 waittill( "missile_stuck", var_4, var_5, var_6, var_7, var_8, var_9 );
    var_10 = 0.5;
    var_11 = 100;

    switch ( var_0.basename )
    {
        case "ac130_105mm_mp":
            var_10 = 1.5;
            var_11 = 500;
            break;
        case "ac130_40mm_mp":
            var_10 = 1;
            var_11 = 300;
            break;
    }

    var_12 = spawn( "script_model", var_3.origin );
    var_12 setmodel( "ks_ac130_target_mp" );
    var_12.angles = vectortoangles( var_9 );
    var_12 linkto( var_3, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_13 = "on";
    var_12 setscriptablepartstate( var_0.basename, var_13, 0 );

    if ( isdefined( self ) )
    {
        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "spawn", "addSpawnDangerZone" ) )
            [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "spawn", "addSpawnDangerZone" ) ]]( var_3.origin, var_11, var_11, self.team, var_10, self, 1 );

        var_12 setotherent( self );
        var_3 detonate();
    }
    else
        var_3 delete();

    var_14 = var_12.origin;
    var_15 = 0.75;

    if ( var_0.basename == "ac130_105mm_mp" )
    {
        var_16 = 0.75;
        var_17 = 2000;
    }
    else
    {
        var_16 = 0.5;
        var_17 = 1300;
    }

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "shellshock", "artillery_earthQuake" ) )
        [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "shellshock", "artillery_earthQuake" ) ]]( var_14, var_16, var_15, var_17 );

    wait 5;
    var_12 delete();
}

_id_12E21( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_3 = randomfloat( 360 );
    var_4 = vectortoangles( ( cos( var_3 ), sin( var_3 ), 0 ) );
    var_0 = scripts\engine\utility::drop_to_ground( var_0 );

    if ( isdefined( level._id_13B41 ) )
        var_5 = level._id_13B41;
    else
        var_5 = "vfx_br_x2_bomber_exp";

    if ( istrue( level.create_apc_vehicle_interaction ) )
    {
        var_6 = spawn( "script_model", var_0 );
        var_6 setmodel( var_5 );
        var_6.angles = var_4;
        waitframe();
    }
    else
        var_6 = easepower( var_5, var_0, var_4 );

    if ( !isdefined( var_6 ) )
        return;

    var_6 setscriptablepartstate( "base", "active", 0 );

    if ( isdefined( var_2 ) )
        radiusdamage( var_0, 300, var_1, var_1, var_2, "MOD_EXPLOSIVE", "artillery_mp" );

    thread calculatehelitimetoflysec( var_0 );

    if ( istrue( level.create_apc_vehicle_interaction ) )
        thread playerpositivereinforcement( var_6, 1 );
    else
        thread playerpowerscleanup( var_6, 1 );
}

calculatehelitimetoflysec( var_0 )
{
    self endon( "death" );
    self endon( "missile_dest_failed" );
    level endon( "game_ended" );

    if ( istrue( level.delete_starting_boxes ) )
    {
        var_1 = scripts\mp\utility\player::getplayersinradius( var_0, level.delete_track );

        foreach ( var_3 in var_1 )
        {
            if ( !istrue( var_3 scripts\mp\gametypes\br_public.gsc::isplayeringulag() ) )
            {
                var_3 scripts\mp\weapons::setplayerstunned();
                var_3 thread scripts\mp\weapons::cleanupconcussionstun( level.delete_trapfunc );
                var_3 scripts\cp_mp\utility\shellshock_utility::_stopshellshock();
                var_3 scripts\cp_mp\utility\shellshock_utility::_shellshock( "concussion_grenade_mp", "bottom", level.delete_trapfunc, 1 );
            }
        }
    }
}

playerpowerscleanup( var_0, var_1 )
{
    level.create_disconnectplayer++;
    wait( var_1 );
    var_0 freescriptable();
    level.create_disconnectplayer--;
}

playerpositivereinforcement( var_0, var_1 )
{
    wait( var_1 );
    var_0 delete();
}

moveanddamagepoint( var_0, var_1 )
{
    self endon( "death" );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 0.18 );
    self.origin = var_1;
    self setscriptablepartstate( "explode" + var_0, "active", 0 );
    scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( 5 );
    self setscriptablepartstate( "explode" + var_0, "neutral", 0 );
}

callstrike_playmultitracerfx( var_0, var_1, var_2, var_3 )
{
    var_4 = 0;
    var_5 = 3;

    while ( var_4 < var_5 )
    {
        var_6 = randomintrange( 25, 50 );
        var_7 = randomintrange( 25, 50 );
        playfx( var_0, var_1 + ( var_6, var_7, 0 ), var_2, var_3 );
        var_4++;
        wait 0.05;
    }
}

clear_trap_console_activation( var_0, var_1 )
{
    level endon( "bombardment_finished" );
    level.create_agent_definition = 1;
    level thread _id_11AB2();
    thread _id_11AB1();
    thread _id_13B40( var_0, var_1 );
}

_id_11AB1()
{
    level endon( "game_ended" );
    level endon( "bombardment_finished" );
    level waittill( "stop_bomb" );
    level.create_agent_definition = 0;
    level notify( "bombardment_finished" );
}

_id_11AB2()
{
    self endon( "bombardment_finished" );

    while ( level.create_agent_definition )
    {
        level.create_ambient_vehicle = undefined;

        foreach ( var_1 in level.players )
        {
            if ( isdefined( var_1 ) && scripts\mp\utility\player::isreallyalive( var_1 ) )
                level.create_ambient_vehicle = var_1;
        }

        if ( isdefined( level.create_ambient_vehicle ) )
        {
            level.create_ambient_vehicle waittill( "disconnect" );
            continue;
        }

        return;
    }
}

_id_13B40( var_0, var_1 )
{
    level endon( "game_ended" );
    level notify( "bomb_started" );
    level endon( "stop_bomb" );
    var_2 = gettime() + var_0 * 1000;
    var_3 = "free";

    if ( !isdefined( level.create_disconnectplayer ) )
        level.create_disconnectplayer = 0;

    var_4 = [];

    if ( isdefined( var_1 ) )
        var_4[0] = var_1;
    else
        var_4 = level.players;

    var_6 = level._id_13B46;
    var_7 = level._id_13B45;
    var_8 = 0;

    if ( isdefined( level._id_13B49 ) )
        var_8 = level._id_13B49;

    var_9 = level._id_13B43 + randomfloat( var_8 );
    var_10 = level._id_13B44;
    var_11 = 0;

    while ( gettime() < var_2 )
    {
        foreach ( var_1 in var_4 )
        {
            var_13 = undefined;

            if ( isplayer( var_1 ) )
            {
                if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
                    continue;
                else
                    var_13 = var_1.origin;
            }
            else if ( isvector( var_1 ) )
                var_13 = var_1;

            if ( !isdefined( var_13 ) )
                continue;

            var_14 = _id_13B3C( var_0, var_2 );
            var_15 = scripts\mp\gametypes\br_circle.gsc::getrandompointincircle( var_13, var_6, var_14._id_11C42, var_14._id_11B70, 1, 0 );
            _id_12E21( var_15, var_10, level.create_ambient_vehicle );
            var_11++;
            var_11 = var_11 % var_7;

            if ( var_11 == 0 )
                wait( var_9 );
        }

        wait 0.1;
    }

    level.create_agent_definition = 0;
    level notify( "bombardment_finished" );
}

_id_13B3D( var_0, var_1, var_2, var_3 )
{
    var_4 = getmaxobjectivecount( var_0[0], var_0[1], var_2 );
    var_4 setmapcirclecolorindex( var_3 );
    var_4 setmapcircleiconindex( 1 );
    var_4 setmapcirclestyleindex( 1 );
    wait( var_1 );
    var_4 delete();
}

_id_13B3E( var_0, var_1, var_2 )
{
    level endon( "bombardment_finished" );
    var_0 endon( "disconnect" );
    var_3 = 0.1;
    var_4 = getdvarfloat( "scr_threat_max_radius_strikes_around_player", 3000 );

    while ( gettime() < var_2 )
    {
        if ( !isdefined( var_0 ) || !scripts\mp\utility\player::isreallyalive( var_0 ) )
            break;

        var_5 = _id_13B3C( var_1, var_2 );
        level thread _id_13B3D( var_0.origin, var_3, var_4 * var_5._id_11C42, 4 );
        level thread _id_13B3D( var_0.origin, var_3, var_4 * var_5._id_11B70, 4 );
        wait( var_3 );
    }

    var_0.issnipersemi = 0;
}

_id_13B3C( var_0, var_1 )
{
    var_2 = level._id_13B46;
    var_3 = level._id_13B47;
    var_4 = level._id_13B48;
    var_5 = var_3 / var_2;
    var_6 = var_4 / var_2;
    var_7 = var_1 - gettime();
    var_8 = var_7 / ( var_0 * 1000 );
    var_9 = clamp( var_8 + 0.2, 0, 1 );

    if ( var_9 - var_5 < var_6 )
        var_9 = var_5 + var_6;

    var_10 = spawnstruct();
    var_10._id_11C42 = clamp( var_6, 0, 1 );
    var_10._id_11B70 = clamp( var_9, 0, 1 );
    return var_10;
}

_id_13B3F( var_0 )
{
    setdvar( "scr_threat_min_radius_strikes_around_player", var_0 );
}
