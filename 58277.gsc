// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._effect["vfx_speed_boost_trail_fx"] = loadfx( "vfx/iw8_br/gameplay/rumble/vfx_rum_speed_boost_trail" );
    level._effect["vfx_speed_boost_screen_fx"] = loadfx( "vfx/iw8_br/gameplay/rumble/vfx_rum_speed_boost_scrnfx" );
    game["dialog"]["powerup_speed_boost"] = "power_up_speed_boost";
    var_0 = spawnstruct();
    var_0._id_138FD = "speed_boost";
    var_0.parachute_get_path = getdvarfloat( "scr_brPowerups_speed_boost_buff_duration", 45 );
    var_0.asm_playfacialanim_mp = ::asm_playfacialanim_mp;
    var_0._id_12A35 = ::_id_12A35;
    var_0.isdeathshieldskippingenabled = ::isdeathshieldskippingenabled;
    _keypadscriptableused_bunkeralt::_id_12AF4( var_0 );
    scripts\cp_mp\utility\script_utility::registersharedfunc( "br_powerup_speed_boost", "extend_time_by", ::open_starting_safehouse_door );
}

asm_playfacialanim_mp()
{
    self.player._id_12834 = 1;
    level thread scripts\mp\gametypes\br_public.gsc::dmztut_endgamewithreward( "powerup_speed_boost", self.player );
    self.player lerpfovbypreset( "zombiedefault" );
    _id_135B7();
    self.player cac_getaccessorylogic();
    self.player playlocalsound( "mp_powerup_activate_speed_plr" );
    _keypadscriptableused_bunkeralt::_id_12425( self.player, "br_rumble_powerup_speed_boost_activated" );
}

isdeathshieldskippingenabled()
{
    self notify( "singleton_deactivate_func" );
    self endon( "singleton_deactivate_func" );
    self.player._id_12834 = 0;
    lb_impulse_dmg_threshold_low();
    self.player _id_12BF5();

    if ( isalive( self.player ) )
        self.player playlocalsound( "mp_powerup_deactivate_speed_plr" );

    self.player lerpfovbypreset( "default_2seconds" );
}

_id_12A35()
{
    open_starting_safehouse_door( self._id_12E2D.parachute_get_path );
    self.player playlocalsound( "mp_powerup_reactivate_speed_plr" );
}

open_starting_safehouse_door( var_0 )
{
    self.mp_layover_patch = gettime() + var_0 * 1000;
    self.player thread _keypadscriptableused_bunkeralt::_id_13F7E( undefined, 4, 2 );
}

_id_135B7()
{
    playfxontag( scripts\engine\utility::getfx( "vfx_speed_boost_trail_fx" ), self.player, "j_spine4" );
}

lb_impulse_dmg_threshold_low()
{
    stopfxontag( scripts\engine\utility::getfx( "vfx_speed_boost_trail_fx" ), self.player, "j_spine4" );
}

cac_getaccessorylogic( var_0 )
{
    thread _id_124EF();

    if ( !istrue( self.isjuggernaut ) && !isdefined( self.vehicle ) )
        thread _id_124EE();

    if ( isdefined( self.vehicle ) )
        _keypadscriptableused_bunkeralt::_id_1249C( "speed_boost" ) thread _id_141FC();
}

_id_141FC()
{
    level endon( "game_ended" );
    self endon( "stop_powerup" );
    self.player endon( "death_or_disconnect" );

    while ( isdefined( self.player.vehicle ) )
        waitframe();

    thread _id_124EE();
}

_id_141FB()
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    while ( isdefined( self.vehicle ) )
        waitframe();

    thread _id_124E4();
}

_id_12BF5()
{
    thread _id_124E3();

    if ( !isdefined( self.vehicle ) )
        thread _id_124E4();
    else
        thread _id_141FB();
}

_id_124EE()
{
    if ( !isdefined( self.operatorcustomization ) || !isdefined( self.operatorcustomization.suit ) )
        return;

    if ( self.operatorcustomization.suit == "actionhero_mp" )
        return;

    if ( !isdefined( self._id_12147 ) )
        self._id_12147 = self.operatorcustomization.suit;

    self.operatorcustomization.suit = "actionhero_mp";
    scripts\mp\utility\player::_setsuit( "actionhero_mp" );
}

_id_124E4()
{
    self notify( "custom_suit_start" );
    self endon( "custom_suit_start" );

    if ( isdefined( self._id_12147 ) && self.operatorcustomization.suit != self._id_12147 )
    {
        self.operatorcustomization.suit = self._id_12147;
        scripts\mp\utility\player::_setsuit( self._id_12147 );
        self._id_12147 = undefined;
    }
}

_id_124EF()
{
    self notify( "player_set_infinate_super_sprint" );
    self endon( "player_set_infinate_super_sprint" );
    self endon( "death_or_disconnect" );
    self refreshsprinttime();
    self.movespeedscaler = 1.2;
    scripts\mp\weapons::updatemovespeedscale();

    if ( !scripts\mp\gametypes\br_public.gsc::shouldlink() )
    {
        scripts\mp\utility\perk::giveperk( "specialty_sprintmelee" );
        scripts\mp\utility\perk::giveperk( "specialty_sprintads" );
        scripts\mp\utility\perk::giveperk( "specialty_marathon" );
        scripts\mp\utility\perk::giveperk( "specialty_fastsprintrecovery" );
    }
}

_id_124E3()
{
    if ( !scripts\mp\gametypes\br_public.gsc::shouldlink() )
    {
        scripts\mp\utility\perk::removeperk( "specialty_sprintmelee" );
        scripts\mp\utility\perk::removeperk( "specialty_sprintads" );
        scripts\mp\utility\perk::removeperk( "specialty_marathon" );
        scripts\mp\utility\perk::removeperk( "specialty_fastsprintrecovery" );
    }

    self.movespeedscaler = 1;
    scripts\mp\weapons::updatemovespeedscale();
}

isplatepouch()
{
    scripts\mp\gametypes\br_dev.gsc::_id_12B21( ::isplacementplayerobstructed );
    level thread isplayerbrsquadleader();
}

isplayerbrsquadleader()
{
    level endon( "game_ended" );

    while ( !isdefined( level.player ) )
        waitframe();
}

isplacementplayerobstructed( var_0, var_1 )
{
    var_2 = "";

    switch ( var_0 )
    {
        case "rmbl_give_speed_boost_powerup":
            level.player _keypadscriptableused_bunkeralt::_id_1393A( "speed_boost" );
            break;
        case "rmbl_spawn_speed_boost_powerup":
            var_3 = level.player.origin + anglestoforward( level.player.angles ) * 300 + ( 0, 0, 25 );
            easepower( "brloot_rumble_powerup_speed_boost", var_3 );
            break;
        case "rmbl_give_teammate_speed_boost_powerup":
            var_4 = scripts\mp\utility\teams::getteamdata( level.player.team, "players" );
            var_4 = scripts\engine\utility::array_remove( var_4, level.player );
            var_4[randomintrange( 0, var_4.size )] _keypadscriptableused_bunkeralt::_id_1393A( "speed_boost" );
            break;
    }
}
