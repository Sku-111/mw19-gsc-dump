// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    scripts\mp\killstreaks\killstreaks::registerkillstreak( "emp", ::tryuseempfromstruct );
}

tryuseemp()
{
    var_0 = scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "emp", self );
    return tryuseempfromstruct( var_0 );
}

tryuseempfromstruct( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( isdefined( level.killstreaktriggeredfunc ) )
    {
        if ( !level [[ level.killstreaktriggeredfunc ]]( var_0 ) )
            return 0;
    }

    var_1 = scripts\cp_mp\killstreaks\killstreakdeploy::streakdeploy_dogesturedeploy( var_0, getcompleteweaponname( "ks_gesture_generic_mp" ) );

    if ( !istrue( var_1 ) )
        return 0;

    if ( isdefined( level.killstreakbeginusefunc ) )
    {
        if ( !level [[ level.killstreakbeginusefunc ]]( var_0 ) )
            return 0;
    }

    thread startemp();

    if ( isdefined( level.killstreakfinishusefunc ) )
        level thread [[ level.killstreakfinishusefunc ]]( self.streakinfo );

    return 1;
}

startemp()
{
    level endon( "game_ended" );
    var_0 = scripts\cp_mp\utility\killstreak_utility::removeextracthelipad();
    var_1 = 3000;

    if ( isdefined( var_0 ) )
        var_1 = var_0.origin[2] + 500;

    var_2 = level.mapcenter * ( 1, 1, 0 ) + ( 0, 0, var_1 );
    playfx( scripts\engine\utility::getfx( "emp_shockwave" ), var_2 );
    self playsound( "jammer_drone_shockwave" );

    foreach ( var_4 in level.players )
    {
        if ( !scripts\mp\utility\player::isreallyalive( var_4 ) )
            continue;

        var_4 thread applyempshellshock();
    }

    var_6 = scripts\mp\utility\teams::getenemyteams( self.owner.team );

    foreach ( var_8 in var_6 )
        destroyactiveobjects( var_8, self );
}

applyempshellshock()
{
    self setscriptablepartstate( "emped", "active", 0 );
    self playloopsound( "emp_nade_lp" );
    thread applyempshellshockvisionset();
    wait 0.5;
    self setscriptablepartstate( "emped", "neutral", 0 );
    self playsound( "emp_nade_lp_end" );
    self stoploopsound( "emp_nade_lp" );
}

applyempshellshockvisionset()
{
    visionsetnaked( "coup_sunblind", 0.05 );
    waitframe();
    visionsetnaked( "coup_sunblind", 0 );
    visionsetnaked( "", 0.5 );
}

destroyactiveobjects( var_0, var_1 )
{
    var_2 = "nuke_mp";
    var_3 = level.activekillstreaks;
    var_4 = [[ level.getactiveequipmentarray ]]();
    var_5 = undefined;

    if ( isdefined( var_3 ) && isdefined( var_4 ) )
        var_5 = scripts\engine\utility::array_combine_unique( var_3, var_4 );
    else if ( isdefined( var_3 ) )
        var_5 = var_3;
    else if ( isdefined( var_4 ) )
        var_5 = var_4;

    if ( isdefined( var_5 ) )
    {
        foreach ( var_7 in var_5 )
        {
            if ( isdefined( var_7 ) )
                var_7 scripts\mp\utility\killstreak::dodamagetokillstreak( 10000, var_1, var_1, var_0, var_7.origin, "MOD_EXPLOSIVE", var_2 );
        }
    }
}
