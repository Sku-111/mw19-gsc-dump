// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

dvarintvalue( var_0, var_1, var_2, var_3 )
{
    var_0 = "scr_" + level.gametype + "_" + var_0;

    if ( getdvar( var_0 ) == "" )
    {
        setdvar( var_0, var_1 );
        return var_1;
    }

    var_4 = getdvarint( var_0 );

    if ( var_4 > var_3 )
        var_4 = var_3;
    else if ( var_4 < var_2 )
        var_4 = var_2;
    else
        return var_4;

    setdvar( var_0, var_4 );
    return var_4;
}

dvarfloatvalue( var_0, var_1, var_2, var_3 )
{
    var_0 = "scr_" + level.gametype + "_" + var_0;

    if ( getdvar( var_0 ) == "" )
    {
        setdvar( var_0, var_1 );
        return var_1;
    }

    var_4 = getdvarfloat( var_0 );

    if ( var_4 > var_3 )
        var_4 = var_3;
    else if ( var_4 < var_2 )
        var_4 = var_2;
    else
        return var_4;

    setdvar( var_0, var_4 );
    return var_4;
}

registerwatchdvarint( var_0, var_1 )
{
    var_2 = "scr_" + level.gametype + "_" + var_0;

    if ( getdvarint( var_2, -1 ) == -1 )
        setdvar( var_2, var_1 );

    level.watchdvars[var_2] = spawnstruct();
    level.watchdvars[var_2].value = getdvarint( var_2, var_1 );
    level.watchdvars[var_2].type = "int";
    level.watchdvars[var_2].notifystring = "update_" + var_0;
}

registerwatchdvarfloat( var_0, var_1 )
{
    var_2 = "scr_" + level.gametype + "_" + var_0;

    if ( getdvarfloat( var_2, -1 ) == -1 )
        setdvar( var_2, var_1 );

    level.watchdvars[var_2] = spawnstruct();
    level.watchdvars[var_2].value = getdvarfloat( var_2, var_1 );
    level.watchdvars[var_2].type = "float";
    level.watchdvars[var_2].notifystring = "update_" + var_0;
}

registerwatchdvar( var_0, var_1 )
{
    var_2 = "scr_" + level.gametype + "_" + var_0;

    if ( getdvar( var_2, "" ) == "" )
        setdvar( var_2, var_1 );

    level.watchdvars[var_2] = spawnstruct();
    level.watchdvars[var_2].value = getdvar( var_2, var_1 );
    level.watchdvars[var_2].type = "string";
    level.watchdvars[var_2].notifystring = "update_" + var_0;
}

setoverridewatchdvar( var_0, var_1 )
{
    var_0 = "scr_" + level.gametype + "_" + var_0;
    level.overridewatchdvars[var_0] = var_1;
}

getwatcheddvar( var_0 )
{
    var_0 = getwatcheddvarstring( var_0 );

    if ( isdefined( level.overridewatchdvars ) && isdefined( level.overridewatchdvars[var_0] ) )
        return level.overridewatchdvars[var_0];
    else if ( isdefined( level.watchdvars ) && isdefined( level.watchdvars[var_0] ) && isdefined( level.watchdvars[var_0].value ) )
        return level.watchdvars[var_0].value;
    else
        return undefined;
}

getwatcheddvarstring( var_0 )
{
    return "scr_" + level.gametype + "_" + var_0;
}

updatewatcheddvarsexecute()
{
    var_0 = getarraykeys( level.watchdvars );

    foreach ( var_2 in var_0 )
    {
        if ( level.watchdvars[var_2].type == "string" )
            var_3 = getproperty( var_2, level.watchdvars[var_2].value );
        else if ( level.watchdvars[var_2].type == "float" )
            var_3 = getfloatproperty( var_2, level.watchdvars[var_2].value );
        else
            var_3 = getintproperty( var_2, level.watchdvars[var_2].value );

        if ( var_3 != level.watchdvars[var_2].value )
        {
            level.watchdvars[var_2].value = var_3;
            level notify( level.watchdvars[var_2].notifystring, var_3 );
        }
    }
}

updatewatcheddvars()
{
    while ( game["state"] == "playing" )
    {
        updatewatcheddvarsexecute();
        wait 1.0;
    }
}

getproperty( var_0, var_1 )
{
    var_2 = var_1;
    var_2 = getdvar( var_0, var_1 );
    return var_2;
}

getintproperty( var_0, var_1 )
{
    var_2 = var_1;
    var_2 = getdvarint( var_0, var_1 );
    return var_2;
}

getfloatproperty( var_0, var_1 )
{
    var_2 = var_1;
    var_2 = getdvarfloat( var_0, var_1 );
    return var_2;
}

respawn_players_into_plane( var_0, var_1 )
{
    return getdvarint( var_0, getdvarint( var_1 ) );
}

respawn_locations( var_0, var_1 )
{
    return getdvarfloat( var_0, getdvarfloat( var_1 ) );
}

respawn_index( var_0, var_1 )
{
    return getdvar( var_0, getdvar( var_1 ) );
}
