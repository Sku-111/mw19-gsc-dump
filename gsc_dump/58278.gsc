// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._id_12838 = spawnstruct();
    level._id_12838.area1_targets = [];
    level._id_12838.applyquest = [];
    scripts\engine\scriptable::scriptable_addusedcallback( ::scriptable_used );
    scripts\engine\scriptable::_id_12F57( ::scriptable_used );
    level thread _id_12832();
}

_id_12832()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "player_spawned", var_0 );
        var_0 thread _id_13F7E( undefined, 0, 0 );
    }
}

scriptable_used( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_0 ) && isdefined( var_0.type ) )
    {
        switch ( var_0.type )
        {
            case "brloot_rumble_powerup_killmonger":
                var_3 _id_12833( "killmonger", var_0 );
                break;
            case "brloot_rumble_powerup_speed_boost":
                var_3 _id_12833( "speed_boost", var_0 );
                break;
            case "brloot_rumble_powerup_double_points":
                var_3 _id_12833( "double_points", var_0 );
                break;
            case "brloot_rumble_powerup_field_resupply":
                var_3 _id_12833( "field_resupply", var_0 );
                break;
            case "brloot_plunder_cash_uncommon_1":
                if ( !isdefined( var_3._id_12827 ) || !var_3._id_12827 )
                    return;

                var_5 = 5;
                var_3 scripts\mp\gametypes\br_plunder.gsc::_id_12627( int( var_5 ) );
                break;
        }
    }
}

_id_12833( var_0, var_1 )
{
    thread _id_1393A( var_0 );
    scripts\cp\vehicles\little_bird_mg_cp::addedcollision();
    var_1 freescriptable();
    thread _id_1282F();
}

_id_12AF4( var_0 )
{
    level._id_12838.area1_targets[var_0._id_138FD] = var_0;
    level._id_12838.applyquest[var_0._id_138FD] = [];
}

race_monitor_out_of_vehicle( var_0 )
{
    if ( !cargo_truck_mg_cp_createfromstructs( var_0 ) )
        return;

    return level._id_12838.area1_targets[var_0];
}

_id_1393A( var_0 )
{
    if ( !cargo_truck_mg_cp_createfromstructs( var_0 ) )
        return 0;

    var_1 = 0;
    var_2 = getdvarint( "scr_brPowerups_allow_multiple_active_powerups", 1 );

    if ( isdefined( self.are_players_nearby_turret ) && self.are_players_nearby_turret.size > 0 )
    {
        foreach ( var_5, var_4 in self.are_players_nearby_turret )
        {
            if ( var_5 == var_0 )
            {
                var_1 = 1;

                if ( isdefined( var_4._id_12E2D._id_12A35 ) )
                    var_4 [[ var_4._id_12E2D._id_12A35 ]]();

                continue;
            }

            if ( !var_2 )
            {
                if ( isdefined( var_4._id_12E2D.isdisconnecting ) )
                    var_4 [[ var_4._id_12E2D.isdisconnecting ]]();
            }
        }
    }

    if ( !var_1 )
        assignvehiclestoteams( var_0 );
}

assignvehiclestoteams( var_0 )
{
    var_1 = init_internal( var_0 );
    level._id_12838.applyquest[var_0] = scripts\engine\utility::array_add( level._id_12838.applyquest[var_0], self );
    var_2 = race_monitor_vehicle( var_0 );

    if ( isdefined( var_1._id_12E2D.parachute_get_path ) )
        thread _id_13F7E( int( var_1._id_12E2D.parachute_get_path ), var_2, 1 );

    if ( isdefined( var_1._id_12E2D.asm_playfacialanim_mp ) )
        var_1 thread [[ var_1._id_12E2D.asm_playfacialanim_mp ]]();

    if ( isdefined( var_1._id_12E2D.parachute_get_path ) )
        var_1 thread _id_1449F();
    else
    {
        waitframe();
        var_1 thread isempdamage();
    }
}

_id_1449F()
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "stop_powerup" );
    self.player endon( "disconnect" );
    thread moveplayertotoppos();

    if ( isdefined( self._id_12E2D._id_1449E ) )
        self thread [[ self._id_12E2D._id_1449E ]]();

    while ( gettime() < self.mp_layover_patch )
        waitframe();

    thread isempdamage();
}

moveplayertotoppos()
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "stop_powerup" );
    self.player endon( "disconnect" );
    self.player scripts\engine\utility::_id_143A6( "death", "joined_team", "joined_spectators" );
    thread isempdamage();
}

isempdamage()
{
    self.player endon( "disconnect" );
    var_0 = self._id_12E2D._id_138FD;
    _id_13F73( var_0 );
    var_1 = race_monitor_vehicle( var_0 );

    if ( isdefined( self._id_12E2D.parachute_get_path ) )
        self.player thread _id_13F7E( undefined, var_1, 0 );

    if ( isdefined( self._id_12E2D.isdeathshieldskippingenabled ) )
        self thread [[ self._id_12E2D.isdeathshieldskippingenabled ]]();

    self notify( "stop_powerup" );
}

_id_13F73( var_0 )
{
    if ( !cargo_truck_mg_cp_createfromstructs( var_0 ) )
        return 0;

    lbravo_actorthinkpath( self.player );

    if ( scripts\engine\utility::array_contains( level._id_12838.applyquest[var_0], self.player ) )
        level._id_12838.applyquest[var_0] = scripts\engine\utility::array_remove( level._id_12838.applyquest[var_0], self.player );
}

init_internal( var_0 )
{
    var_1 = spawnstruct();
    var_1._id_12E2D = race_monitor_out_of_vehicle( var_0 );
    var_1.player = self;
    var_1.team = self.team;
    var_1._id_13AB1 = scripts\mp\utility\teams::getteamdata( self.team, "players" );
    var_1.origin = self.origin;
    var_1.angles = self.angles;
    var_1.squadleaderbeacon_isactive = [];
    var_1._id_1381C = gettime();

    if ( isdefined( var_1._id_12E2D.parachute_get_path ) )
        var_1.mp_layover_patch = gettime() + var_1._id_12E2D.parachute_get_path * 1000;

    var_1 carriable_pickup_wait( var_1.player );
    return var_1;
}

carriable_pickup_wait( var_0 )
{
    if ( !isdefined( var_0.are_players_nearby_turret ) )
        var_0.are_players_nearby_turret = [];

    var_0.are_players_nearby_turret[self._id_12E2D._id_138FD] = self;
}

lbravo_actorthinkpath( var_0 )
{
    if ( !isdefined( var_0.are_players_nearby_turret ) || !isdefined( var_0.are_players_nearby_turret[self._id_12E2D._id_138FD] ) )
        return;

    var_0.are_players_nearby_turret[self._id_12E2D._id_138FD] = undefined;
}

_id_124DD( var_0 )
{
    if ( scripts\engine\utility::array_contains( level._id_12838.applyquest[var_0], self ) )
        return 1;

    return 0;
}

_id_1249C( var_0 )
{
    if ( !_id_124DD( var_0 ) )
        return;

    if ( !isdefined( self.are_players_nearby_turret ) )
        return;

    return self.are_players_nearby_turret[var_0];
}

cargo_truck_mg_cp_createfromstructs( var_0 )
{
    var_1 = scripts\engine\utility::array_contains_key( level._id_12838.area1_targets, var_0 );

    if ( isdefined( level._id_12838.area1_targets ) && var_1 )
        return 1;
    else
        return 0;
}

_id_12426( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::ter_op( self.team == "axis", "allies", "axis" );
    var_4 = undefined;

    if ( isdefined( var_2 ) )
    {
        var_4 = spawnstruct();
        var_4.intvar = var_2;
    }

    var_5 = self.team;
    var_5 = scripts\engine\utility::array_remove( var_5, self );

    foreach ( var_7 in var_5 )
        scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( var_7, var_0, var_4 );
}

_id_12425( var_0, var_1, var_2 )
{
    var_3 = undefined;

    if ( isdefined( var_2 ) )
    {
        var_3 = spawnstruct();
        var_3.intvar = var_2;
    }

    scripts\mp\gametypes\br_quest_util.gsc::displayplayersplash( var_0, var_1, var_3 );
}

_id_13F7E( var_0, var_1, var_2 )
{
    var_3 = 0;

    if ( isdefined( var_0 ) )
    {
        if ( isfloat( var_0 ) )
            var_0 = int( var_0 );

        var_3 = var_3 + var_0 * 100;
    }

    if ( isdefined( var_1 ) )
        var_3 = var_3 + var_1 * 10;

    if ( isdefined( var_2 ) )
        var_3 = var_3 + var_2;

    self setclientomnvar( "ui_br_bodycount_reward_data", var_3 );
}

modify_juggernaut_damage( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = 100;

    var_2 = randomintrange( 1, 101 );

    if ( var_1 < var_2 )
        return;

    var_3 = _id_1233D();
    var_4 = "brloot_rumble_powerup_" + var_3;

    if ( !isent( self ) || self isscriptable() )
    {
        var_5 = 35;
        var_6 = 75;
        var_6 = var_6 + randomfloatrange( -10, 10 );
        var_7 = var_5 + 55 + randomfloatrange( -5, 5 );
        var_8 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_0, self.origin, self.angles, undefined, var_6, var_7 );
    }
    else
        var_8 = scripts\mp\gametypes\br_pickups.gsc::getitemdroporiginandangles( var_0, self.origin, self.angles, self );

    scripts\mp\gametypes\br_pickups.gsc::spawnpickup( var_4, var_8, 1, 1 );
}

script_model_spawn_and_use_logic()
{
    var_0 = _id_1233D();
    var_1 = "brloot_rumble_powerup_" + var_0;
    thread _id_1393A( var_0 );
}

_id_1233D()
{
    var_0 = [];

    foreach ( var_3, var_2 in level._id_12838.area1_targets )
        var_0[var_0.size] = var_3;

    var_0 = scripts\engine\utility::array_randomize( var_0 );
    return var_0[0];
}

_id_1282F()
{
    if ( level.disable_super_in_turret.name == "rumble" )
        scripts\mp\supers::givesuperpoints( scripts\mp\supers::getsuperpointsneeded() );

    if ( scripts\mp\utility\killstreak::isjuggernaut() )
        return;

    if ( level.disable_super_in_turret.name == "rumble" )
    {
        self.health = self.maxhealth;
        scripts\mp\healthoverlay::onexitdeathsdoor( 1 );
        self.br_armorhealth = self.br_maxarmorhealth;
        self setclientomnvar( "ui_br_armor_damage", 1 );
        scripts\mp\equipment\armor_plate::debug_state( self.br_armorhealth );
        thread _id_12CCB();
    }
}

_id_12CCB()
{
    self endon( "death_or_disconnect" );
    thread scripts\mp\equipment::givescavengerammo();
    thread scripts\mp\equipment::givescavengerammo();
    scripts\mp\weapons::scavengergiveammo( self );
    waitframe();
    scripts\mp\weapons::scavengergiveammo( self );
}

race_monitor_vehicle( var_0 )
{
    switch ( var_0 )
    {
        case "double_points":
            return 1;
        case "killmonger":
            return 3;
        case "speed_boost":
            return 4;
    }
}
