// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

activate_laser_trap_parent()
{

}

init()
{
    if ( !getdvarint( "scr_br_alt_mode_mxp", 0 ) )
        return;

    unloadinfiltransient( "mp_infil_wz_island_greenbay_tr" );
    unloadinfiltransient( "mp_infil_wz_island_kenosha_tr" );
    teleportplayertoselection();
    tr_vis_radius_override_lod2();
    zombieregendelayscaleingas();
    vehicle_outline_watcher();
    post_safeges_weapon();
    testing();
    _id_13220();
    toggle_ai_settings();
    scripts\cp_mp\utility\script_utility::registersharedfunc( "killstreak", "aim_override", ::binocularsseegk );
    thread toggleusbstickinhand();
}

tr_vis_radius_override_lod2()
{
    level.disable_super_in_turret.brlootchoppercratedestroycallback = 1;
    level.disable_oob_immunity_on_riders = 1;
    level._id_11E18 = spawnstruct();
    level._id_11E18.eetimebetweendialoglines = getdvarfloat( "scr_br_mxp_ee_time_between_lines", 1.5 );
    level._id_11E18.kheadchallengetriggerheight = getdvarint( "scr_br_mxp_k_head_challenge_trig_height", 1250 );
    level._id_11E18.kheadchallengetriggerradius = getdvarint( "scr_br_mxp_k_head_challenge_trig_radius", 750 );
    level._id_11E18.kchallengetriggerheight = getdvarint( "scr_br_mxp_k_challenge_trig_height", 1750 );
    level._id_11E18.kchallengetriggerradius = getdvarint( "scr_br_mxp_k_challenge_trig_radius", 150 );
    level._id_11E18.kstandonheadduration = getdvarfloat( "scr_br_mxp_k_stand_on_head_dur", 2.5 );
    level._id_11E18.ee_cooldown_duration = getdvarfloat( "scr_br_mxp_ee_cooldown", 1.0 );
    level._id_11E18.kjumptracetestheight = getdvarint( "scr_br_mxp_kk_jump_trace_test_height", 2000 );
    level._id_11E18.kjumpdistancemid = getdvarint( "scr_br_mxp_k_jump_distance_mid", 17500 );
    level._id_11E18.kjumpdistancemidsq = level._id_11E18.kjumpdistancemid * level._id_11E18.kjumpdistancemid;
    level._id_11E18.kjumpdistancelong = getdvarint( "scr_br_mxp_k_jump_distance_long", 27500 );
    level._id_11E18.kjumpdistancelongsq = level._id_11E18.kjumpdistancelong * level._id_11E18.kjumpdistancelong;
    level._id_11E18.kjumpgravitymin = getdvarint( "scr_br_mxp_k_jump_gravity_min", 4000 );
    level._id_11E18.kjumpgravitymid = getdvarint( "scr_br_mxp_k_jump_gravity_mid", 8000 );
    level._id_11E18.kjumpgravitymax = getdvarint( "scr_br_mxp_k_jump_gravity_max", 12500 );
    level._id_11E18.kjumpspeedmin = getdvarint( "scr_br_mxp_k_jump_speed_short_range", 6000 );
    level._id_11E18.kjumpspeedmid = getdvarint( "scr_br_mxp_k_jump_speed_mid_range", 7500 );
    level._id_11E18.kjumpspeedmax = getdvarint( "scr_br_mxp_k_jump_speed_long_range", 9000 );
    level._id_11E18.kgroundpoundstunduration = getdvarint( "scr_mxp_k_ground_pound_stun_duration", 2.0 );
    level._id_11E18.kgroundpoundradius = getdvarint( "scr_mxp_k_ground_pound_radius", 4000 );
    level._id_11E18.kroarduration = getdvarfloat( "scr_mxp_k_roar_duration", 1.25 );
    level._id_11E18.groarduration = getdvarfloat( "scr_mxp_g_roar_duration", 2.5 );
    level._id_11E18.tlightfeedbackduration = getdvarfloat( "scr_mxp_light_feedback_duration", 0.5 );
    level._id_11E18.tmediumfeedbackduration = getdvarfloat( "scr_mxp_medium_feedback_duration", 1.0 );
    level._id_11E18.theavyfeedbackduration = getdvarfloat( "scr_mxp_heavy_feedback_duration", 1.25 );
    level._id_11E18.tlightfeedbackrange = getdvarint( "scr_mxp_light_feedback_range", 10000 );
    level._id_11E18.tmediumfeedbackrange = getdvarint( "scr_mxp_medium_feedback_range", 10000 );
    level._id_11E18.theavyfeedbackrange = getdvarint( "scr_mxp_heavy_feedback_range", 10000 );
    level._id_11E18.wait_for_player_in_gas = getdvarint( "scr_br_mxp_k_min_actions", 2 );
    level._id_11E18.wait_for_player_gulag_respawn = getdvarint( "scr_br_mxp_k_max_actions", 3 );
    level._id_11E18.select_bunker_courtyard_spawners = getdvarfloat( "scr_br_mxp_g_ks_chance", 0.5 );
    level._id_11E18.select_bunker_interior_groups = getdvarint( "scr_br_mxp_g_ks_max", 20000 );
    level._id_11E18.select_bunker_interior_four_spawners = getdvarint( "scr_br_mxp_g_ks_max", 10000 );
    level._id_11E18.gsmallkillstreakradius = getdvarint( "scr_br_mxp_k_gz_small", 1000 );
    level._id_11E18.wait_for_players_init_puzzle = getdvarint( "scr_br_mxp_k_ks_max", 20000 );
    level._id_11E18.wait_for_player_to_getup = getdvarint( "scr_br_mxp_k_ks_max", 8000 );
    level._id_11E18.waitandstartplunderpolling = getdvarint( "scr_br_mxp_k_ks_small", 2000 );
    level._id_11E18.damageperintel = getdvarint( "scr_br_mxp_damage_intel", 300 );
    level._id_11E18.damageuntilnotice = getdvarint( "scr_br_mxp_damage_notice", 1200 );
    level._id_11E18.kswataggroradius = getdvarint( "scr_br_mxp_k_swat_aggro_radius", 6000 );
    level._id_11E18.kswataggroheight = getdvarint( "scr_br_mxp_k_swat_aggro_height", 3500 );
    level._id_11E18.kswatheightoffset = getdvarint( "scr_br_mxp_k_swat_height_offset", 0 );
    level._id_11E18.kswatyawmid = getdvarfloat( "scr_br_mxp_k_swat_yaw_mid", 40.0 );
    level._id_11E18.kswatyawmax = getdvarfloat( "scr_br_mxp_k_swat_yaw_max", 115.0 );
    level._id_11E18.kswatradius = getdvarint( "scr_br_mxp_k_swat_radius", 350 );
    level._id_11E18.kswatheight = getdvarint( "scr_br_mxp_k_swat_height", 500 );
    level._id_11E18.klimitanimspeak = getdvarint( "scr_br_mxp_k_limit_anims_peak", 1 );
    level._id_11E18.kaltcrateattack = getdvarint( "scr_br_mxp_k_alt_crate", 1 );
    level._id_11E18.ggoaldist = getdvarint( "scr_br_mxp_g_goal_dist", 100 );
    level._id_11E18.ggoaldistsquared = level._id_11E18.ggoaldist * level._id_11E18.ggoaldist;
    level._id_11E18.transferanger = getdvarint( "scr_br_mxp_transfer_anger", 1 );
    level._id_11E18.gaimstate = getdvarint( "scr_br_mxp_g_aim_state", 5 );
    level._id_11E18.gtargetairborneheight = getdvarint( "scr_br_mxp_g_target_airborne_height", 500 );
    level._id_11E18.trandomkillstreakcircle = getdvarint( "scr_br_mxp_t_random_killstreak_circle", 6 );
    level._id_11E18.klookdownradius = getdvarint( "scr_br_mxp_k_look_down_radius", 6000 );

    if ( level._id_11E18.wait_for_player_gulag_respawn < level._id_11E18.wait_for_player_in_gas )
        level._id_11E18.wait_for_player_gulag_respawn = level._id_11E18.wait_for_player_in_gas + 1;

    level._id_11E18.kidles = [ "s4_mp_kenosha_idle_breath_01", "s4_mp_kenosha_idle_lookaround_01", "s4_mp_kenosha_idle_taunt_01", "s4_mp_kenosha_idle_knuckles_01", "s4_mp_kenosha_idle_knuckles_02" ];
    level._id_11E18.gidles = [ "s4_mp_greenbay_idle_breath_01", "s4_mp_greenbay_idle_lookaround_01", "s4_mp_greenbay_idle_taunt_01" ];
}

teleportplayertoselection()
{
    game["dialog"]["g_incoming_attack"] = "greenbay_killstreak_active";
    game["dialog"]["g_incoming_attack_player"] = "greenbay_killstreak_active_player";
    game["dialog"]["g_attack_used"] = "oshkosh_device_use_greenbay";
    game["dialog"]["k_incoming_attack"] = "kenosha_killstreak_active";
    game["dialog"]["k_incoming_attack_player"] = "kenosha_killstreak_active_player";
    game["dialog"]["k_attack_used"] = "oshkosh_device_use_kenosha";
    game["dialog"]["k_jump_incoming"] = "kenosha_titan_incoming";
    game["dialog"]["t_incoming_attack_player"] = "titan_killstreak_active";
    game["dialog"]["scream_device_acquired"] = "oshkosh_acquire";
    game["dialog"]["scream_device_acquired_desc"] = "oshkosh_reward_desc";
    game["dialog"]["enemy_scream_device_acquired"] = "oshkosh_acquired_enemy";
}

toggle_ai_settings()
{
    level._id_11E18.notetracks = [];
    var_0 = [];
    var_0 = [ "kenosha_chest_slam", "titan_roar" ];
    level._id_11E18.notetracks["s4_mp_kenosha_idle_taunt_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_idle_bark_01"] = var_0;
    var_0 = [ "kenosha_chest_slam", "titan_roar", "titan_step" ];
    level._id_11E18.notetracks["s4_mp_kenosha_idle_knuckles_01"] = var_0;
    var_0 = [ "kenosha_grab_rock", "kenosha_throw_rock" ];
    level._id_11E18.notetracks["s4_mp_kenosha_toss_attack_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_toss_attack_02"] = var_0;
    var_0 = [ "kenosha_ground_pound" ];
    level._id_11E18.notetracks["s4_mp_kenosha_stomp_attack_01"] = var_0;
    var_0 = [ "kenosha_chest_slam" ];
    level._id_11E18.notetracks["s4_mp_kenosha_swat_attack_fwd_01"] = var_0;
    var_0 = [ "kenosha_chest_slam", "titan_step" ];
    level._id_11E18.notetracks["s4_mp_kenosha_swat_attack_l_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_idle_knuckles_02"] = var_0;
    var_0 = [ "titan_step", "titan_roar" ];
    level._id_11E18.notetracks["s4_mp_kenosha_jump_start_01"] = var_0;
    var_0 = [ "kenosha_stomp" ];
    level._id_11E18.notetracks["s4_mp_kenosha_leg_stomp_attack_01"] = var_0;
    var_0 = [ "kenosha_leap_land" ];
    level._id_11E18.notetracks["s4_mp_kenosha_jump_stomp_01"] = var_0;
    var_0 = [ "titan_step" ];
    level._id_11E18.notetracks["s4_mp_kenosha_swat_attack_r_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_idle_lookaround_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_l_45"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_l_90"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_l_135"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_l_180"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_r_45"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_r_90"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_r_135"] = var_0;
    level._id_11E18.notetracks["s4_mp_kenosha_turn_r_180"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_dive_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_emerge"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_l_45"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_l_90"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_l_135"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_l_180"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_r_45"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_r_90"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_r_135"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_turn_r_180"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_walk_left_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_walk_right_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_walk_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_walk_stop_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_idle_lookaround_01"] = var_0;
    var_0 = [ "titan_roar" ];
    level._id_11E18.notetracks["s4_mp_greenbay_idle_taunt_01"] = var_0;
    var_0 = [ "greenbay_tail_smash" ];
    level._id_11E18.notetracks["s4_mp_greenbay_tail_smash_01"] = var_0;
    level._id_11E18.notetracks["s4_mp_greenbay_idle_bark_01"] = var_0;
}

toggleusbstickinhand()
{
    waittillframeend;
    scripts\mp\utility\disconnect_event_aggregator::registerondisconnecteventcallback( ::onplayerdisconnect );
    thread _id_135FF();
    thread ee_setup();
}

zombieregendelayscaleingas()
{
    level._effect["greenbay_beam"] = loadfx( "vfx/iw8_br/island/gameplay/mendota/vfx_br3_gbay_heatray_beam.vfx" );
}

ee_setup()
{
    if ( getdvarint( "scr_br_mxp_ee_enabled", 1 ) )
    {
        scripts\engine\scriptable::_id_12F5B( "spy_equipment", ::ee_spyequipmentscriptableused );
        var_0 = getentitylessscriptablearrayinradius( "mendota_ee", "targetname" );

        if ( getdvarint( "scr_br_mxp_ee_wait_for_match_start", 1 ) )
        {
            foreach ( var_2 in var_0 )
                var_2 setscriptablepartstate( "spy_equipment", "off" );

            scripts\mp\flags::gameflagwait( "prematch_fade_done" );
        }

        foreach ( var_2 in var_0 )
            var_2 setscriptablepartstate( "spy_equipment", "on" );
    }
}

_id_135FF()
{
    if ( level.agentarray.size < 2 )
        level waittill( "add_agents_to_game" );

    var_0 = getdvarint( "scr_br_alt_mode_mxp", 0 );

    if ( var_0 == 2 )
    {
        set_mission_ai_cap( ( 13496.2, 11587, 8766.97 ), ( 0, 156.672, 0 ) );
        level._id_11E18.setjailtimeouthud = level._id_11E18.setincomingremovedcallback;
        level._id_11E18.setincomingremovedcallback = undefined;
        set_mission_ai_cap( ( -16837.6, -16622, 888.125 ), ( 0, -128.981, 0 ) );
        waitandstartscorepolling( ( 11761, 12636, 8528 ), ( 0, -22, 0 ) );
        level._id_11E18.wait_for_one_player_near_point = level._id_11E18.wait_for_next_hack_complete;
        level._id_11E18.wait_for_next_hack_complete = undefined;
        waitandstartscorepolling( ( -18417.4, -18107.9, 888.125 ), ( 0, 488.342, 0 ) );
    }
    else
    {
        thread set_omnvar_for_icon();
        thread waitfor_trigger_near_obit();
    }

    thread _id_13E32();
}

testing()
{
    level._id_11E18.seq3_tanksettings = [];
    level._id_11E18.seq3_tanksettings = [ players_in_correct_volume( ( -1300, 60000, -640 ) ), players_in_correct_volume( ( 25600, 62360, -640 ) ), players_in_correct_volume( ( 49100, 52054, -640 ) ), players_in_correct_volume( ( 58000, 23000, -640 ) ), players_in_correct_volume( ( 50500, -9000, -640 ) ), players_in_correct_volume( ( 49270, -47613, -640 ) ), players_in_correct_volume( ( 16640, -61500, -640 ) ), players_in_correct_volume( ( -18560, -55888, -640 ) ), players_in_correct_volume( ( -35500, -35000, -640 ) ), players_in_correct_volume( ( -50920, -6128, -640 ) ), players_in_correct_volume( ( -56870, 15000, -640 ) ), players_in_correct_volume( ( -34800, 40600, -640 ) ) ];
}

players_in_correct_volume( var_0 )
{
    var_1 = spawnstruct();
    var_1.origin = var_0;
    var_1.score_event_civilian_killed = reset_use_think( var_0 );
    return var_1;
}

reset_use_think( var_0 )
{
    var_1 = undefined;
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;

    foreach ( var_8, var_6 in level._id_11E18.setlethalonunresolvedcollision )
    {
        var_7 = distance2dsquared( var_6, var_0 );

        if ( !isdefined( var_2 ) || var_7 < var_1 )
        {
            var_3 = var_1;
            var_4 = var_2;
            var_1 = var_7;
            var_2 = var_8;
            continue;
        }

        if ( !isdefined( var_4 ) || var_7 < var_3 )
        {
            var_3 = var_7;
            var_4 = var_8;
        }
    }

    var_9 = var_2 - var_4;

    if ( abs( var_9 ) != 1 && abs( var_9 ) != level._id_11E18.setlethalonunresolvedcollision.size - 1 )
    {

    }

    if ( abs( var_9 ) == level._id_11E18.setlethalonunresolvedcollision.size - 1 )
        var_9 = 0 - var_9;

    return scripts\engine\utility::ter_op( var_9 < 0, var_2, var_4 );
}

sappliedstages()
{
    var_0 = level._id_11E18.setincomingremovedcallback scripts\engine\utility::array_sort_with_func( getarraykeys( level._id_11E18.seq3_tanksettings ), ::post_race );

    if ( !isdefined( level.br_circle.dangercircleent ) )
    {
        var_1 = level._id_11E18.seq3_tanksettings[var_0[0]];
        return [ var_1.score_event_civilian_killed, var_1.origin ];
    }

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = var_0[var_2];
        var_1 = level._id_11E18.seq3_tanksettings[var_3];

        if ( scripts\mp\gametypes\br_circle.gsc::ispointincurrentsafecircle( var_1.origin ) )
            return [ var_1.score_event_civilian_killed, var_1.origin ];
    }

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = var_0[var_2];
        var_1 = level._id_11E18.seq3_tanksettings[var_3];

        if ( scripts\mp\gametypes\br_circle.gsc::updateprestreamrespawn( var_1.origin ) )
            return [ var_1.score_event_civilian_killed, var_1.origin ];
    }

    var_1 = level._id_11E18.seq3_tanksettings[var_0[0]];
    return [ var_1.score_event_civilian_killed, var_1.origin ];
}

post_race( var_0, var_1 )
{
    var_2 = level._id_11E18.seq3_tanksettings[var_0].origin;
    var_3 = level._id_11E18.seq3_tanksettings[var_1].origin;
    return distancesquared( var_2, self.origin ) < distancesquared( var_3, self.origin );
}

set_mission_ai_cap( var_0, var_1 )
{
    var_2 = !isdefined( level._id_11E18.setincomingremovedcallback );

    if ( var_2 )
    {
        level._id_11E18.setincomingremovedcallback = spawnnewagent( "greenbay", "wz_mv_greenbay", var_0, var_1, 3000, 8100, ::postgamehitmarkerwaittime );
        level._id_11E18.setincomingremovedcallback unmarkkeyframedmover( 1 );
        level._id_11E18.setincomingremovedcallback _id_13E31( "ui_mp_br_icon_greenbay", 8100 );
        _id_13187( 0, level._id_11E18.setincomingremovedcallback getentitynumber() );
        level._id_11E18.setincomingremovedcallback.turnrate = 0.01;
        level._id_11E18.setincomingremovedcallback.linked_mover = 0;
        level._id_11E18.setincomingremovedcallback.playerdamage = [];
        level._id_11E18.setincomingremovedcallback.angertargets = [];
        level._id_11E18.setincomingremovedcallback sethitlocdamagetable( "ai_mv_lochit_dmgtable" );
        level._id_11E18.setincomingremovedcallback.x1fin_respawn = spawn( "script_model", var_0 );
        level._id_11E18.setincomingremovedcallback.x1fin_respawn setmodel( "tag_origin" );
        level._id_11E18.setincomingremovedcallback.x1fin_respawn unmarkkeyframedmover( 1 );
        level._id_11E18.setincomingremovedcallback.clear_look_at_ent = spawn( "script_model", var_0 );
        level._id_11E18.setincomingremovedcallback.clear_look_at_ent setmodel( "tag_player" );
        level._id_11E18.setincomingremovedcallback.clear_look_at_ent unmarkkeyframedmover( 1 );
        level._id_11E18.setincomingremovedcallback.clear_look_at_ent linkto( level._id_11E18.setincomingremovedcallback, "tag_mouth_fx", ( 0, 0, 0 ), ( 0, 90, 0 ) );
        level._id_11E18.setincomingremovedcallback.breathattachent = spawn( "script_model", var_0 );
        level._id_11E18.setincomingremovedcallback.breathattachent setmodel( "tag_origin_greenbay" );
        level._id_11E18.setincomingremovedcallback.breathattachent unmarkkeyframedmover( 1 );
        level._id_11E18.setincomingremovedcallback.breathattachent linkto( level._id_11E18.setincomingremovedcallback, "tag_mouth_fx", ( 0, 0, 0 ), ( 0, 0, 0 ), 1 );

        if ( getdvarint( "scr_br_mxp_gk_precise_collision", 1 ) )
            level._id_11E18.setincomingremovedcallback thread ginitializeplayercollision();
        else
        {
            var_3 = level._id_11E18.setincomingremovedcallback gkkilltriggercreate( 3000, 8100, "tag_origin" );
            level._id_11E18.setincomingremovedcallback.collisionkilltriggers = [ var_3 ];
        }
    }
    else
    {
        level._id_11E18.setincomingremovedcallback _id_13E37();
        level._id_11E18.setincomingremovedcallback asmsetstate( level._id_11E18.setincomingremovedcallback.asmname, "idle" );
        level._id_11E18.setincomingremovedcallback.origin = var_0;
        level._id_11E18.setincomingremovedcallback.x1fin_respawn.origin = var_0;
    }

    level._id_11E18.setincomingremovedcallback orientmode( "face current angles" );
    level._id_11E18.setincomingremovedcallback setplayerangles( var_1 );
    level._id_11E18.setincomingremovedcallback.x1fin_respawn.angles = var_1;
    return level._id_11E18.setincomingremovedcallback;
}

ginitializeplayercollision()
{
    var_0 = self;
    var_0 endon( "death" );
    var_0 agentsetclipmode( "large" );
    var_1 = 0.1;
    var_0.collisionlist = [];
    var_2 = getentarray( "greenbay_collision", "targetname" );

    foreach ( var_4 in var_2 )
    {
        var_5 = "?";
        var_6 = ( 0, 0, 0 );
        var_7 = ( 0, 0, 0 );
        var_8 = var_4.script_noteworthy;

        if ( var_8 == "head" )
        {
            var_5 = "j_head";
            var_6 = ( 360, 190, 35 );
            var_7 = ( 0, 0, -90 );
        }
        else if ( var_8 == "body" )
        {
            var_5 = "j_spine4";
            var_6 = ( -1670, -420, 30 );
            var_7 = ( 0, -41, -90 );
        }
        else
        {

        }

        var_9 = spawnstruct();
        var_9.colliderent = var_4;
        var_9.tagname = var_5;
        var_9.originoffset = var_6;
        var_9.angleoffset = var_7;
        var_0.collisionlist[var_8] = var_9;
    }

    var_11 = var_0 gkkilltriggercreate( 400, 500, "j_head", 1, ( 50, -80, -250 ), ( 0, 0, 0 ) );
    wait( var_1 );
    var_12 = var_0 gkkilltriggercreate( 230, 1100, "j_elbow_le", 1, ( 100, -80, 10 ), ( 0, 100, 100 ) );
    var_13 = var_0 gkkilltriggercreate( 230, 1100, "j_elbow_ri", 1, ( 100, -80, 10 ), ( 0, 100, 80 ) );
    wait( var_1 );
    var_14 = var_0 gkkilltriggercreate( 550, 1900, "j_knee_le", 1, ( -400, -100, -100 ), ( 90, 0, -10 ) );
    var_15 = var_0 gkkilltriggercreate( 550, 1900, "j_knee_ri", 1, ( -400, -100, 100 ), ( 90, 0, -10 ) );
    wait( var_1 );
    var_16 = var_0 gkkilltriggercreate( 800, 3300, "j_spine4", 1, ( -3350, -1050, 0 ), ( 90, 0, -10 ) );
    var_17 = var_0 gkkilltriggercreate( 800, 4800, "j_spine4", 1, ( -4000, 550, 0 ), ( 90, 0, -5 ) );
    level._id_11E18.setincomingremovedcallback.collisionkilltriggers = [ var_11, var_12, var_13, var_14, var_15, var_16, var_17 ];
    var_0.collisioninitialized = 1;
    var_0 thread gkrunplayercollision( 0 );
}

_id_1436F()
{
    if ( isdefined( level._id_11E18.setincomingremovedcallback.idleanim ) )
    {
        while ( getanimlength( level._id_11E18.setincomingremovedcallback.idleanim ) == 0 )
            waitframe();
    }
}

waitandstartscorepolling( var_0, var_1 )
{
    if ( !isdefined( level._id_11E18.wait_for_next_hack_complete ) )
    {
        level._id_11E18.wait_for_next_hack_complete = spawnnewagent( "kenosha", "wz_mv_kenosha_anim_body", var_0, var_1, 850, 3400 );
        level._id_11E18.wait_for_next_hack_complete attach( "wz_mv_kenosha_anim_head" );
        level._id_11E18.wait_for_next_hack_complete unmarkkeyframedmover( 1 );
        level._id_11E18.wait_for_next_hack_complete _id_13E31( "ui_mp_br_icon_kenosha", 3400 );
        _id_13187( 1, level._id_11E18.wait_for_next_hack_complete getentitynumber() );
        level._id_11E18.wait_for_next_hack_complete.turnrate = 0.01;
        level._id_11E18.wait_for_next_hack_complete.playerdamage = [];
        level._id_11E18.wait_for_next_hack_complete.angertargets = [];
        level._id_11E18.wait_for_next_hack_complete sethitlocdamagetable( "ai_mv_lochit_dmgtable" );
        level._id_11E18.wait_for_next_hack_complete.x1fin_respawn = spawn( "script_model", var_0 );
        level._id_11E18.wait_for_next_hack_complete.x1fin_respawn setmodel( "tag_origin" );
        level._id_11E18.wait_for_next_hack_complete.x1fin_respawn unmarkkeyframedmover( 1 );
        level._id_11E18.wait_for_next_hack_complete khandkilltriggers( 1 );

        if ( getdvarint( "scr_br_mxp_gk_precise_collision", 1 ) )
            level._id_11E18.wait_for_next_hack_complete thread kinitializeplayercollision();
        else
        {
            var_2 = level._id_11E18.wait_for_next_hack_complete gkkilltriggercreate( 850, 3400, "tag_origin" );
            level._id_11E18.wait_for_next_hack_complete.collisionkilltriggers = [ var_2 ];
        }
    }
    else
    {
        level._id_11E18.wait_for_next_hack_complete _id_13E37();
        level._id_11E18.wait_for_next_hack_complete asmsetstate( level._id_11E18.wait_for_next_hack_complete.asmname, "idle" );
        level._id_11E18.wait_for_next_hack_complete.origin = var_0;
        level._id_11E18.wait_for_next_hack_complete.x1fin_respawn.origin = var_0;
    }

    level._id_11E18.wait_for_next_hack_complete.angles = var_1;
    level._id_11E18.wait_for_next_hack_complete.x1fin_respawn.angles = var_1;
    return level._id_11E18.wait_for_next_hack_complete;
}

gkkilltriggercreate( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = self;
    var_7 = scripts\engine\utility::ter_op( istrue( var_3 ), "trigger_rotatable_radius", "trigger_radius" );
    var_8 = scripts\engine\utility::ter_op( isdefined( var_4 ), var_4, ( 0, 0, 0 ) );
    var_9 = scripts\engine\utility::ter_op( isdefined( var_5 ), var_5, ( 0, 0, 0 ) );
    var_10 = spawn( var_7, var_6.origin, 0, var_0, var_1 );
    var_10.targetname = "mxpTrigger";
    var_10.radius = var_0;
    var_10.height = var_1;
    var_10.ownertitan = var_6;
    var_10 enablelinkto();
    var_10 linkto( var_6, var_2, var_8, var_9 );
    var_10 thread _id_13DCE();
    scripts\mp\utility\trigger::makeenterexittrigger( var_10, ::secretstashlootcacheused );
    return var_10;
}

gkkilltriggerdestroy()
{
    self notify( "destroy" );
    self delete();
}

_id_14372()
{
    if ( isdefined( level._id_11E18.wait_for_next_hack_complete.idleanim ) )
    {
        while ( getanimlength( level._id_11E18.wait_for_next_hack_complete.idleanim ) == 0 )
            waitframe();
    }
}

_id_13E32()
{
    if ( getdvarint( "scr_br_mxp_t_prematch", 0 ) == 0 )
    {
        scripts\mp\flags::gameflagwait( "prematch_fade_done" );
        waittillframeend;
    }

    for (;;)
    {
        level._id_11E18.setincomingremovedcallback _meth_87BC( gettime() + 10000 );
        level._id_11E18.wait_for_next_hack_complete _meth_87BC( gettime() + 10000 );
        waitframe();
    }
}

_id_13E31( var_0, var_1 )
{

}

set_omnvar_for_icon()
{
    if ( getdvarint( "scr_br_mxp_t_prematch", 0 ) == 0 )
        scripts\mp\flags::gameflagwait( "prematch_fade_done" );

    [var_1, var_2, var_3] = set_recent_spawn_time_threshold_override();
    level._id_11E18.setlastdroppableweaponobj = var_3;
    set_mission_ai_cap( var_1, var_2 );
    _id_1436F();
    gstartnotifywatchers();
    set_player_hurt_trigger();
}

set_pitch_roll_for_ground_normal()
{
    for (;;)
    {
        [var_1, var_2, var_3] = set_recent_spawn_time_threshold_override( 20 );
        level._id_11E18.setlastdroppableweaponobj = var_3;
        set_mission_ai_cap( var_1, var_2 );
        wait 1;
        var_4 = level._id_11E18.setincomingremovedcallback;
        set_maze_ai_stealth_settings( 0 );
        var_4.linked_mover = 0;
        set_relic_dogtags( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_grounded( var_4, 12 );
        waitframe();
        level._id_11E18.setlastdroppableweaponobj = 0;
        set_relic_grounded( var_4, 0 );
        set_relic_gas_martyr( var_4 );
        waitframe();
        set_relic_dogtags( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_grounded( var_4, 12 );
        waitframe();
        level._id_11E18.setlastdroppableweaponobj = 1;
        set_relic_gas_martyr( var_4 );
        waitframe();
        set_relic_dogtags( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_grounded( var_4, 12 );
        waitframe();
        level._id_11E18.setlastdroppableweaponobj = 2;
        set_relic_gas_martyr( var_4 );
        waitframe();
        set_relic_dogtags( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_grounded( var_4, 12 );
        waitframe();
        level._id_11E18.setlastdroppableweaponobj = 3;
        set_relic_gas_martyr( var_4 );
        waitframe();
        set_relic_dogtags( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_grounded( var_4, 12 );
        waitframe();
        level._id_11E18.setlastdroppableweaponobj = 4;
        set_relic_gas_martyr( var_4 );
        waitframe();
        set_relic_dogtags( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_dfa( var_4 );
        waitframe();
        set_relic_grounded( var_4, 12 );
        waitframe();
        level._id_11E18.setlastdroppableweaponobj = 5;
        set_relic_grounded( var_4, 0 );
    }
}

set_recent_spawn_time_threshold_override( var_0 )
{
    [var_2, var_3] = sat_choose_missing_piece();
    var_4 = scripts\engine\utility::ter_op( var_2 + 1 < level._id_11E18.setlethalonunresolvedcollision.size, var_2 + 1, 0 );
    var_5 = level._id_11E18.setlethalonunresolvedcollision[var_4];
    var_6 = var_5 - var_3;
    var_7 = vectortoangles( var_6 );
    return [ var_3, var_7, var_2 ];
}

sat_choose_missing_piece()
{
    var_0 = randomint( level._id_11E18.setlethalonunresolvedcollision.size );
    var_1 = level._id_11E18.setlethalonunresolvedcollision[var_0];
    var_2 = 0;

    if ( getdvarint( "scr_br_mxp_g_close_to_plane", 1 ) > 0 && level.mapname == "mp_wz_island" && isdefined( level.infilstruct ) )
    {
        var_3 = [];
        var_4 = level.infilstruct.c130pathstruct._id_1386E;
        var_3 = ggetstartcanidates( var_3, var_4 );

        if ( var_3.size == 0 )
        {
            var_4 = level.infilstruct.c130pathstruct.neurotoxin_damage_monitor;
            var_3 = ggetstartcanidates( var_3, var_4 );
        }

        if ( var_3.size > 0 )
        {
            level._id_11E18.canidateindexes = var_3.size;
            var_5 = randomint( var_3.size );
            var_0 = var_3[var_5];
            var_1 = level._id_11E18.setlethalonunresolvedcollision[var_0];
            return [ var_0, var_1 ];
        }

        var_2 = 1;
    }

    if ( getdvarint( "scr_br_mxp_normal_circle", 0 ) == 0 || istrue( var_2 ) )
    {
        for ( var_6 = 0; updateachievementhangtime( var_1 ) && var_6 < level._id_11E18.setlethalonunresolvedcollision.size; var_6++ )
        {
            var_0 = scripts\engine\utility::ter_op( var_0 + 1 < level._id_11E18.setlethalonunresolvedcollision.size, var_0 + 1, 0 );
            var_1 = level._id_11E18.setlethalonunresolvedcollision[var_0];
        }
    }

    return [ var_0, var_1 ];
}

ggetstartcanidates( var_0, var_1 )
{
    var_2 = getdvarfloat( "scr_br_mxp_g_distance_to_plane", 25000.0 );
    var_3 = var_2 * var_2;

    foreach ( var_7, var_5 in level._id_11E18.setlethalonunresolvedcollision )
    {
        if ( updateachievementhangtime( var_5 ) )
            continue;

        var_6 = distance2dsquared( var_5, var_1 );

        if ( var_6 < var_3 )
            var_0[var_0.size] = var_7;
    }

    return var_0;
}

post_safeges_weapon()
{
    var_0 = [];
    var_0[var_0.size] = ( -6969, -62217, -628 );
    var_0[var_0.size] = ( 35110, -65651, -628 );

    if ( getdvarint( "scr_br_mxp_skip_path", 0 ) == 0 )
    {
        var_0[var_0.size] = ( 49127, -52078, -628 );
        var_0[var_0.size] = ( 57520, -35449, -628 );
        var_0[var_0.size] = ( 60361, 48474, -628 );
        var_0[var_0.size] = ( 22320, 64983, -628 );
        var_0[var_0.size] = ( -22917, 64110, -628 );
        var_0[var_0.size] = ( -34118, 57593, -628 );
        var_0[var_0.size] = ( -35796, 38018, -628 );
        var_0[var_0.size] = ( -53281, 23823, -628 );
        var_0[var_0.size] = ( -53567, 1284, -628 );
        var_0[var_0.size] = ( -56000, -7500, -628 );
        var_0[var_0.size] = ( -57800, -19500, -628 );
        var_0[var_0.size] = ( -28765, -49330, -628 );
    }

    level._id_11E18.setlethalonunresolvedcollision = var_0;
    playerzombiesetuphud();
}

playerzombiesetuphud()
{
    var_0 = getdvarint( "scr_br_mxp_g_node_dist", 20000 );
    var_1 = [];
    var_1[var_1.size] = level._id_11E18.setlethalonunresolvedcollision[0];

    for ( var_2 = 0; var_2 < level._id_11E18.setlethalonunresolvedcollision.size - 1; var_2++ )
    {
        var_3 = var_2;
        var_4 = scripts\engine\utility::ter_op( var_3 + 1 < level._id_11E18.setlethalonunresolvedcollision.size, var_3 + 1, 0 );
        var_5 = level._id_11E18.setlethalonunresolvedcollision[var_3];
        var_6 = level._id_11E18.setlethalonunresolvedcollision[var_4];
        var_7 = distance( var_5, var_6 );
        var_8 = int( var_7 / var_0 );

        if ( var_8 > 1 )
        {
            var_9 = var_7 / var_8;
            var_10 = vectornormalize( var_6 - var_5 );

            for ( var_11 = 1; var_11 < var_8; var_11++ )
            {
                var_12 = var_5 + var_10 * var_11 * var_9;
                var_1[var_1.size] = var_12;
            }
        }

        var_1[var_1.size] = level._id_11E18.setlethalonunresolvedcollision[var_4];
    }

    level._id_11E18.setlethalonunresolvedcollision = var_1;
}

set_player_hurt_trigger()
{
    var_0 = level._id_11E18.setincomingremovedcallback;
    set_maze_ai_stealth_settings( 0 );
    var_0.chopper_carepackage = undefined;
    set_distances_for_groups( var_0 );

    for (;;)
    {
        if ( score_message() )
        {
            waitframe();
            continue;
        }

        var_1 = sat_computer_think_new();

        if ( isdefined( var_0._id_12930 ) && !sales_discount() )
            [[ var_0._id_12930 ]]( var_0 );
        else if ( var_1 == 14 && !sales_discount() )
            gstatetalk( var_0 );
        else if ( var_1 == 15 && !sales_discount() )
            gstatetalkwait( var_0 );
        else if ( isdefined( var_0.vo_one_remain ) && !sales_discount() )
        {
            set_relic_grounded( var_0, 12, 0 );
            set_relic_aggressive_melee_params( var_0 );
        }
        else if ( var_1 == 12 )
        {
            set_relic_aggressive_melee( var_0 );
            set_relic_doubletap( var_0 );
        }
        else if ( ginwalkingstate() )
        {
            if ( score_event_kill( var_0 ) )
            {
                set_relic_grounded( var_0, 12, 1 );
                set_player_munition_currency( var_0 );
            }
            else
                set_relic_dfa( var_0 );
        }
        else if ( var_1 == 6 )
        {

        }
        else if ( var_1 == 5 )
            set_relic_amped( var_0 );
        else if ( var_1 == 7 )
        {
            set_player_munition_currency( var_0 );
            set_relic_bang_and_boom( var_0 );
        }
        else
        {
            var_2 = gismovingtocircle( var_0 ) && !ghasreachedcircle( var_0 );
            set_relic_focus_fire( var_0, var_2 );
        }

        waitframe();
    }
}

set_player_munition_currency( var_0 )
{
    var_1 = sandboxprintlinebold( var_0 );
    level._id_11E18.setlastdroppableweaponobj = var_1;

    if ( gismovingtocircle( var_0 ) && ghasreachedcircle( var_0 ) )
        gsetmovetocircle( var_0, undefined );

    if ( sales_discount() )
        set_relic_headbullets();
}

set_relic_aggressive_melee( var_0 )
{
    if ( istrue( var_0.tofinalnode ) )
        return;

    if ( isdefined( level._id_11E18.score_event_headshot ) && !sales_discount() )
    {
        var_1 = level._id_11E18.setlethalonunresolvedcollision[level._id_11E18.score_event_headshot];

        if ( update_volume_flag( var_1 ) )
        {
            [var_3, var_4, var_5] = set_minigun_target_loc( var_0, level._id_11E18.score_event_headshot );

            if ( isdefined( var_4 ) )
                gupdateintelcrates( level._id_11E18.score_event_headshot, var_4 );

            level._id_11E18.score_event_headshot = var_4;
        }

        if ( isdefined( level._id_11E18.score_event_headshot ) && level._id_11E18.setlastdroppableweaponobj != level._id_11E18.score_event_headshot && !score_init( var_0, level._id_11E18.score_event_headshot ) )
            var_0.linked_mover = !var_0.linked_mover;
    }

    if ( !sales_discount() )
    {
        [var_3, var_4, var_5] = set_minigun_target_loc( var_0 );

        if ( var_5 || score_event_nuked( var_0 ) )
        {
            if ( level._id_11E18.setlastdroppableweaponobj == var_4 )
                var_4 = undefined;

            gsetmovetocircle( var_0, var_4 );
            var_0.tofinalnode = var_5;

            if ( var_3 )
                var_0.linked_mover = !var_0.linked_mover;
        }
    }
}

set_distances_for_groups( var_0 )
{
    var_0.nodeidle = 0;
    var_0._id_11EA7 = 0;
}

set_relic_doubletap( var_0 )
{
    if ( sendendofmatchdata( var_0 ) )
    {
        set_distances_for_groups( var_0 );

        if ( gismovingtocircle( var_0 ) )
            set_maze_ai_stealth_settings( 5 );
        else
            set_maze_ai_stealth_settings( 0 );
    }
    else if ( !istrue( var_0.tofinalnode ) && tisreadytotalk( var_0 ) )
    {
        var_0.talknexttime = gettime() + getdvarint( "scr_br_mxp_next_talk", 40000 );
        set_maze_ai_stealth_settings( 14 );
        waitandstartparachuteoverheadmonitoring( 9 );
    }
    else
    {
        if ( istrue( var_0.tofinalnode ) )
            var_0._id_11EA7 = 0;

        if ( var_0 tcanrandomkillstreak() && randomfloat( 1.0 ) <= level._id_11E18.select_bunker_courtyard_spawners )
            set_relic_doubletap_params_internal( var_0 );
        else
        {
            var_0._id_11EA7 = 1;
            set_relic_doubletap_params( var_0 );
        }
    }
}

gsetmovetocircle( var_0, var_1 )
{
    var_0.chopper_carepackage = var_1;
}

gismovingtocircle( var_0 )
{
    return isdefined( var_0.chopper_carepackage );
}

ghasreachedcircle( var_0 )
{
    return var_0.chopper_carepackage == level._id_11E18.setlastdroppableweaponobj;
}

sendendofmatchdata( var_0 )
{
    if ( getdvarint( "scr_br_mxp_g_force_stay", 0 ) > 0 )
    {
        set_distances_for_groups( var_0 );
        return 0;
    }

    if ( sales_discount() )
        return 1;
    else if ( istrue( var_0.tofinalnode ) )
        return gismovingtocircle( var_0 );
    else if ( gismovingtocircle( var_0 ) )
        return 1;
    else if ( score_event_nuked( var_0 ) )
        return 0;
    else if ( tisreadytotalk( var_0 ) )
        return 0;
    else if ( score_event_fob_cleared() && !positioncheck( var_0 ) )
        return 1;
    else if ( !score_event_fob_cleared() && ( var_0.nodeidle || var_0._id_11EA7 ) )
        return 1;

    return 0;
}

send_wave_spawns_to_roof( var_0 )
{
    if ( score_event_fob_cleared() && positioncheck( var_0 ) )
    {
        var_1 = sandbox_safe_area();

        if ( isdefined( var_1 ) )
            return 1;
    }

    return 0;
}

positioncheck( var_0 )
{
    if ( score_event_fob_cleared() )
        return level._id_11E18.score_event_headshot == level._id_11E18.setlastdroppableweaponobj;

    return 0;
}

score_event_fob_cleared()
{
    if ( isdefined( level._id_11E18.score_event_headshot ) )
        return 1;

    return 0;
}

isintelcratevalid( var_0 )
{
    return isdefined( var_0 ) && isdefined( var_0.trial_flares ) && isdefined( var_0.trial_flares.type ) && isdefined( var_0.trial_flares.index ) && isdefined( var_0.trial_flares.expiretime );
}

sandbox_safe_area()
{
    foreach ( var_1 in level.train_hurt_damage_watcher )
    {
        if ( isintelcratevalid( var_1 ) && var_1.trial_flares.type == "g" && var_1.trial_flares.index == level._id_11E18.setlastdroppableweaponobj && gettime() >= var_1.trial_flares.expiretime )
            return var_1;
    }
}

sandbox_safe_area_count()
{
    foreach ( var_1 in level.train_hurt_damage_watcher )
    {
        if ( isintelcratevalid( var_1 ) && var_1.trial_flares.type == "g" && var_1.trial_flares.index == level._id_11E18.setlastdroppableweaponobj )
            return var_1;
    }
}

gupdateintelcrates( var_0, var_1 )
{
    foreach ( var_3 in level.train_hurt_damage_watcher )
    {
        if ( isintelcratevalid( var_3 ) && var_3.trial_flares.type == "g" && var_3.trial_flares.index == var_0 )
            var_3.trial_flares.index = var_1;
    }
}

score_event_nuked( var_0 )
{
    if ( update_volume_flag( var_0.origin ) && !gismovingtocircle( var_0 ) )
        return 1;

    if ( gismovingtocircle( var_0 ) )
    {
        if ( istrue( var_0.tofinalnode ) )
            return 0;
        else if ( ghasreachedcircle( var_0 ) )
            return 0;

        var_1 = level._id_11E18.setlethalonunresolvedcollision[var_0.chopper_carepackage];

        if ( update_volume_flag( var_1 ) )
            return 1;

        if ( !score_event_turret_killed( var_0 ) )
            return 1;
    }

    return 0;
}

score_event_turret_killed( var_0 )
{
    return score_init( var_0, var_0.chopper_carepackage );
}

score_init( var_0, var_1 )
{
    var_2 = level._id_11E18.setlastdroppableweaponobj - var_1;

    if ( abs( var_2 ) > 0 )
    {
        var_3 = 0;
        var_4 = 0;

        if ( var_2 > 0 )
        {
            var_3 = var_2;
            var_4 = level._id_11E18.setlethalonunresolvedcollision.size - level._id_11E18.setlastdroppableweaponobj + var_1;
        }
        else
        {
            var_4 = 0 - var_2;
            var_3 = level._id_11E18.setlethalonunresolvedcollision.size - var_1 + level._id_11E18.setlastdroppableweaponobj;
        }

        if ( var_3 < var_4 && var_0.linked_mover )
            return 1;
        else if ( var_4 < var_3 && !var_0.linked_mover )
            return 1;
    }

    return 0;
}

set_minigun_target_loc( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = level._id_11E18.setlastdroppableweaponobj;

    var_2 = var_1;
    var_3 = var_1;

    for ( var_4 = 0; var_4 < level._id_11E18.setlethalonunresolvedcollision.size; var_4++ )
    {
        var_2 = sandboxprintlinebold( var_0, var_2 );
        var_5 = level._id_11E18.setlethalonunresolvedcollision[var_2];

        if ( !update_volume_flag( var_5 ) )
            return [ 0, var_2, 0 ];

        var_3 = sandboxprintlineboldwait( var_0, var_3 );
        var_6 = level._id_11E18.setlethalonunresolvedcollision[var_3];

        if ( !update_volume_flag( var_6 ) )
            return [ 1, var_3, 0 ];
    }

    var_7 = undefined;
    var_8 = 0;

    if ( isdefined( level._id_11BCE ) && isdefined( level._id_11BCE._id_12E2C ) )
    {
        var_7 = level._id_11BCE._id_12E2C.score_event_civilian_killed;

        if ( var_7 == var_1 )
            var_7 = var_1;
        else
        {
            var_2 = var_1;
            var_3 = var_1;

            for ( var_4 = 0; var_4 < level._id_11E18.setlethalonunresolvedcollision.size; var_4++ )
            {
                var_2 = sandboxprintlinebold( var_0, var_2 );
                var_5 = level._id_11E18.setlethalonunresolvedcollision[var_2];

                if ( var_2 == var_7 )
                    break;

                var_3 = sandboxprintlineboldwait( var_0, var_3 );

                if ( var_3 == var_7 )
                {
                    var_8 = 1;
                    break;
                }
            }
        }
    }

    return [ var_8, var_7, 1 ];
}

set_maze_ai_stealth_settings( var_0 )
{
    level._id_11E18.setincomingremovedcallback.state = var_0;
}

sat_computer_think_new()
{
    return level._id_11E18.setincomingremovedcallback.state;
}

ginnodestate()
{
    var_0 = sat_computer_think_new();
    return var_0 == 0 || var_0 == 12;
}

score_event_enemy_killed()
{
    return sat_computer_think_new() == 9;
}

ginwalkingstate()
{
    var_0 = sat_computer_think_new();
    return var_0 == 2 || var_0 == 3;
}

sandbox_combat_area_bits( var_0 )
{
    var_1 = sandboxprintlinebold( var_0 );
    var_2 = level._id_11E18.setlethalonunresolvedcollision[var_1];
    var_3 = distance2d( var_2, var_0.origin );
    return var_3;
}

gmonitorgoal( var_0 )
{
    var_0 notify( "goal_stopped" );
    var_0 endon( "goal_stopped" );
    var_0 endon( "walk_cycle_done" );

    for (;;)
    {
        if ( score_event_kill( var_0 ) )
        {
            var_0 notify( "goal_reached" );
            set_relic_grounded( var_0, 12, 1 );
            set_player_munition_currency( var_0 );
            return;
        }

        waitframe();
    }
}

score_event_kill( var_0 )
{
    var_1 = 100;
    var_2 = sandboxprintlinebold( var_0 );
    var_3 = level._id_11E18.setlethalonunresolvedcollision[var_2];
    var_4 = distance2d( var_0.origin, var_3 );

    if ( var_4 <= level._id_11E18.ggoaldist )
        return 1;

    var_5 = level._id_11E18.setlethalonunresolvedcollision[level._id_11E18.setlastdroppableweaponobj];
    var_6 = var_3 - var_5;
    var_7 = var_3 - var_0.origin;
    var_8 = vectordot( var_6, var_7 );
    return var_8 <= 0;
}

set_relic_doubletap_params_internal( var_0 )
{
    var_1 = tgetnextangertarget( var_0 );

    if ( !isdefined( var_1 ) )
    {
        if ( send_wave_spawns_to_roof( var_0 ) )
            var_1 = sandbox_safe_area();

        if ( !isdefined( var_1 ) )
            var_1 = var_0 scripts\mp\gametypes\_mxp_target.gsc::pristinestatehealthadd( level._id_11E18.wait_for_player_to_getup, level._id_11E18.wait_for_players_init_puzzle );
    }
    else
        tremoveangertarget( var_0, var_1 );

    if ( isdefined( var_1 ) )
    {
        var_2 = randomizeattacklocation( var_1.origin, level._id_11E18.gsmallkillstreakradius );
        var_3 = vectortoangles( var_2 - var_0.origin );
    }
    else
    {
        var_4 = sandboxprintlinebold( var_0 );
        var_5 = level._id_11E18.setlethalonunresolvedcollision[var_4];
        var_2 = var_5 + ( 0, 0, 12000 );
        var_6 = var_0 gettagorigin( "j_head" );
        var_7 = var_2 - var_6;
        var_3 = vectortoangles( var_7 );
    }

    var_8 = scripts\mp\gametypes\br_public.gsc::modifyplayer_damage( var_2 );
    var_9 = level._id_11E18.gtargetairborneheight < var_2[2] - var_8[2];

    if ( var_9 )
        _getrandomlocations::greenbaystrikeatpoint( var_2, var_3, level._id_11E18.gsmallkillstreakradius );
    else
        _getrandomlocations::serverroomdogtagrevive( var_8, var_3, level._id_11E18.gsmallkillstreakradius );

    var_0._id_11EA7 = 1;
}

randomizeattacklocation( var_0, var_1 )
{
    var_2 = randomfloat( var_1 * 0.8 );
    var_3 = randomfloatrange( -180.0, 180.0 );
    var_4 = ( 0, var_3, 0 );
    var_5 = anglestoforward( var_4 );
    return var_0 + var_5 * var_2;
}

set_pressure_stability_reading( var_0, var_1 )
{
    var_2 = vectortoangles( var_1.origin - var_0.origin );
    var_3 = _getrandomlocations::serverroomdogtagrevive( var_1.origin, var_2 );
}

update_volume_flag( var_0 )
{
    if ( !isdefined( level.br_circle ) || !isdefined( level.br_circle.dangercircleent ) )
        return 0;

    return !scripts\mp\gametypes\br_circle.gsc::updateprestreamrespawn( var_0 );
}

updateachievementhangtime( var_0 )
{
    return !updaterespawnstatus( var_0 );
}

updaterespawnstatus( var_0 )
{
    var_1 = relic_steelballs_stump_monitor();
    var_2 = float( relic_team_proximity_monitor() );
    var_3 = distance2dsquared( var_0, var_1 );

    if ( var_3 < var_2 * var_2 )
        return 1;

    return 0;
}

relic_steelballs_stump_monitor()
{
    return level.br_level.default_class_chosen[1];
}

relic_team_proximity_monitor()
{
    return level.br_level.br_circleradii[1];
}

set_relic_dogtags( var_0 )
{
    set_relic_gas_martyr( var_0 );
    set_maze_ai_stealth_settings( 1 );
    var_0 _id_13C1D( "s4_mp_greenbay_walk_start_01" );
    set_maze_ai_stealth_settings( 2 );
}

set_relic_dfa( var_0, var_1 )
{
    var_0 endon( "goal_reached" );
    var_0 endon( "goal_interrupted" );
    thread gmonitorgoal( var_0 );
    var_2 = sat_computer_think_new();
    var_3 = 1;

    if ( var_2 == 2 )
    {
        if ( scripts\engine\utility::cointoss() || istrue( var_1 ) )
            var_0 _id_13C1D( "s4_mp_greenbay_walk_01" );
        else
        {
            set_maze_ai_stealth_settings( 3 );

            if ( var_0.linked_mover )
                var_0 _id_13C1D( "s4_mp_greenbay_walk_right_01" );
            else
                var_0 _id_13C1D( "s4_mp_greenbay_walk_left_01" );

            var_3 = 0;
        }
    }
    else
    {
        set_maze_ai_stealth_settings( 2 );
        var_0 _id_13C1D( "s4_mp_greenbay_walk_01" );
    }

    var_0 notify( "walk_cycle_done" );
}

set_relic_doomslayer( var_0 )
{
    var_0 notify( "goal_stopped" );
    var_0 _id_13C1D( "s4_mp_greenbay_walk_stop_01" );
}

set_relic_amped( var_0 )
{
    set_relic_gas_martyr( var_0 );
    set_maze_ai_stealth_settings( 5 );
    var_0 _id_13C1D( "s4_mp_greenbay_dive_01" );
    set_maze_ai_stealth_settings( 6 );
    var_0 _id_13C1C( "s4_mp_greenbay_swim_01" );
    var_1 = sandboxprintlinebold( var_0 );
    var_2 = level._id_11E18.setlethalonunresolvedcollision[var_1];
    thread gstatemovetorootmotion( var_0, var_2 );
}

set_relic_bang_and_boom( var_0 )
{
    level notify( "gStateMoveWait" );
    var_0 _id_13E37();
    var_0 _id_13C1D( "s4_mp_greenbay_emerge" );
    set_maze_ai_stealth_settings( 12 );
}

gstatemovetorootmotion( var_0, var_1 )
{
    var_2 = var_0.origin;
    var_3 = distance( var_0.origin, var_1 );
    var_4 = var_3 / getdvarint( "scr_br_mxp_g_speed", 3000 );
    var_0 _id_13BA1();
    var_0.x1fin_respawn moveto( var_1, var_4 );
    wait( var_4 );
    set_maze_ai_stealth_settings( 7 );
}

set_relic_focus_fire( var_0, var_1 )
{
    if ( scripts\engine\utility::cointoss() || istrue( var_1 ) )
        set_relic_amped( var_0 );
    else
        set_relic_dogtags( var_0 );
}

set_relic_grounded( var_0, var_1, var_2 )
{
    if ( ginwalkingstate() )
        set_relic_doomslayer( var_0 );
    else if ( sat_computer_think_new() == 6 )
        set_relic_bang_and_boom( var_0 );

    set_maze_ai_stealth_settings( var_1 );
}

sat_activate( var_0, var_1 )
{
    var_2 = 22.5;
    var_3 = 67.5;
    var_4 = 112.5;
    var_5 = 157.5;
    var_6 = abs( var_1 );
    var_7 = scripts\engine\utility::sign( var_1 ) < 0;

    if ( var_6 <= var_2 )
        return [ "", 3, 0 ];
    else if ( var_6 < var_3 )
    {
        if ( var_7 )
            return [ "s4_mp_greenbay_turn_r_45", 2, 45 ];
        else
            return [ "s4_mp_greenbay_turn_l_45", 2, 45 ];
    }
    else if ( var_6 < var_4 )
    {
        if ( var_7 )
            return [ "s4_mp_greenbay_turn_r_90", 3, 90 ];
        else
            return [ "s4_mp_greenbay_turn_l_90", 3, 90 ];
    }
    else if ( var_6 < var_5 )
    {
        if ( var_7 )
            return [ "s4_mp_greenbay_turn_r_135", 4.5, 135 ];
        else
            return [ "s4_mp_greenbay_turn_l_135", 4.5, 135 ];
    }
    else if ( var_7 )
        return [ "s4_mp_greenbay_turn_r_180", 5, 180 ];
    else
        return [ "s4_mp_greenbay_turn_l_180", 5, 180 ];
}

set_relic_gas_martyr( var_0 )
{
    var_1 = var_0.origin;
    var_2 = sandboxprintlinebold( var_0 );
    var_3 = level._id_11E18.setlethalonunresolvedcollision[var_2];
    var_4 = var_3 - var_1;
    var_5 = vectortoangles( var_4 );
    var_6 = angleclamp180( var_5[1] );
    set_maze_ai_stealth_settings( 13 );
    set_relic_explodedmg( var_0, var_6, var_3 );
}

ggetnextindexorigin()
{
    var_0 = sandboxprintlinebold( level._id_11E18.setincomingremovedcallback );

    if ( !isdefined( var_0 ) )
        var_0 = level._id_11E18.setlastdroppableweaponobj;

    var_1 = level._id_11E18.setlethalonunresolvedcollision[var_0];
    return [ var_0, var_1 ];
}

sandboxprintlinebold( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = level._id_11E18.setlastdroppableweaponobj;

    if ( !var_0.linked_mover )
        return scripts\engine\utility::ter_op( var_1 + 1 < level._id_11E18.setlethalonunresolvedcollision.size, var_1 + 1, 0 );
    else
        return scripts\engine\utility::ter_op( var_1 - 1 >= 0, var_1 - 1, level._id_11E18.setlethalonunresolvedcollision.size - 1 );
}

sandboxprintlineboldwait( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = level._id_11E18.setlastdroppableweaponobj;

    if ( !var_0.linked_mover )
        return scripts\engine\utility::ter_op( var_1 - 1 >= 0, var_1 - 1, level._id_11E18.setlethalonunresolvedcollision.size - 1 );
    else
        return scripts\engine\utility::ter_op( var_1 + 1 < level._id_11E18.setlethalonunresolvedcollision.size, var_1 + 1, 0 );
}

set_relic_explodedmg( var_0, var_1, var_2 )
{
    var_3 = var_0.angles;
    var_4 = angleclamp180( var_3[1] );
    var_5 = angleclamp180( var_1 - var_4 );
    [var_7, var_8, var_9] = sat_activate( var_0, var_5 );

    if ( var_7 != "" )
        var_0 _id_13C1D( var_7 );

    var_10 = ( 0, var_1, 0 );
    var_0 orientmode( "face point", var_2 );
}

set_relic_aggressive_melee_params( var_0 )
{
    var_1 = var_0.vo_one_remain;
    var_2 = -90;

    if ( !var_0.linked_mover )
        var_2 = 90;

    if ( isdefined( var_1.origin ) )
    {
        var_3 = var_1.origin - var_0.origin;
        var_4 = vectortoangles( var_3 );
        var_5 = var_4[1];
        var_6 = var_0.angles[1];
        var_2 = angleclamp180( var_5 - var_6 );
    }

    [var_8, var_9, var_10] = sat_activate( var_0, var_2 );
    set_maze_ai_stealth_settings( 11 );

    if ( var_8 != "" )
        var_0 _id_13C1D( var_8 );

    if ( var_0.vo_one_remain != var_1 )
        return;

    _getrandomlocations::sequence_progression( 1 );
    set_maze_ai_stealth_settings( 8 );
    var_0 setscriptablepartstate( "camo", "charge" );
    var_0 gplaystartaim();
    set_maze_ai_stealth_settings( 9 );
    var_0 setscriptablepartstate( "camo", "full" );
    var_0 _id_13C1B();
    gblendtoaimwait( var_1.origin );
    var_11 = set_no_crash( var_0 );
    set_maze_ai_stealth_settings( 10 );
    thread gdisablecamo( var_0 );

    if ( istrue( var_11 ) )
        var_0 _id_13C1D( "s4_mp_greenbay_atomic_ray_end_01" );

    set_maze_ai_stealth_settings( 12 );
}

gdisablecamo( var_0, var_1 )
{
    var_0 setscriptablepartstate( "camo", "discharge" );
    wait 4;
    var_0 setscriptablepartstate( "camo", "fadeout" );
    wait 4;
    var_0 setscriptablepartstate( "camo", "disabled" );
}

gblendtoaimwait( var_0 )
{
    set_maze_ai_state( var_0 );
    wait 2;
}

gplaystartaim()
{
    var_0 = _id_13C1C( "s4_mp_greenbay_atomic_ray_start_01" );
    var_1 = getanimlength( var_0 );
    var_2 = var_1 - 2;
    wait( var_2 );
}

set_number_of_subway_cars_on_track( var_0 )
{
    level._id_11E18.setincomingremovedcallback.vo_one_remain = var_0;
}

gendkillstreak()
{
    level._id_11E18.setincomingremovedcallback.vo_one_remain = undefined;
}

set_no_crash( var_0 )
{
    var_1 = undefined;
    select_woods_three_spawners( var_0 );

    if ( isdefined( var_0.vo_one_remain._id_134E3 ) )
        var_1 = _getrandomlocations::server_structs( var_0.vo_one_remain );
    else
        wait 6;

    set_relic_gun_game( var_0 );
    return var_1;
}

select_woods_three_spawners( var_0 )
{
    var_0.breathattachent setscriptablepartstate( "beam", "beam_enable" );
    var_0 setscriptablepartstate( "beam", "beam_enable" );

    if ( isdefined( var_0.vo_one_remain.start_area_fx_end ) )
    {
        var_0.breathattachent setotherent( var_0.vo_one_remain.start_area_fx_end );
        var_0.clear_mortar_settings = playfxontagsbetweenclients( scripts\engine\utility::getfx( "greenbay_beam" ), var_0.clear_look_at_ent, "tag_player", var_0.vo_one_remain.start_area_fx_end, "tag_player" );
        var_0.clear_mortar_settings unmarkkeyframedmover( 1 );
    }
}

set_relic_gun_game( var_0 )
{
    var_0.breathattachent setscriptablepartstate( "beam", "beam_disable" );
    var_0 setscriptablepartstate( "beam", "beam_disable" );
    var_0.breathattachent setotherent( undefined );

    if ( isdefined( var_0.clear_mortar_settings ) )
        var_0.clear_mortar_settings delete();
}

gstatetalkwait( var_0 )
{
    if ( var_0.talkwait == 0 )
    {
        gstateidle( var_0, "s4_mp_greenbay_idle_taunt_01" );
        var_0.talkwait = 1;
    }
    else
        gstateidle( var_0, "s4_mp_greenbay_idle_breath_01" );
}

gstateidle( var_0, var_1 )
{
    var_0 _id_13C1D( var_1 );
}

set_relic_doubletap_params( var_0, var_1 )
{
    if ( !isdefined( var_0.idleindex ) || var_0.idleindex + 1 >= level._id_11E18.gidles.size )
    {
        var_0.idleindex = 0;
        var_0.idles = scripts\engine\utility::array_randomize( level._id_11E18.gidles );
    }
    else
        var_0.idleindex++;

    var_2 = var_0.idleindex;
    var_3 = var_0.idles[var_2];
    var_0 _id_13C1D( var_3 );
    var_0.nodeidle = 1;
}

gstatetalk( var_0 )
{
    var_1 = level._id_11E18.wait_for_next_hack_complete;
    var_2 = var_1.origin - var_0.origin;
    var_3 = vectortoangles( var_2 );
    var_4 = angleclamp180( var_3[1] );
    set_relic_explodedmg( var_0, var_4, var_1.origin );
    var_5 = var_0 _id_13C1C( "s4_mp_greenbay_idle_bark_01" );
    waitandstartparachuteoverheadmonitoring( 10 );
    var_1 notify( "break_idle" );
    var_0 _id_13ED2( var_5 );
    var_0.talkwait = 0;
    set_maze_ai_stealth_settings( 15 );
}

postgamehitmarkerwaittime( var_0, var_1, var_2, var_3 )
{
    return !score_event_enemy_killed();
}

waitfor_trigger_near_obit()
{
    if ( getdvarint( "scr_br_mxp_t_prematch", 0 ) == 0 )
        scripts\mp\flags::gameflagwait( "prematch_fade_done" );

    [var_1, var_2, var_3] = waitformeleedamage();
    level._id_11E18.wait_for_open = var_3;
    waitandstartscorepolling( var_1, var_2 );
    _id_14372();
    kstartnotifywatchers();
    kspawnchallengetrigger();
    kspawnheadchallengetrigger();
    waitforgulagfightstocomplete();
}

waitforallcrates()
{
    for (;;)
    {
        [var_1, var_2, var_3] = waitformeleedamage( 0 );
        level._id_11E18.wait_for_open = var_3;
        waitandstartscorepolling( var_1, var_2 );
        wait 1;
        var_4 = level._id_11E18.wait_for_next_hack_complete;
        kstateplayswat( var_4, 2 );
        waitframe();
        waitforremoteend( var_4 );
        waitframe();
        waitfornukecarriernearlz( var_4, 84.7375 );
        waitframe();
        waitforremoteend( var_4 );
        waitframe();
        waitframe();
    }
}

waitformeleedamage( var_0 )
{
    var_1 = randomint( level._id_11E18.wait_for_player_eliminated.size );
    var_2 = level._id_11E18.wait_for_player_eliminated[var_1];
    var_3 = scripts\engine\utility::ter_op( var_1 + 1 < level._id_11E18.wait_for_player_eliminated.size, var_1 + 1, 0 );
    var_4 = level._id_11E18.wait_for_player_eliminated[var_3];
    var_5 = var_4 - var_2;
    var_6 = vectortoangles( var_5 );
    var_6 = ( 0, var_6[1], 0 );
    return [ var_2, var_6, var_1 ];
}

vehicle_outline_watcher()
{
    var_0 = [];
    var_0[var_0.size] = ( 11898.5, 12257.3, 8462.71 );
    var_0[var_0.size] = ( 20782, 29873, 3990 );

    if ( getdvarint( "scr_br_mxp_skip_path", 0 ) == 0 )
    {
        var_0[var_0.size] = ( 31346, 26765, 1575 );
        var_0[var_0.size] = ( 28493, 4769, 1353 );
        var_0[var_0.size] = ( 2088, 2904, 3354 );
        var_0[var_0.size] = ( 7245, 21948, 6297 );
    }

    level._id_11E18.wait_for_player_eliminated = var_0;
    level._id_11E18.kpathcalderaindex = 0;
}

vehicletrail()
{
    var_0 = scripts\engine\utility::array_randomize( getarraykeys( level._id_11E18.wait_for_player_eliminated ) );

    if ( !isdefined( level.br_circle.dangercircleent ) )
        return [ var_0[0], level._id_11E18.wait_for_player_eliminated[var_0[0]] ];

    foreach ( var_2 in var_0 )
    {
        if ( var_2 == level._id_11E18.wait_for_open )
            continue;

        var_3 = level._id_11E18.wait_for_player_eliminated[var_2];

        if ( scripts\mp\gametypes\br_circle.gsc::ispointincurrentsafecircle( var_3 ) )
            return [ var_2, var_3 ];
    }

    return [ var_0[0], level._id_11E18.wait_for_player_eliminated[var_0[0]] ];
}

waitforgulagfightstocomplete()
{
    var_0 = level._id_11E18.wait_for_next_hack_complete;
    var_0.linked_mover = 0;
    waitandstartparachuteoverheadmonitoring( 0 );
    wait_in_spectate_for_time( var_0 );

    for (;;)
    {
        var_1 = vehoccupancy_lastbctime();

        if ( wait_for_morales_thanks() )
        {
            waitframe();
            continue;
        }

        if ( isdefined( var_0._id_12930 ) && !vehiclespawn_cargotruckmg() )
            [[ var_0._id_12930 ]]( var_0 );
        else if ( var_1 == 9 )
            kstatetalkwait( var_0 );
        else if ( var_1 == 10 )
            kstatetalk( var_0 );
        else if ( isdefined( var_0.vo_one_remain ) && !vehiclespawn_cargotruckmg() )
            waitfornukecarriernearlz( var_0 );
        else
            waitforoneplayernearlz( var_0 );

        waitframe();
    }
}

wait_in_spectate_for_time( var_0 )
{
    var_0._id_11EA4 = 0;
    var_0.nodeidle = 0;
    var_0._id_11EA9 = 0;
    var_0._id_11EA7 = 0;
    var_0._id_11F40 = randomintrange( level._id_11E18.wait_for_player_in_gas, level._id_11E18.wait_for_player_gulag_respawn + 1 );
}

waitforoneplayernearlz( var_0 )
{
    if ( wait_for_weapons_free( var_0 ) )
    {
        wait_in_spectate_for_time( var_0 );
        waitforremoteend( var_0 );
    }
    else if ( !level._id_11E18.kaltcrateattack && wait_for_time_or_notify( var_0 ) )
        waitforhvttrigger( var_0 );
    else if ( kreadytoswat( var_0 ) )
        kstatechooseswat( var_0 );
    else
    {
        if ( var_0.nodeidle && var_0._id_11EA7 )
        {
            var_0.nodeidle = 0;
            var_0._id_11EA7 = 0;
        }

        var_1 = [];

        if ( !var_0.nodeidle )
            var_1[var_1.size] = ::waitforplayerstoconnect;

        if ( var_0 tcanrandomkillstreak() )
            var_1[var_1.size] = ::waitforplayerstoconnect_countdown;

        var_2 = 0;

        if ( var_1.size > 1 )
            var_2 = randomint( var_1.size );

        if ( var_1.size > 0 )
            [[ var_1[var_2] ]]( var_0 );
        else
            waitforplayerstoconnect( var_0 );
    }
}

kstatetalkwait( var_0 )
{
    var_0 endon( "break_idle" );
    kstateidle( var_0, "s4_mp_kenosha_idle_breath_01" );
}

kstatetalk( var_0 )
{
    var_1 = level._id_11E18.setincomingremovedcallback;
    var_2 = var_1.origin - var_0.origin;
    var_3 = vectortoangles( var_2 );
    var_4 = angleclamp180( var_3[1] );
    kstaterotate( var_0, var_4, var_1.origin );
    var_0 _id_13C1D( "s4_mp_kenosha_idle_bark_01" );
    waitandstartparachuteoverheadmonitoring( 0 );

    if ( getdvarint( "scr_br_mxp_g_force_stay", 0 ) > 0 )
        set_maze_ai_stealth_settings( 12 );
    else
        set_maze_ai_stealth_settings( 0 );
}

wait_for_weapons_free( var_0 )
{
    var_1 = kgetnextindex();

    if ( vehiclespawn_cargotruckmg() )
        return 1;
    else if ( kisingas( var_0 ) )
    {
        if ( isdefined( var_1 ) )
            return level._id_11E18.wait_for_open != var_1;
        else
        {
            var_2 = kgetlastindex();
            return level._id_11E18.wait_for_open != var_2;
        }
    }
    else if ( wait_after_first_counter() && !vehicle_occupancy_setfriendlystatusdirty() && !kisintelcrateingas() )
        return 1;
    else if ( !wait_after_first_counter() && var_0._id_11EA4 >= var_0._id_11F40 )
        return level._id_11E18.wait_for_open != var_1;

    return 0;
}

kisingas( var_0 )
{
    return kisindexingas( level._id_11E18.wait_for_open );
}

kisindexingas( var_0 )
{
    var_1 = level._id_11E18.wait_for_player_eliminated[var_0];

    if ( update_volume_flag( var_1 ) )
        return 1;

    return 0;
}

waitforhvttrigger( var_0 )
{
    var_1 = vehiclespawninginto();

    if ( isdefined( var_1 ) )
    {
        var_2 = _getrandomlocations::_id_11A9F( var_0.origin, level._id_11E18.kgroundpoundradius, 0, 5 );

        if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "dangerNotifyPlayersInRange" ) )
            var_0 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "dangerNotifyPlayersInRange" ) ]]( var_0.origin, level._id_11E18.kgroundpoundradius, "kenosha_strike", 0 );

        var_3 = var_1.origin;
        waitforplayerstoconnect( var_0 );
        waitforplayerentering( var_0, var_3, var_1 );
        var_2 delete();
    }
}

vehicle_occupancy_setfriendlystatusdirty()
{
    if ( wait_after_first_counter() )
        return level._id_11E18.wait_and_destroy == level._id_11E18.wait_for_open;

    return 0;
}

wait_after_first_counter()
{
    if ( isdefined( level._id_11E18.wait_and_destroy ) )
        return 1;

    return 0;
}

kisintelcrateingas()
{
    return kisindexingas( level._id_11E18.wait_and_destroy );
}

vehiclespawninginto()
{
    foreach ( var_1 in level.train_hurt_damage_watcher )
    {
        if ( isintelcratevalid( var_1 ) && var_1.trial_flares.type == "k" && var_1.trial_flares.index == level._id_11E18.wait_for_open && gettime() >= var_1.trial_flares.expiretime )
            return var_1;
    }

    if ( level._id_11E18.kaltcrateattack )
    {
        foreach ( var_1 in level.train_hurt_damage_watcher )
        {
            if ( isintelcratevalid( var_1 ) && var_1.trial_flares.type == "k" && gettime() >= var_1.trial_flares.expiretime )
                return var_1;
        }
    }
}

waitandstartparachuteoverheadmonitoring( var_0 )
{
    level._id_11E18.wait_for_next_hack_complete.state = var_0;
}

vehoccupancy_lastbctime()
{
    return level._id_11E18.wait_for_next_hack_complete.state;
}

kinjumpstate()
{
    var_0 = vehoccupancy_lastbctime();
    return var_0 == 1 || var_0 == 2 || var_0 == 3;
}

kinnodestate()
{
    var_0 = vehoccupancy_lastbctime();
    return var_0 == 0;
}

khastomoveforkillstreak()
{
    if ( level._id_11E18.klimitanimspeak && level._id_11E18.wait_for_open == level._id_11E18.kpathcalderaindex )
    {
        [var_1, var_2] = kgetnextindexorigin();

        if ( level._id_11E18.wait_for_open != var_1 )
            return [ 1, var_1 ];
    }

    return [ 0, undefined ];
}

waitfornukecarriernearlz( var_0, var_1 )
{
    [var_3, var_4] = khastomoveforkillstreak();

    if ( var_3 )
        waitforremoteend( var_0, var_4 );

    waitandstartparachuteoverheadmonitoring( 5 );
    var_5 = var_0.vo_one_remain;
    var_6 = randomfloatrange( -180, 180 );
    var_7 = angleclamp180( var_0.angles[1] );

    if ( isdefined( var_5.origin ) )
    {
        var_8 = var_5.origin - var_0.origin;
        var_9 = vectortoangles( var_8 );
        var_6 = var_9[1];
    }

    var_10 = angleclamp180( var_6 - var_7 );
    [var_12, var_13, var_14] = vehicleturretshootthread( var_0, var_10 );

    if ( isdefined( var_12 ) && var_12 != "" )
        var_0 _id_13C1D( var_12 );
    else
    {
        var_15 = ( 0, var_10, 0 );
        var_0.x1fin_respawn rotateby( var_15, var_13 );
    }

    if ( var_0.vo_one_remain != var_5 )
        return;

    var_0 _id_13C1D( "s4_mp_kenosha_stomp_attack_01" );

    if ( var_0.vo_one_remain != var_5 )
        return;

    if ( kshoulddelaykillstreak( var_0 ) )
    {
        waitforplayerstoconnect( var_0 );

        if ( var_0.vo_one_remain != var_5 )
            return;
    }

    _getrandomlocations::vehicle_spawn_abandonedtimeoutcallback( 1 );

    if ( var_5.change_goal_radius_weapons_free_internal == 2 )
        var_0 thread _id_13C1D( "s4_mp_kenosha_leg_stomp_attack_01" );
    else if ( var_5.change_goal_radius_weapons_free_internal == 1 )
        var_0 thread _id_13C1D( "s4_mp_kenosha_toss_attack_02" );
    else
        var_0 thread _id_13C1D( "s4_mp_kenosha_toss_attack_01" );

    waitbombusestart( var_0 );
    waitandstartparachuteoverheadmonitoring( 0 );
}

waitforplayerentering( var_0, var_1, var_2 )
{
    waitandstartparachuteoverheadmonitoring( 8 );
    var_3 = angleclamp180( var_0.angles[1] );
    var_4 = var_1 - var_0.origin;
    var_5 = vectortoangles( var_4 );
    var_6 = var_5[1];
    var_7 = angleclamp180( var_6 - var_3 );
    [var_9, var_10, var_11] = vehicleturretshootthread( var_0, var_7 );

    if ( isdefined( var_9 ) && var_9 != "" )
        var_0 _id_13C1D( var_9 );
    else
    {
        var_12 = ( 0, var_7, 0 );
        var_0.x1fin_respawn rotateby( var_12, var_10 );
    }

    if ( isdefined( var_2 ) )
        thread vehicle_playerenteredtrackedlittlebird( var_0, var_2, 1 );

    var_0 _id_13C1D( "s4_mp_kenosha_stomp_attack_01" );
    waitandstartparachuteoverheadmonitoring( 0 );
}

vehicle_playerenteredtrackedlittlebird( var_0, var_1, var_2 )
{
    var_0 scripts\engine\utility::waittill_notify_or_timeout( "kenosha_ground_pound", 1.5 );
    var_1 thread scripts\mp\gametypes\br_gametype_mendota.gsc::train_get_anim_ents_index();
}

kshoulddelaykillstreak( var_0 )
{
    var_1 = gettime() - var_0.vo_one_remain.starttime;

    if ( kiskillstreakplayerinitiated( var_0 ) )
        return var_1 < getdvarint( "scr_br_mxp_k_ks_player_delay", 0 );
    else
        return var_1 < getdvarint( "scr_br_mxp_k_ks_delay", 0 );
}

kiskillstreakplayerinitiated( var_0 )
{
    return isdefined( var_0.vo_one_remain ) && isdefined( var_0.vo_one_remain.player ) && isplayer( var_0.vo_one_remain.player );
}

waitfor_firstgroup_killedoffenough( var_0 )
{
    level._id_11E18.wait_for_next_hack_complete.vo_one_remain = var_0;
}

kendkillstreak( var_0 )
{
    level._id_11E18.wait_for_next_hack_complete.vo_one_remain = undefined;
}

waitbombusestart( var_0 )
{
    if ( var_0.vo_one_remain.change_goal_radius_weapons_free_internal == 2 )
        var_0 scripts\engine\utility::waittill_notify_or_timeout( "kenosha_stomp", 1.5 );
    else
        var_0 scripts\engine\utility::waittill_notify_or_timeout( "kenosha_grab_rock", 1.5 );

    var_0 setscriptablepartstate( "rumble", "medium", 0 );
    _getrandomlocations::vehicle_spawn_cancelpendingrespawns( var_0.vo_one_remain );
}

vehicleturretshootthread( var_0, var_1 )
{
    var_2 = 22.5;
    var_3 = 67.5;
    var_4 = 112.5;
    var_5 = 157.5;
    var_6 = abs( var_1 );
    var_7 = scripts\engine\utility::sign( var_1 ) < 0;

    if ( var_6 <= var_2 )
        return [ "", 1, 0 ];
    else if ( var_6 < var_3 )
    {
        if ( var_7 )
            return [ "s4_mp_kenosha_turn_r_45", 2.2, 45 ];
        else
            return [ "s4_mp_kenosha_turn_l_45", 2.2, 45 ];
    }
    else if ( var_6 < var_4 )
    {
        if ( var_7 )
            return [ "s4_mp_kenosha_turn_r_90", 2.8, 90 ];
        else
            return [ "s4_mp_kenosha_turn_l_90", 2.8, 90 ];
    }
    else if ( var_6 < var_5 )
    {
        if ( var_7 )
            return [ "s4_mp_kenosha_turn_r_135", 3.0, 135 ];
        else
            return [ "s4_mp_kenosha_turn_l_135", 3.3, 135 ];
    }
    else if ( var_7 )
        return [ "s4_mp_kenosha_turn_r_180", 3.3, 180 ];
    else
        return [ "s4_mp_kenosha_turn_l_180", 3.3, 180 ];
}

ksetnextidle( var_0 )
{
    for ( var_1 = 0; var_1 < level._id_11E18.kidles.size; var_1++ )
    {
        if ( !isdefined( var_0.idleindex ) || var_0.idleindex + 1 >= level._id_11E18.kidles.size )
        {
            var_0.idleindex = 0;
            var_0.idles = scripts\engine\utility::array_randomize( level._id_11E18.kidles );
        }
        else
            var_0.idleindex++;

        var_2 = var_0.idles[var_0.idleindex];

        if ( !level._id_11E18.klimitanimspeak || level._id_11E18.klimitanimspeak && !issubstr( var_2, "s4_mp_kenosha_idle_knuckles" ) )
            break;
    }

    return var_0.idleindex;
}

waitforplayerstoconnect( var_0, var_1 )
{
    var_2 = [];

    if ( getdvarint( "scr_br_mxp_k_look_down_enabled", 1 ) == 1 )
        var_2 = kenemiesnearonground( var_0 );

    if ( var_2.size > 0 )
    {
        var_3 = kselectlookattarget( var_0, var_2 );
        var_4 = angleclamp180( var_0.angles[1] );
        var_5 = var_3.origin - var_0.origin;
        var_6 = vectortoangles( var_5 );
        var_7 = var_6[1];
        var_8 = angleclamp180( var_7 - var_4 );
        [var_10, var_11, var_12] = vehicleturretshootthread( var_0, var_8 );

        if ( isdefined( var_10 ) && var_10 != "" )
            var_0 _id_13C1D( var_10 );

        var_0 _id_13C1D( "s4_mp_kenosha_idle_lookingdown_01" );
    }
    else
    {
        var_13 = ksetnextidle( var_0 );
        var_14 = var_0.idles[var_13];
        var_0 _id_13C1D( var_14 );
    }

    var_0.nodeidle = 1;
    var_0._id_11EA4++;
}

kstateidle( var_0, var_1 )
{
    var_0 _id_13C1D( var_1 );
}

kstaterotate( var_0, var_1, var_2 )
{
    var_3 = var_0.angles;
    var_4 = angleclamp180( var_3[1] );
    var_5 = angleclamp180( var_1 - var_4 );
    [var_7, var_8] = vehicleturretshootthread( var_0, var_5 );

    if ( var_7 != "" )
        var_0 _id_13C1D( var_7 );

    var_9 = ( 0, var_1, 0 );
    var_0 orientmode( "face point", var_2 );
}

waitforremoteend( var_0, var_1 )
{
    waitandstartparachuteoverheadmonitoring( 6 );
    var_2 = var_0.origin;
    var_3 = var_0.angles;

    if ( isdefined( var_1 ) )
    {
        var_4 = var_1;
        var_5 = level._id_11E18.wait_for_player_eliminated[var_4];
    }
    else
        [var_4, var_5] = kgetnextindexorigin();

    var_7 = var_5 - var_2;
    var_8 = vectortoangles( var_7 );
    var_9 = angleclamp180( var_8[1] );
    var_10 = angleclamp180( var_3[1] );
    var_11 = angleclamp180( var_9 - var_10 );

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "dangerNotifyPlayersInRange" ) )
        var_0 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "dangerNotifyPlayersInRange" ) ]]( var_5, level._id_11E18.kgroundpoundradius, "kenosha_strike", 0 );

    var_0 thread tplaydialogforplayersinrange( "k_jump_incoming", var_5, level._id_11E18.kgroundpoundradius );
    [var_13, var_14, var_15] = vehicleturretshootthread( var_0, var_11 );

    if ( var_13 != "" )
    {
        var_0 _id_13C1D( var_13 );
        var_16 = angleclamp180( scripts\engine\utility::sign( var_11 ) * ( abs( var_11 ) - var_15 ) );
        var_17 = ( 0, var_16, 0 );
        var_0.x1fin_respawn rotateby( var_17, 0.5 );
    }
    else
    {
        var_17 = ( 0, var_11, 0 );
        var_0.x1fin_respawn rotateby( var_17, var_14 );
    }

    var_0 orientmode( "face point", var_5 );

    if ( getdvarint( "scr_br_mxp_gk_precise_collision", 1 ) )
    {
        var_0 thread gkrunplayercollision( 1 );

        if ( getdvarint( "scr_br_mxp_launch_players", 1 ) )
            var_0 thread klaunchplayersduringjump();
    }

    waitandstartparachuteoverheadmonitoring( 1 );
    var_0 _id_13C1D( "s4_mp_kenosha_jump_start_01" );
    var_0 _id_13BA1();
    waitandstartparachuteoverheadmonitoring( 2 );
    var_0 _id_13C1C( "s4_mp_kenosha_jump_air_01" );
    var_2 = var_0.origin;
    var_18 = var_5 + ( 0, 0, 25 );
    var_19 = distance( var_2, var_5 );
    var_20 = kgetjumpinfo( var_2, var_5 );
    var_14 = var_19 / var_20.jumpspeed;
    var_21 = -1 * var_20.jumpgravity;
    var_22 = trajectorycalculateinitialvelocity( var_2, var_18, ( 0, 0, var_21 ), var_14 );
    level._id_11E18.wait_for_next_hack_complete.x1fin_respawn movegravity( var_22, var_14, var_20.jumpgravity );
    wait( var_14 );
    level._id_11E18.wait_for_next_hack_complete.x1fin_respawn.origin = var_5;
    waitandstartparachuteoverheadmonitoring( 3 );
    var_0 _id_13C1D( "s4_mp_kenosha_jump_stomp_01" );
    var_0 _id_13E37();
    kstatesetindex( var_4 );

    if ( vehiclespawn_cargotruckmg() )
        waitforreturntobattlestance();

    if ( getdvarint( "scr_br_mxp_gk_precise_collision", 1 ) )
        var_0 thread gkrunplayercollision( 0 );

    waitandstartparachuteoverheadmonitoring( 0 );
}

klaunchplayersduringjump()
{
    var_0 = self;
    var_0 notify( "kLaunchPlayersDuringJump" );
    var_0 endon( "kLaunchPlayersDuringJump" );

    if ( var_0.collisionlist.size == 0 )
        return;

    var_1 = getdvarfloat( "scr_br_mxp_lp_pre_jump_delay", 0.65 );
    var_2 = getdvarint( "scr_br_mxp_lp_check_duration", 1000 );
    var_3 = getdvarint( "scr_br_mxp_lp_check_radius", 550 );
    var_4 = getdvarfloat( "scr_br_mxp_lp_check_interval", 0.5 );
    var_5 = getdvarint( "scr_br_mxp_lp_speed", 5000 );
    wait( var_1 );
    var_6 = var_0.collisionlist["head"].colliderent;
    var_7 = gettime() + var_2;

    while ( gettime() < var_7 )
    {
        var_8 = getentarrayinradius( "player", "classname", var_6.origin, var_3 );

        foreach ( var_10 in var_8 )
        {
            if ( !isalive( var_10 ) )
                continue;

            var_11 = var_10 getgroundentity();

            if ( isdefined( var_11 ) && var_11 == var_6 )
                var_10 setvelocity( ( 0, 0, var_5 ) );
        }

        wait( var_4 );
    }
}

kgetindexorigin( var_0 )
{
    var_1 = level._id_11E18.wait_for_player_eliminated[var_0];
    return var_1;
}

kgetnextindexorigin()
{
    var_0 = kgetnextindex();

    if ( !isdefined( var_0 ) )
        var_0 = kgetlastindex();

    var_1 = level._id_11E18.wait_for_player_eliminated[var_0];
    return [ var_0, var_1 ];
}

kgetjumpinfo( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.jumpgravity = level._id_11E18.kjumpgravitymax;
    var_2.jumpspeed = level._id_11E18.kjumpspeedmin;
    var_3 = distance2dsquared( var_0, var_1 );

    if ( var_3 > level._id_11E18.kjumpdistancelongsq )
    {
        var_2.jumpgravity = level._id_11E18.kjumpgravitymin;
        var_2.jumpspeed = level._id_11E18.kjumpspeedmax;
    }
    else if ( var_3 > level._id_11E18.kjumpdistancemidsq )
    {
        var_2.jumpgravity = level._id_11E18.kjumpgravitymid;
        var_2.jumpspeed = level._id_11E18.kjumpspeedmid;
    }

    return var_2;
}

kstatesetindex( var_0 )
{
    level._id_11E18.wait_for_open = var_0;
}

kgetnextindex()
{
    if ( wait_after_first_counter() && !vehicle_occupancy_setfriendlystatusdirty() && !kisintelcrateingas() )
        return level._id_11E18.wait_and_destroy;
    else
        return kgetsafenode();
}

kgetlastindex()
{
    var_0 = undefined;
    var_1 = undefined;

    for ( var_2 = 0; var_2 < level._id_11E18.wait_for_player_eliminated.size; var_2++ )
    {
        var_3 = level._id_11E18.wait_for_player_eliminated[var_2];
        var_4 = distance2dsquared( var_3, level.grouptorewards );

        if ( !isdefined( var_0 ) || var_4 < var_0 )
        {
            var_0 = var_4;
            var_1 = var_2;
        }
    }

    return var_1;
}

kgetsafenode()
{
    var_0 = level._id_11E18.wait_for_open;
    var_1 = level._id_11E18.wait_for_open;

    for ( var_2 = 0; var_2 < level._id_11E18.wait_for_player_eliminated.size; var_2++ )
    {
        var_0 = scripts\engine\utility::ter_op( var_0 + 1 < level._id_11E18.wait_for_player_eliminated.size, var_0 + 1, 0 );
        var_3 = level._id_11E18.wait_for_player_eliminated[var_0];

        if ( !update_volume_flag( var_3 ) )
            return var_0;

        var_1 = scripts\engine\utility::ter_op( var_1 - 1 >= 0, var_1 - 1, level._id_11E18.wait_for_player_eliminated.size - 1 );
        var_4 = level._id_11E18.wait_for_player_eliminated[var_1];

        if ( !update_volume_flag( var_4 ) )
            return var_1;
    }
}

kenemiesinview( var_0 )
{
    var_1 = level._id_11E18.wait_for_next_hack_complete gettagorigin( "j_head" ) + ( 0, 0, level._id_11E18.kswatheightoffset );
    var_2 = level._id_11E18.kswataggroradius;
    var_3 = getentarrayinradius( "player", "classname", var_1, var_2 );
    var_4 = tablesort( var_1, var_2, level._id_11E18.kswataggroheight );
    var_5 = scripts\engine\utility::array_combine( var_3, var_4 );
    var_6 = [];

    foreach ( var_8 in var_5 )
    {
        var_9 = var_8.origin[2] - var_1[2];

        if ( var_9 > 0 && var_9 < level._id_11E18.kswataggroheight )
            var_6[var_6.size] = var_8;
    }

    return var_6;
}

kenemiesnearonground( var_0 )
{
    var_1 = level._id_11E18.wait_for_next_hack_complete gettagorigin( "tag_origin" );
    var_2 = level._id_11E18.klookdownradius;
    var_3 = getentarrayinradius( "player", "classname", var_1, var_2 );
    var_4 = var_3;
    return var_4;
}

kselectlookattarget( var_0, var_1 )
{
    var_2 = anglestoforward( var_0.angles );
    var_3 = [];

    foreach ( var_5 in var_1 )
    {
        var_6 = var_5.origin - var_0.origin;
        var_7 = vectordot( var_2, var_6 );

        if ( var_7 > 0 )
            var_3[var_3.size] = var_5;
    }

    if ( var_3.size > 0 )
        return scripts\engine\utility::random( var_3 );
    else
        return scripts\engine\utility::random( var_1 );
}

kisplayerorplane( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 0;

    if ( isalive( var_0 ) && ( isplayer( var_0 ) || isagent( var_0 ) ) )
        return 1;

    if ( var_0 scripts\mp\gametypes\br_public.gsc::nuke_vault_suicidebombers() )
    {
        if ( var_0 _calloutmarkerping_isvehicleoccupiedbyenemy::unreachable_function() || var_0 _calloutmarkerping_handleluinotify_mappingdeletemarker::unresolvedcollisiontolerancesqr() || var_0 scripts\common\vehicle::ishelicopter() )
            return 1;
    }

    return 0;
}

kreadytoswat( var_0 )
{
    if ( getdvarfloat( "scr_br_mxp_kk_swat_timer", 10 ) > 0 )
    {
        if ( isdefined( var_0.lastswattime ) && gettime() - var_0.lastswattime < 10000 )
            return 0;
    }

    var_1 = kenemiesinview( var_0 );

    foreach ( var_3 in var_1 )
    {
        if ( kisplayerorplane( var_3 ) )
            return 1;
    }

    return 0;
}

kstatechooseswat( var_0, var_1 )
{
    var_2 = kenemiesinview( var_0 );
    var_3 = 0;
    var_4 = [];
    var_4[0] = 0;
    var_4[1] = 0;
    var_4[2] = 0;

    foreach ( var_6 in var_2 )
    {
        if ( !kisplayerorplane( var_6 ) )
            continue;

        var_7 = level._id_11E18.wait_for_next_hack_complete.angles;
        var_8 = vectortoangles( ( var_6.origin[0], var_6.origin[1], 0 ) - ( var_0.origin[0], var_0.origin[1], 0 ) );
        var_9 = var_7[1] - var_8[1];
        var_10 = 0;

        if ( abs( var_9 ) < level._id_11E18.kswatyawmid )
        {
            var_4[0]++;
            var_10 = var_4[0];
        }
        else if ( var_9 < 0 - level._id_11E18.kswatyawmid && var_9 > 0 - level._id_11E18.kswatyawmax )
        {
            var_4[1]++;
            var_10 = var_4[1];
        }
        else if ( var_9 > level._id_11E18.kswatyawmid && var_9 < level._id_11E18.kswatyawmax )
        {
            var_4[2]++;
            var_10 = var_4[2];
        }

        if ( var_10 > var_3 )
            var_3 = var_10;
    }

    var_12 = [];

    foreach ( var_15, var_14 in var_4 )
    {
        if ( var_14 == var_3 )
            var_12[var_12.size] = var_15;
    }

    if ( var_12.size > 0 )
    {
        var_16 = scripts\engine\utility::random( var_12 );
        kstateplayswat( var_0, var_16 );
    }
    else
        kstateplayswat( var_0 );

    var_0.lastswattime = gettime();
}

kstateplayswat( var_0, var_1 )
{
    waitandstartparachuteoverheadmonitoring( 7 );
    var_2 = [ "s4_mp_kenosha_swat_attack_fwd_01", "s4_mp_kenosha_swat_attack_l_01", "s4_mp_kenosha_swat_attack_r_01" ];
    var_3 = [ 5.8, 4.5, 5.0 ];

    if ( !isdefined( var_1 ) )
        var_1 = randomint( var_2.size );

    var_4 = var_2[var_1];
    var_5 = var_3[var_1];
    var_0 _id_13C1D( var_4 );
    var_0._id_11EA9 = 1;
    var_0._id_11EA4++;
}

khandkilltriggers( var_0 )
{
    if ( istrue( var_0 ) )
    {
        if ( isdefined( level._id_11E18.wait_for_next_hack_complete.triggerhandri ) || isdefined( level._id_11E18.wait_for_next_hack_complete.triggerhandle ) )
            return;

        level._id_11E18.wait_for_next_hack_complete.triggerhandri = level._id_11E18.wait_for_next_hack_complete gkkilltriggercreate( level._id_11E18.kswatradius, level._id_11E18.kswatheight, "j_mid_ri_1" );
        level._id_11E18.wait_for_next_hack_complete.triggerhandle = level._id_11E18.wait_for_next_hack_complete gkkilltriggercreate( level._id_11E18.kswatradius, level._id_11E18.kswatheight, "j_mid_le_1" );
    }
    else
    {
        if ( !isdefined( level._id_11E18.wait_for_next_hack_complete.triggerhandri ) || !isdefined( level._id_11E18.wait_for_next_hack_complete.triggerhandle ) )
            return;

        level._id_11E18.wait_for_next_hack_complete.triggerhandri gkkilltriggerdestroy();
        level._id_11E18.wait_for_next_hack_complete.triggerhandle gkkilltriggerdestroy();
    }
}

waitforplayerstoconnect_countdown( var_0 )
{
    var_1 = tgetnextangertarget( var_0 );

    if ( !isdefined( var_1 ) )
    {
        if ( level._id_11E18.kaltcrateattack )
            var_1 = vehiclespawninginto();

        if ( !isdefined( var_1 ) )
            var_1 = var_0 scripts\mp\gametypes\_mxp_target.gsc::pristinestatehealthadd( level._id_11E18.wait_for_player_to_getup, level._id_11E18.wait_for_players_init_puzzle );
    }
    else
        tremoveangertarget( var_0, var_1 );

    if ( isdefined( var_1 ) )
    {
        var_2 = randomizeattacklocation( var_1.origin, level._id_11E18.waitandstartplunderpolling );
        var_3 = vectortoangles( var_2 - var_0.origin );
    }
    else
    {
        var_3 = ( 0, randomintrange( 0, 360 ), 0 );
        var_4 = anglestoforward( var_3 );
        var_5 = randomfloatrange( 3000, 15000 );
        var_2 = var_0.origin + var_4 * var_5;
    }

    var_6 = scripts\mp\gametypes\br_public.gsc::semtex_used();
    var_7 = scripts\mp\gametypes\br_public.gsc::send_all_ai_to_players();

    if ( getdvarint( "scr_br_mxp_k_alt_trace", 1 ) > 0 )
    {
        var_8 = ( var_2[0], var_2[1], min( var_6, var_2[2] ) );
        var_9 = 500;
        var_10 = max( var_6 + var_9 - var_8[2], 0 );
        var_11 = min( var_7 - var_8[2], 0 );
        var_2 = scripts\mp\gametypes\br_public.gsc::modifyplayer_damage( var_8, var_10, var_11 );
    }
    else
        var_2 = scripts\mp\gametypes\br_public.gsc::modifyplayer_damage( var_2, abs( var_2[2] ) + var_6 );

    _getrandomlocations::vehicle_spawn_cp_gamemodesupportsabandonedtimeout( var_2, var_3, level._id_11E18.waitandstartplunderpolling );
    var_0._id_11EA7 = 1;
    var_0._id_11EA4++;
}

wait_for_time_or_notify( var_0 )
{
    [var_2, var_3] = khastomoveforkillstreak();

    if ( wait_after_first_counter() && vehicle_occupancy_setfriendlystatusdirty() && !var_2 )
    {
        var_4 = vehiclespawninginto();

        if ( isdefined( var_4 ) )
            return 1;
    }

    return 0;
}

set_maze_ai_state( var_0 )
{
    var_1 = level._id_11E18.setincomingremovedcallback;
    var_1.gunposeoverride_internal = "disable";
    var_1.upaimlimit = -90;
    var_1.downaimlimit = 90;
    var_1.rightaimlimit = -90;
    var_1.leftaimlimit = 90;
    var_1.aimyawspeed = 100;
    var_2 = ( 0, 0, 0 );
    var_3 = sandbox_combat_area();
    var_4 = var_1 setaimangles( var_3, var_0, 1, var_2, 0, 0, 0 );
    gsetaimstate( var_1, level._id_11E18.gaimstate );
}

gsetaimstate( var_0, var_1 )
{
    var_0 setaimstate( var_1 );
}

sandbox_combat_area( var_0 )
{
    var_1 = level._id_11E18.setincomingremovedcallback.origin;

    if ( isdefined( var_0 ) )
        var_1 = var_0;

    return var_1 + ( 0, 0, 8100 );
}

vehiclespawn_littlebirdmg()
{
    return level._id_11E18.wait_for_next_hack_complete.origin + ( 0, 0, 3400 );
}

_id_13220()
{
    if ( !isdefined( level.agent_funcs["actor_greenbay"] ) )
        level.agent_funcs["actor_greenbay"] = [];

    level.agent_funcs["actor_greenbay"]["spawn"] = scripts\mp\mp_agent::default_spawn_func;
    level.agent_funcs["actor_greenbay"]["on_damaged"] = ::post_customization_func;
    level.agent_funcs["actor_greenbay"]["gametype_on_damage_finished"] = ::post_get_up_animation_function;

    if ( !isdefined( level.agent_definition ) )
        level.agent_definition = [];

    if ( !isdefined( level.agent_definition["actor_greenbay"] ) )
        level.agent_definition["actor_greenbay"] = [];

    level.agent_definition["actor_greenbay"]["animclass"] = "greenbay";

    if ( !isdefined( level.agent_funcs["actor_kenosha"] ) )
        level.agent_funcs["actor_kenosha"] = [];

    level.agent_funcs["actor_kenosha"]["spawn"] = scripts\mp\mp_agent::default_spawn_func;
    level.agent_funcs["actor_kenosha"]["on_damaged"] = ::vehicle_occupancy_takeriotshield;
    level.agent_funcs["actor_kenosha"]["gametype_on_damage_finished"] = ::vehicle_occupancy_updateriotshield;

    if ( !isdefined( level.agent_definition["actor_kenosha"] ) )
        level.agent_definition["actor_kenosha"] = [];

    level.agent_definition["actor_kenosha"]["animclass"] = "kenosha";
}

spawnnewagent( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = "actor_" + var_0;
    var_8 = scripts\mp\mp_agent::getfreeagent( var_7 );

    if ( !isdefined( var_3 ) )
        var_3 = ( 0, 0, 0 );

    var_8 scripts\mp\mp_agent::set_agent_team( "team_two_hundred" );
    var_8 setmodel( var_1 );
    var_8 show();
    var_8 spawnagent( var_2, var_3, level.agent_definition[var_7]["animclass"], var_4, var_5, undefined, 0 );
    var_8.connecttime = gettime();
    var_8.agent_height = var_5;
    var_8.agent_radius = var_4;
    var_8.callback = var_0;
    var_8.asmname = var_0;
    var_8.is_scripted_agent = 1;
    var_8.scripted_mode = 1;
    var_8.ignoreall = 1;
    var_8 scripts\mp\mp_agent::set_agent_team( "team_two_hundred" );
    var_8 scripts\mp\mp_agent::set_agent_health( 9999 );
    var_8 scripts\mp\mp_agent::add_to_characters_array();
    var_8 scripts\mp\mp_agent::activateagent();
    var_8 scripts\engine\utility::set_ai_number();
    var_8 animmode( "noclip" );
    var_8.animationarchetype = var_0;
    var_8 scripts\asm\asm_mp::asm_init( var_0, var_0 );
    var_8.intro_heli_animate_player = var_6;
    return var_8;
}

post_customization_func( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 )
{
    if ( shouldignorevehicleaabbcollision( var_0, var_1, var_4 ) )
        return;

    if ( isdefined( level._id_11E18.setincomingremovedcallback._id_12930 ) || istrue( level._id_11E18.playerregendelayspeed ) )
        scripts\mp\gametypes\br_publicevent_fresno.gsc::sec_sys_struct_3( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );
    else
        tagentdamaged( var_0, var_1, var_2, var_4, var_5 );
}

post_get_up_animation_function( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14 )
{
    var_15 = 0;
}

vehicle_occupancy_takeriotshield( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 )
{
    if ( isdefined( level._id_11E18.wait_for_next_hack_complete._id_12930 ) || istrue( level._id_11E18.playerregendelayspeed ) )
        scripts\mp\gametypes\br_publicevent_fresno.gsc::sec_sys_struct_3( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );
    else
        tagentdamaged( var_0, var_1, var_2, var_4, var_5 );
}

vehicle_occupancy_updateriotshield( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14 )
{
    var_15 = 0;
}

tagentdamaged( var_0, var_1, var_2, var_3, var_4 )
{
    if ( isdefined( var_4 ) && var_4.basename == "greenbay_strike" )
        return;

    var_5 = var_1;

    if ( isdefined( var_1.classname ) && ( var_1.classname == "script_vehicle" || var_1.classname == "misc_turret" ) )
    {
        if ( isdefined( var_1.owner ) )
            var_5 = var_1.owner;
    }

    if ( isplayer( var_5 ) )
    {
        var_5 playerupdatetomahdamage( self, var_2, var_3, var_4, 0 );
        var_5 scripts\mp\damagefeedback::updatedamagefeedback( "standard", 0, 0, "standard", 0, 1 );
    }
}

playerupdatetomahdamage( var_0, var_1, var_2, var_3, var_4 )
{
    var_1 = modifydamagebyweapon( var_1, var_2, var_3 );
    playerupdatetomahdamagechallenges( var_0, var_1, var_4 );
    var_5 = self getentitynumber();
    var_6 = 0;

    if ( !isdefined( var_0.playerdamage[var_5] ) )
    {
        var_0.playerdamage[var_5] = 0;
        var_6 = 1;
    }

    var_7 = int( var_0.playerdamage[var_5] / level._id_11E18.damageperintel );
    var_8 = ( var_7 + 1 ) * level._id_11E18.damageperintel;
    var_9 = int( var_0.playerdamage[var_5] / level._id_11E18.damageuntilnotice );
    var_10 = ( var_9 + 1 ) * level._id_11E18.damageuntilnotice;
    var_0.playerdamage[var_5] = var_0.playerdamage[var_5] + var_1;
    scripts\mp\gametypes\br_public.gsc::updatebrscoreboardstat( "tomahDamage", int( var_0.playerdamage[var_5] / 10 ) );

    if ( var_0.playerdamage[var_5] >= var_8 )
        var_6 = 1;

    if ( var_6 )
    {
        var_11 = int( var_0.playerdamage[var_5] / level._id_11E18.damageperintel ) - var_7;
        thread scripts\mp\gametypes\br_gametype_mendota.gsc::intel_collectedmisc( self, var_11, var_3.basename );
    }

    if ( var_0.playerdamage[var_5] >= var_10 )
        tupdateangertarget( var_0, self, 1 );

    if ( isplayer( self ) )
    {
        var_12 = scripts\mp\utility\killstreak::getkillstreaknamefromweapon( var_3 );
        var_13 = isdefined( var_12 ) && var_12 == "precision_airstrike";

        if ( var_13 )
        {
            if ( isdefined( self.brattractions ) )
                self.brattractions++;
        }
    }
}

modifydamagebyweapon( var_0, var_1, var_2 )
{
    if ( var_0 > level._id_11E18.damageperintel )
        var_0 = level._id_11E18.damageperintel;

    var_3 = weaponclass( var_2 );
    var_4 = scripts\mp\utility\weapon::getweaponrootname( var_2 );
    var_5 = 0;
    var_6 = "scr_br_mxp_max_" + var_3;
    var_7 = 50;

    if ( var_3 == "sniper" )
        var_7 = 150;
    else if ( var_1 == "MOD_EXPLOSIVE" )
        var_7 = level._id_11E18.damageperintel;
    else if ( var_3 == "rocketlauncher" || issubstr( var_4, "_la_" ) )
    {
        var_7 = level._id_11E18.damageperintel;
        var_5 = 1;
    }

    var_8 = getdvarfloat( var_6, var_7 );

    if ( var_8 != 0 )
        var_0 = int( min( var_0, var_8 ) );

    var_9 = "scr_br_mxp_scale_" + var_4;
    var_7 = 0;

    if ( issubstr( var_4, "manual_turret_flak" ) )
    {
        if ( var_1 == "MOD_EXPLOSIVE" )
            var_0 = 0;
        else
            var_0 = 100;
    }
    else if ( var_5 )
        var_7 = 5;
    else if ( scripts\mp\utility\weapon::update_health_on_spawn( var_2 ) )
        var_7 = 0.45;
    else
    {
        var_10 = scripts\mp\utility\killstreak::getkillstreaknamefromweapon( var_2 );

        if ( isdefined( var_10 ) && var_10 == "greenbay_strike" )
            return 0.0;

        if ( isdefined( var_10 ) && var_10 == "precision_airstrike" )
            var_7 = 0.6;
    }

    var_11 = getdvarfloat( var_9, var_7 );

    if ( var_11 != 0 )
        var_0 = int( ceil( var_0 * var_11 ) );

    return var_0;
}

playerupdatetomahdamagechallenges( var_0, var_1, var_2 )
{
    if ( istrue( var_2 ) )
    {
        if ( var_0 == level._id_11E18.wait_for_next_hack_complete )
            scripts\cp\vehicles\vehicle_compass_cp::_id_1301E( "mv_event_intel_4", var_1 );
        else
            scripts\cp\vehicles\vehicle_compass_cp::_id_1301E( "mv_event_intel_5", var_1 );

        scripts\cp\vehicles\vehicle_compass_cp::_id_1301E( "mv_event_intel_6", 1 );
    }

    scripts\cp\vehicles\vehicle_compass_cp::_id_1301E( "mv_event_intel_1", var_1 );
}

onplayerdisconnect( var_0 )
{
    var_1 = var_0 getentitynumber();

    if ( isdefined( level._id_11E18.setincomingremovedcallback ) )
        level._id_11E18.setincomingremovedcallback.angertargets[var_1] = undefined;

    if ( isdefined( level._id_11E18.wait_for_next_hack_complete ) )
        level._id_11E18.wait_for_next_hack_complete.angertargets[var_1] = undefined;
}

tgetnextangertarget( var_0 )
{
    if ( var_0.angertargets.size > 0 )
    {
        var_1 = var_0 scripts\engine\utility::array_sort_with_func( var_0.angertargets, ::tcompareangertargets );

        foreach ( var_3 in var_1 )
        {
            if ( isdefined( var_3.player ) )
                return var_3.player;
        }
    }
}

tupdateangertarget( var_0, var_1, var_2 )
{
    var_3 = var_1 getentitynumber();
    taddangertarget( var_0, var_1 );
    var_0.angertargets[var_3].time = gettime();
    var_0.angertargets[var_3].angerlevel = var_0.angertargets[var_3].angerlevel + var_2;
}

taddangertarget( var_0, var_1 )
{
    var_2 = var_1 getentitynumber();

    if ( !isdefined( var_0.angertargets[var_2] ) )
    {
        var_0.angertargets[var_2] = spawnstruct();
        var_0.angertargets[var_2].player = var_1;
        var_0.angertargets[var_2].angerlevel = 0;
    }
}

tremoveangertarget( var_0, var_1 )
{
    var_2 = var_1 getentitynumber();
    var_0.angertargets[var_2] = undefined;
}

tcompareangertargets( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_0.player ) )
        return 0;
    else if ( !isdefined( var_1 ) || !isdefined( var_1.player ) )
        return 1;
    else if ( var_0.angerlevel < var_1.angerlevel )
        return 1;
    else if ( var_0.angerlevel > var_1.angerlevel )
        return 0;
    else
        return var_0.time > var_1.time;
}

_id_13187( var_0, var_1 )
{
    var_2 = "ui_large_agent_entity_numbers";
    var_3 = 8;
    var_4 = var_3;
    var_5 = 0;

    if ( var_0 )
        var_5 = var_3;

    var_6 = int( pow( 2, var_4 ) ) - 1;
    var_7 = ( var_1 & var_6 ) << var_5;
    var_8 = ~( var_6 << var_5 );
    var_9 = getomnvar( var_2 );
    var_10 = var_9 & var_8;
    var_11 = var_10 + var_7;
    setomnvar( var_2, var_11 );
}

playertransfertomahanger( var_0, var_1 )
{
    if ( !level._id_11E18.transferanger || !isdefined( var_0 ) || !isplayer( var_0 ) || !isdefined( var_1 ) || var_0 == var_1 )
        return;

    ttransferanger( level._id_11E18.setincomingremovedcallback, var_0, var_1 );
    ttransferanger( level._id_11E18.wait_for_next_hack_complete, var_0, var_1 );
}

ttransferanger( var_0, var_1, var_2 )
{
    var_3 = var_1 getentitynumber();

    foreach ( var_5 in var_0.angertargets )
    {
        if ( isdefined( var_5 ) && isdefined( var_5.player ) && var_5.player == var_2 )
        {
            taddangertarget( var_0, var_1 );
            var_0.angertargets[var_3].time = gettime();
            var_0.angertargets[var_3].angerlevel = var_0.angertargets[var_3].angerlevel + var_5.angerlevel;
            tremoveangertarget( var_0, var_2 );
        }
    }
}

____notifywatchers()
{

}

kstartnotifywatchers()
{
    var_0 = level._id_11E18.wait_for_next_hack_complete;
    var_0 thread vehomn_clearleveldataforvehicle();
    var_0 thread kleaplandwatcher();
    var_0 thread kchestslamwatcher();
    var_0 thread troarwatcher();
    var_0 thread tstepwatcher();
}

gstartnotifywatchers()
{
    var_0 = level._id_11E18.setincomingremovedcallback;
    var_0 thread gtailsmashwatcher();
    var_0 thread troarwatcher();
    var_0 thread tstepwatcher();
}

vehomn_clearleveldataforvehicle()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "kenosha_ground_pound" );
        vehomn_clearcontrols();
    }
}

kleaplandwatcher()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "kenosha_leap_land" );
        self setscriptablepartstate( "rumble", "medium", 0 );
    }
}

vehomn_clearcontrols()
{
    tstunplayersandremovearmor( self.origin + ( 0, 0, 50 ), level._id_11E18.kgroundpoundradius );
    self setscriptablepartstate( "rumble", "heavy", 0 );
}

kchestslamwatcher()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "kenosha_chest_slam" );
        self setscriptablepartstate( "rumble", "light", 0 );
    }
}

gtailsmashwatcher()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "greenbay_tail_smash" );
        self setscriptablepartstate( "rumble", "heavy", 0 );
    }
}

troarwatcher()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "titan_roar" );
        thread troarfeedback();
        thread troarscreenfxmanager();
    }
}

troarscreenfxmanager()
{
    level endon( "game_ended" );
    var_0 = level._id_11E18.kroarduration;
    var_1 = 0.25;
    var_2 = 0.0;

    if ( self == level._id_11E18.setincomingremovedcallback )
        var_0 = level._id_11E18.groarduration;

    while ( var_2 < var_0 )
    {
        var_3 = scripts\mp\utility\player::getplayersinradius( self.origin, level._id_11E18.theavyfeedbackrange );

        foreach ( var_5 in var_3 )
        {
            if ( isalive( var_5 ) )
            {
                var_5 thread tplayroarscreenfx( var_1 * 2 );
                var_5 thread screenfxendearlywatcher();
            }
        }

        wait( var_1 );
        var_2 = var_2 + var_1;
    }
}

tplayroarscreenfx( var_0 )
{
    self notify( "tPlayRoarScreenFX_starting" );
    self endon( "tPlayRoarScreenFX_starting" );
    self setscriptablepartstate( "headVFX", "mendotaRoar", 0 );
    scripts\engine\utility::waittill_notify_or_timeout( "roar_screen_fx_end_early", var_0 );
    self notify( "roar_screen_fx_end" );
    self setscriptablepartstate( "headVFX", "neutral", 0 );
}

screenfxendearlywatcher()
{
    self endon( "roar_screen_fx_end" );
    self endon( "tPlayRoarScreenFX_starting" );
    self waittill( "death_or_disconnect" );
    self notify( "roar_screen_fx_end_early" );
}

troarfeedback()
{
    if ( self == level._id_11E18.setincomingremovedcallback )
        self setscriptablepartstate( "rumble", "heavy_long", 0 );
    else
        self setscriptablepartstate( "rumble", "heavy", 0 );
}

tstepwatcher()
{
    level endon( "game_ended" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "titan_step" );
        thread tstepfeedback();
    }
}

tstepfeedback()
{
    self setscriptablepartstate( "rumble", "light", 0 );
}

active_healthpacks()
{

}

tplaydialogforplayersinrange( var_0, var_1, var_2 )
{
    var_3 = scripts\common\utility::playersincylinder( var_1, var_2 );

    foreach ( var_5 in var_3 )
        level thread scripts\mp\gametypes\br_public.gsc::dmztut_endgamewithreward( var_0, var_5 );
}

tcanrandomkillstreak()
{
    if ( istrue( self._id_11EA7 ) )
        return 0;

    [var_1, var_2] = khastomoveforkillstreak();

    if ( var_1 )
        return 0;

    if ( isdefined( level.br_circle.circleindex ) && level._id_11E18.trandomkillstreakcircle <= level.br_circle.circleindex )
    {
        self._id_11EA7 = 1;
        return 0;
    }

    return 1;
}

kspawnheadchallengetrigger()
{
    var_0 = level._id_11E18.wait_for_next_hack_complete;
    var_1 = level._id_11E18.kheadchallengetriggerradius;
    var_2 = level._id_11E18.kheadchallengetriggerheight;
    var_3 = "j_head";
    var_4 = var_0 gettagorigin( var_3 );
    var_5 = spawn( "trigger_radius", var_4, 0, var_1, var_2 );
    var_5.angles = var_0 gettagangles( var_3 );
    var_5 enablelinkto();
    var_5.x1loadout = 1;
    var_5 linkto( var_0, var_3, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_0 scripts\mp\utility\trigger::makeenterexittrigger( var_5, ::k_headchallengetriggerenter, ::k_headchallengetriggerexit, undefined, "k_headChallengeTriggerExit", ::k_headchallengetriggerfilter );
}

k_headchallengetriggerfilter( var_0, var_1 )
{
    if ( isplayer( var_0 ) && isalive( var_0 ) )
        return 0;

    return 1;
}

k_headchallengetriggerenter( var_0, var_1 )
{
    if ( !istrue( var_0.isonkkhead ) )
    {
        var_0.isonkkhead = 1;
        var_0 thread kstandingonheadwatcher();
    }
}

k_headchallengetriggerexit( var_0, var_1 )
{
    if ( istrue( var_0.isonkkhead ) )
        var_0.isonkkhead = 0;
}

kstandingonheadwatcher()
{
    self endon( "k_headChallengeTriggerExit" );
    self endon( "disconnect" );
    scripts\engine\utility::waittill_notify_or_timeout( "death", level._id_11E18.kstandonheadduration );
    scripts\cp\vehicles\vehicle_compass_cp::_id_12004( "mv_event_intel_8" );
}

kspawnchallengetrigger()
{
    var_0 = level._id_11E18.wait_for_next_hack_complete;
    var_1 = level._id_11E18.kchallengetriggerradius;
    var_2 = level._id_11E18.kchallengetriggerheight;
    var_3 = "tag_origin";
    var_4 = var_0 gettagorigin( var_3 );
    var_5 = spawn( "trigger_radius", var_4, 0, var_1, var_2 );
    var_5.angles = var_0 gettagangles( var_3 );
    var_5 enablelinkto();
    var_5.x1loadout = 1;
    var_5 linkto( var_0, var_3, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_0 scripts\mp\utility\trigger::makeenterexittrigger( var_5, ::k_challengetriggerenter, undefined, undefined, undefined, ::k_challengetriggerfilter );
}

k_challengetriggerenter( var_0, var_1 )
{
    var_2 = var_0 getvehicleowner();

    if ( isdefined( var_2 ) && isplayer( var_2 ) )
        var_2 scripts\cp\vehicles\vehicle_compass_cp::_id_12004( "mv_event_intel_9" );
}

k_challengetriggerfilter( var_0, var_1 )
{
    if ( isdefined( var_0.vehiclename ) && var_0.vehiclename == "veh_a10fd" && isdefined( var_0 getvehicleowner() ) )
        return 0;

    return 1;
}

ee_spyequipmentscriptableused( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_2 == "on" )
        var_0 ee_activatespyequipment( var_3 );
}

ee_activatespyequipment( var_0 )
{
    self setscriptablepartstate( "spy_equipment", "off" );

    if ( isdefined( self.script_noteworthy ) )
        ee_playspyequipmentdialog( self.script_noteworthy );

    thread ee_spy_equipment_cooldown();
}

ee_playspyequipmentdialog( var_0 )
{
    level endon( "game_ended" );

    switch ( var_0 )
    {
        case "audio1":
            ee_play_dialog_and_wait( "dx_brm_nvof_titan_convo_shipments_one_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_shipments_two_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_shipments_three_10" );
            break;
        case "audio2":
            ee_play_dialog_and_wait( "dx_brm_nvof_titan_convo_carrier_one_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_carrier_two_10" );
            ee_play_dialog_and_wait( "dx_brm_nvof_titan_convo_carrier_three_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_carrier_four_10" );
            break;
        case "audio3":
            ee_play_dialog_and_wait( "dx_brm_sci1_titan_convo_seismic_one_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_seismic_two_10" );
            ee_play_dialog_and_wait( "dx_brm_sci1_titan_convo_seismic_three_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_seismic_four_10" );
            break;
        case "audio4":
            ee_play_dialog_and_wait( "dx_brm_nvof_titan_convo_lostcontact_one_10" );
            ee_play_dialog_and_wait( "dx_brm_sci1_titan_convo_lostcontact_two_10" );
            ee_play_dialog_and_wait( "dx_brm_nvof_titan_convo_lost_contact_three_10" );
            break;
        case "audio5":
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_noescape_one_10" );
            ee_play_dialog_and_wait( "dx_brm_sci1_titan_convo_noescape_two_10" );
            ee_play_dialog_and_wait( "dx_brm_sci2_titan_convo_noescape_three_10" );
            ee_play_dialog_and_wait( "dx_brm_sci1_titan_convo_noescape_four_10" );
            break;
    }
}

ee_play_dialog_and_wait( var_0 )
{
    var_1 = lookupsoundlength( var_0 );
    playsoundatpos( self.origin, var_0 );
    wait( var_1 / 1000 );

    if ( level._id_11E18.eetimebetweendialoglines > 0 )
        wait( level._id_11E18.eetimebetweendialoglines );
}

ee_spy_equipment_cooldown()
{
    self endon( "death" );
    wait( level._id_11E18.ee_cooldown_duration );
    self setscriptablepartstate( "spy_equipment", "on" );
}

tstunplayersandremovearmor( var_0, var_1 )
{
    var_2 = getentarrayinradius( "player", "classname", var_0, var_1 );

    foreach ( var_4 in var_2 )
    {
        if ( isalive( var_4 ) )
        {
            if ( var_4 scripts\mp\gametypes\br_public.gsc::hasarmor() )
                var_4 dodamage( var_4.br_armorhealth, var_0, self, self, "MOD_EXPLOSIVE", getcompleteweaponname( "kenosha_strike" ) );

            var_4 scripts\mp\weapons::setplayerstunned();
            var_4 thread scripts\mp\weapons::cleanupconcussionstun( level._id_11E18.kgroundpoundstunduration );
            var_4 scripts\cp_mp\utility\shellshock_utility::_shellshock( "concussion_grenade_mp", "stun", level._id_11E18.kgroundpoundstunduration, 1 );
        }
    }
}

_id_13C1D( var_0 )
{
    var_1 = _id_13C1C( var_0 );
    _id_13ED2( var_1 );
}

tplayinterruptableanim( var_0 )
{
    var_1 = _id_13C1C( var_0 );
    var_2 = getanimlength( var_1 );
    var_3 = scripts\engine\utility::waittill_notify_or_timeout_return( "gk_driven_off", var_2 );
    return var_3 == "timeout";
}

_id_13C1B()
{
    self asmsetstate( self.asmname, "idle_aim" );
    self asmfireevent( self.asmname, "start_aim" );
}

_id_13C1C( var_0 )
{
    var_1 = "scripted_anim";
    var_2 = archetypegetrandomalias( self.callback, var_1, var_0, 0 );
    var_3 = self getanimentry( var_1, var_2 );
    self setanimstate( var_1, var_2, 1.0 );
    thread _id_13BA6( var_0, var_3 );
    return var_3;
}

_id_13ED2( var_0 )
{
    var_1 = getanimlength( var_0 );
    wait( var_1 );
}

_id_13BA6( var_0, var_1 )
{
    if ( !isdefined( level._id_11E18.notetracks ) || !isdefined( level._id_11E18.notetracks[var_0] ) )
        return;

    foreach ( var_3 in level._id_11E18.notetracks[var_0] )
    {
        var_4 = getnotetracktimes( var_1, var_3 );
        var_5 = getanimlength( var_1 );
        thread _id_13BA7( var_3, var_5, var_4 );
    }
}

_id_13BA7( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "gk_driven_off" );
    var_3 = 0.0;
    var_4 = 0.0;

    foreach ( var_6 in var_2 )
    {
        var_4 = var_6 - var_3;
        wait( var_1 * var_4 );
        self notify( var_0 );
        var_3 = var_3 + var_4;
    }
}

_id_13BA1()
{
    self.x1fin_respawn.origin = self.origin;
    self.x1fin_respawn.angles = self.angles;
    self linkto( self.x1fin_respawn, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    self.x1fin_respawn dontinterpolate();
}

_id_13E37()
{
    self unlink();
    self.x1fin_respawn.origin = self.origin;
    self.x1fin_respawn.angles = self.angles;
    self.x1fin_respawn dontinterpolate();
}

tisreadytotalk( var_0 )
{
    if ( isdefined( var_0.talknexttime ) && gettime() < var_0.talknexttime )
        return 0;

    if ( !ginnodestate() || !kinnodestate() )
        return 0;

    var_1 = sandbox_combat_area();
    var_2 = vehiclespawn_littlebirdmg();
    var_3 = scripts\engine\trace::create_contents( 0, 1 );
    var_4 = scripts\engine\trace::ray_trace_passed( var_1, var_2, [ level._id_11E18.setincomingremovedcallback, level._id_11E18.wait_for_next_hack_complete ], var_3 );
    return var_4;
}

score_message()
{
    if ( istrue( level._id_11E18._id_12212 ) )
        return 1;

    if ( getdvarint( "scr_br_mxp_pause", 0 ) )
    {
        if ( sales_discount() )
            return 0;

        return 1;
    }

    return 0;
}

wait_for_morales_thanks()
{
    if ( istrue( level._id_11E18._id_12212 ) )
        return 1;

    if ( getdvarint( "scr_br_mxp_pause", 0 ) )
    {
        if ( vehiclespawn_cargotruckmg() )
            return 0;

        return 1;
    }

    return 0;
}

sales_discount()
{
    return getdvarint( "scr_br_mxp_g_advance", 0 ) || getdvarint( "scr_br_mxp_g_keep_walking", 0 );
}

set_relic_headbullets()
{
    setdvar( "scr_br_mxp_g_advance", 0 );
}

vehiclespawn_cargotruckmg()
{
    return getdvarint( "scr_br_mxp_k_advance", 0 ) || getdvarint( "scr_br_mxp_k_keep_jumping", 0 );
}

waitforreturntobattlestance()
{
    setdvar( "scr_br_mxp_k_advance", 0 );
}

secretstashlootcacheused( var_0, var_1 )
{
    if ( !isalive( var_0 ) )
        return;

    if ( isplayer( var_0 ) )
    {
        var_0._id_136DC = gkgetdeathspectatepoint( var_1.ownertitan, var_0 );
        var_0 _meth_87E1( 1 );
        var_0 kill( var_1.origin, var_1.ownertitan, var_1 );
    }
    else if ( var_0 scripts\mp\gametypes\br_public.gsc::nuke_vault_suicidebombers() )
        var_0 dodamage( var_0.health, var_1.origin, var_1.ownertitan, var_1 );
}

gkgetdeathspectatepoint( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;

    if ( var_0.agent_type == "actor_greenbay" )
    {
        var_2 = 3000;
        var_3 = level._id_11E18.setincomingremovedcallback.origin;
        var_4 = level.mapcenter - var_3;
    }
    else
    {
        var_2 = 3400;
        var_3 = level._id_11E18.wait_for_next_hack_complete.origin;
        var_4 = var_1.origin - var_3;
    }

    var_4 = vectornormalize( ( var_4[0], var_4[1], 0 ) );
    var_5 = ( var_3[0], var_3[1], var_1.origin[2] );
    var_6 = var_5 + var_4 * ( var_2 + 500 );
    var_7 = [ var_0, var_1 ];
    var_8 = scripts\engine\trace::create_contents( 0, 1 );
    var_9 = scripts\engine\trace::ray_trace( var_5, var_6, var_7, var_8 );
    var_10 = var_4 * -1;
    var_11 = var_9["position"] + var_10 * 50;
    var_12 = vectortoangles( var_10 );
    var_13 = spawnstruct();
    var_13.origin = var_11;
    var_13.angles = var_12;
    return var_13;
}

_id_13DCE()
{
    self endon( "destroy" );
    var_0 = length2d( ( self.height / 2, self.radius, 0 ) );

    for (;;)
    {
        if ( self.classname == "trigger_rotatable_radius" )
            var_1 = anglestoup( self.angles );
        else
            var_1 = ( 0, 0, 1 );

        var_2 = self.origin + var_1 * self.height / 2;
        var_3 = tablesort( var_2, var_0 );

        foreach ( var_5 in var_3 )
        {
            if ( isdefined( var_5 ) && var_5 istouching( self ) )
                secretstashlootcacheused( var_5, self );
        }

        waitframe();
    }
}

kinitializeplayercollision()
{
    var_0 = self;
    var_0 endon( "death" );
    var_0 agentsetclipmode( "large" );
    var_1 = 0.1;
    var_0.collisionlist = [];
    var_2 = getentarray( "kenosha_collision", "targetname" );

    foreach ( var_4 in var_2 )
    {
        var_5 = "?";
        var_6 = ( 0, 0, 0 );
        var_7 = ( 0, 0, 0 );
        var_8 = var_4.script_noteworthy;

        if ( var_8 == "head" )
        {
            var_5 = "j_head";
            var_6 = ( 520, -200, 0 );
            var_7 = ( 180, 82, 90 );
        }
        else if ( var_8 == "left_foot" )
        {
            var_5 = "j_ankle_le";
            var_6 = ( 360, -230, -30 );
            var_7 = ( 0, -30, 90 );
        }
        else if ( var_8 == "right_foot" )
        {
            var_5 = "j_ankle_ri";
            var_6 = ( 340, -165, 60 );
            var_7 = ( 0, -20, 90 );
        }
        else if ( var_8 == "left_shoulder" )
        {
            var_5 = "j_shoulder_le";
            var_6 = ( -310, 140, -20 );
            var_7 = ( 180, 260, 110 );
        }
        else if ( var_8 == "right_shoulder" )
        {
            var_5 = "j_shoulder_ri";
            var_6 = ( 300, -80, 0 );
            var_7 = ( 180, 90, 65 );
        }
        else if ( var_8 == "torso" )
        {
            var_5 = "j_spineupper";
            var_6 = ( 0, -200, 0 );
            var_7 = ( 180, 110, 90 );
        }
        else
        {

        }

        var_9 = spawnstruct();
        var_9.colliderent = var_4;
        var_9.tagname = var_5;
        var_9.originoffset = var_6;
        var_9.angleoffset = var_7;
        var_0.collisionlist[var_8] = var_9;
    }

    var_11 = var_0 gkkilltriggercreate( 550, 670, "j_head", 1, ( -300, 0, 0 ), ( 180, 82, 90 ) );
    var_12 = var_0 gkkilltriggercreate( 500, 1200, "j_spineupper", 1, ( 800, 180, -600 ), ( 0, 0, 0 ) );
    wait( var_1 );
    var_13 = var_0 gkkilltriggercreate( 400, 1600, "j_shoulder_le", 1, ( -100, 0, 0 ), ( 90, 0, 0 ) );
    var_14 = var_0 gkkilltriggercreate( 400, 1600, "j_shoulder_ri", 1, ( 100, 0, 0 ), ( -90, 0, 0 ) );
    wait( var_1 );
    var_15 = var_0 gkkilltriggercreate( 400, 1100, "j_elbow_le", 1, ( -100, 0, 0 ), ( 90, -10, 0 ) );
    var_16 = var_0 gkkilltriggercreate( 400, 1100, "j_elbow_ri", 1, ( -100, 0, 0 ), ( -90, -10, 0 ) );
    wait( var_1 );
    var_17 = var_0 gkkilltriggercreate( 350, 1000, "j_hip_le", 1, ( 200, 0, 0 ), ( 90, -15, 0 ) );
    var_18 = var_0 gkkilltriggercreate( 350, 1000, "j_hip_ri", 1, ( 200, 0, 0 ), ( 90, 0, 0 ) );
    wait( var_1 );
    var_19 = var_0 gkkilltriggercreate( 320, 1400, "j_knee_le", 1, ( -100, 100, 0 ), ( 90, 0, 0 ) );
    var_20 = var_0 gkkilltriggercreate( 320, 1400, "j_knee_ri", 1, ( -100, 100, 0 ), ( 90, 0, 0 ) );
    wait( var_1 );
    var_21 = var_0 gkkilltriggercreate( 450, 120, "j_ankle_le", 1, ( 470, -20, 30 ), ( 0, -32, 86 ) );
    var_22 = var_0 gkkilltriggercreate( 450, 120, "j_ankle_ri", 1, ( 470, 60, 30 ), ( 0, -23, 90 ) );
    level._id_11E18.wait_for_next_hack_complete.collisionkilltriggers = [ var_11, var_12, var_13, var_14, var_15, var_16, var_13, var_14, var_19, var_20, var_21, var_22 ];

    if ( getdvarint( "scr_br_mxp_kk_back_trigger", 1 ) )
    {
        var_23 = var_0 gkkilltriggercreate( 800, 2000, "j_spinelower", 1, ( -700, 0, 0 ), ( 90, 0, 0 ) );
        level._id_11E18.wait_for_next_hack_complete.collisionkilltriggers[level._id_11E18.wait_for_next_hack_complete.collisionkilltriggers.size] = var_23;
    }

    var_0.collisioninitialized = 1;
    var_0 thread gkrunplayercollision( 0 );
}

gkrunplayercollision( var_0 )
{
    var_1 = self;
    var_1 endon( "death" );
    var_1 notify( "gkRunPlayerCollision" );
    var_1 endon( "gkRunPlayerCollision" );

    while ( !istrue( var_1.collisioninitialized ) )
        waitframe();

    if ( var_0 == 1 )
    {
        foreach ( var_3 in var_1.collisionlist )
        {
            var_3.colliderent unlink();
            var_3.colliderent linkto( var_1, var_3.tagname, var_3.originoffset, var_3.angleoffset );
        }
    }
    else
    {
        foreach ( var_3 in var_1.collisionlist )
        {
            var_3.colliderent unlink();
            var_6 = var_1 gkcalculatecolliderpositioning( var_3 );
            var_3.colliderent.origin = var_6[0];
            var_3.colliderent.angles = var_6[1];
        }

        for (;;)
        {
            foreach ( var_3 in var_1.collisionlist )
            {
                var_6 = var_1 gkcalculatecolliderpositioning( var_3 );
                var_3.colliderent moveto( var_6[0], 0.1 );
                var_3.colliderent rotateto( var_6[1], 0.1 );
            }

            waitframe();
        }
    }
}

gkcalculatecolliderpositioning( var_0 )
{
    var_1 = self;
    var_2 = var_1 gettagorigin( var_0.tagname );
    var_3 = var_1 gettagangles( var_0.tagname );
    var_4 = var_2 + rotatevector( var_0.originoffset, var_3 );
    var_5 = combineangles( var_3, var_0.angleoffset );
    return [ var_4, var_5 ];
}

binocularsseegk()
{
    var_0 = [ "physicscontents_actor", "physicscontents_clipshot", "physicscontents_missileclip", "physicscontents_solid", "physicscontents_vehicleclip" ];
    var_1 = physics_createcontents( var_0 );
    var_2 = self getvieworigin();
    var_3 = var_2 + anglestoforward( self getplayerangles() ) * 50000;
    var_4 = ignore_ents_when_targetting();
    var_5 = scripts\engine\trace::ray_trace( var_2, var_3, var_4, var_1 );

    if ( getdvarint( "scr_br_mxp_precision_target_disable", 0 ) )
        return scripts\engine\utility::ter_op( var_5["hittype"] == "hittype_none", undefined, var_5["position"] );

    if ( var_5["hittype"] == "hittype_none" )
        return undefined;

    var_6 = var_5["position"];

    if ( var_5["hittype"] == "hittype_entity" )
    {
        var_7 = var_5["entity"];

        if ( isdefined( var_7 ) && isdefined( var_7.agent_type ) )
        {
            if ( var_7.agent_type == "actor_greenbay" || var_7.agent_type == "actor_kenosha" )
                var_6 = var_7.origin;
        }
    }

    return var_6;
}

ignore_ents_when_targetting()
{
    var_0 = undefined;

    if ( isdefined( self.vehicle ) )
        var_0 = [ self.vehicle ];
    else
    {
        var_1 = self getgroundentity();

        if ( isdefined( var_1 ) && isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
            var_0 = [ var_1 ];
    }

    return var_0;
}

shouldignorevehicleaabbcollision( var_0, var_1, var_2 )
{
    return var_2 == "MOD_CRUSH" && isdefined( var_1 ) && isdefined( var_0 ) && var_1 == var_0 && isdefined( var_1.vehiclename ) && ( var_1.vehiclename == "veh_a10fd" || var_1.vehiclename == "veh_bt" || issubstr( var_1.vehiclename, "little_bird" ) );
}

activate_destructible_cinderblocks()
{

}
