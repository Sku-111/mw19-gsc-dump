// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.averagealliesz = 0;
    level._id_119E7 = [];
    scripts\cp_mp\utility\script_utility::registersharedfunc( "br_lootchopper", "lootChopper_onCrateUse", ::_id_11A11 );
    level thread _id_12B27();
}

_id_12B27()
{
    while ( !isdefined( level.vehicle ) )
        waitframe();

    var_0 = scripts\cp_mp\vehicles\vehicle::vehicle_getleveldataforvehicle( "loot_chopper", 1 );
    var_0.canfly = 1;
}

_id_11A0D( var_0 )
{
    var_1 = _id_11A09( var_0 );
    level._id_119E6 = [];
    level._id_119E6["quad_1"] = [];
    level._id_119E6["quad_2"] = [];
    level._id_119E6["quad_3"] = [];
    level._id_119E6["quad_4"] = [];

    if ( !isdefined( var_1 ) )
        return;

    foreach ( var_3 in var_1 )
    {
        var_4 = undefined;
        var_5 = undefined;
        var_6 = undefined;

        if ( var_0.isvalid )
        {
            foreach ( var_10, var_8 in var_0._id_12952 )
            {
                var_9 = distance2dsquared( var_3.origin, var_8 );

                if ( !isdefined( var_4 ) || var_9 < var_4 )
                {
                    var_4 = var_9;
                    var_5 = var_8;
                    var_6 = "quad_" + ( var_10 + 1 );
                }
            }
        }
        else
        {
            foreach ( var_10, var_8 in level._id_12950 )
            {
                var_9 = distance2dsquared( var_3.origin, var_8 );

                if ( !isdefined( var_4 ) || var_9 < var_4 )
                {
                    var_4 = var_9;
                    var_5 = var_8;
                    var_6 = "quad_" + ( var_10 + 1 );
                }
            }
        }

        var_3.origin = var_3.origin * ( 1, 1, 0 );
        var_3.origin = scripts\mp\gametypes\br.gsc::resetcircuitbreakers( var_3.origin, ( 0, 0, 10000 ) );
        level._id_119E6[var_6][level._id_119E6[var_6].size] = var_3;
    }
}

_id_11A09( var_0 )
{
    var_1 = [];

    foreach ( var_3 in level.delete_script_object )
    {
        if ( var_0.isvalid )
        {
            if ( distance2dsquared( var_3.origin, var_0.center ) > var_0.radius * var_0.radius )
                continue;
        }

        var_4 = spawnstruct();
        var_4.origin = var_3.origin;
        var_1[var_1.size] = var_4;
    }

    return var_1;
}

_id_11A0C( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.isvalid = isdefined( var_0 ) && isdefined( var_1 );

    if ( var_2.isvalid )
    {
        var_2.center = var_0;
        var_2.radius = var_1;
        var_3 = 45.0;
        var_4 = cos( var_3 );
        var_5 = sin( var_3 );
        var_2._id_12952[0] = var_0 + ( -1.0 * var_4, var_5, 0 ) * var_1 * 0.5;
        var_2._id_12952[1] = var_0 + ( var_4, var_5, 0 ) * var_1 * 0.5;
        var_2._id_12952[2] = var_0 + ( var_4, -1.0 * var_5, 0 ) * var_1 * 0.5;
        var_2._id_12952[3] = var_0 + ( -1.0 * var_4, -1.0 * var_5, 0 ) * var_1 * 0.5;
    }

    return var_2;
}

_id_11A0F()
{
    level endon( "game_ended" );

    if ( scripts\mp\gametypes\br_public.gsc::uniquelootitemid() )
        return;

    var_0 = undefined;
    var_1 = undefined;

    if ( isdefined( level.br_circle ) && isdefined( level.br_circle.safecircleent ) )
    {
        var_0 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
        var_1 = scripts\mp\gametypes\br_circle.gsc::getsafecircleradius();
    }

    var_2 = _id_11A0C( var_0, var_1 );
    _id_11A0D( var_2 );
    level waittill( "br_prematchEnded" );
    var_3 = getdvarint( "scr_dmz_lc_max_active", 5 );
    var_4 = getdvarint( "scr_dmz_lc_min_spawn_dist", 6000 );
    var_5 = getdvarint( "scr_dmz_lc_spawn_cooldown_min", 360 );
    var_6 = getdvarint( "scr_dmz_lc_spawn_cooldown_max", 480 );

    if ( level.mapname == "mp_br_mechanics" )
        var_4 = 1000;

    for (;;)
    {
        var_7 = getdvarint( "scr_dmz_lc_active", 0 );

        if ( !var_7 )
        {
            waitframe();
            continue;
        }

        var_8 = randomintrange( var_5, var_6 );

        if ( istrue( level._id_14086 ) )
            scripts\mp\flags::gameflagwait( "activate_cash_helis" );
        else
            wait( var_8 );

        if ( level._id_119E7.size < var_3 )
        {
            var_9 = var_3 - level._id_119E7.size;

            for ( var_10 = 0; var_10 < var_9; var_10++ )
            {
                var_11 = var_10 + 1;

                if ( var_11 > 4 )
                    var_11 = 1;

                var_12 = _id_11A07( level._id_119E6["quad_" + var_11], var_4 );

                if ( !isdefined( var_12 ) )
                    wait 1;

                if ( var_10 == 0 )
                    scripts\mp\gametypes\br_gametype_dmz.gsc::_id_13371( "br_lootchopper_incoming" );

                _id_11A18( var_12 );

                if ( istrue( level._id_14086 ) )
                    wait( randomintrange( 1, 2 ) );
            }

            if ( istrue( level._id_14086 ) )
                return;

            continue;
        }

        while ( level._id_119E7.size >= var_3 )
            waitframe();
    }
}

_id_11A07( var_0, var_1 )
{
    var_2 = undefined;

    if ( var_0.size > 0 )
    {
        var_3 = [];

        foreach ( var_5 in var_0 )
        {
            if ( istrue( var_5.goalstruct ) )
                continue;

            if ( _id_11A0E( var_5, var_1 ) )
                continue;

            var_5.goalstruct = 1;
            var_3[var_3.size] = var_5;
        }

        if ( var_3.size > 0 )
            var_2 = var_3[randomint( var_3.size )];
    }

    return var_2;
}

_id_11A0E( var_0, var_1 )
{
    var_2 = 0;
    var_3 = level._id_119E6;
    var_4 = var_1 * var_1;

    foreach ( var_6 in var_3 )
    {
        foreach ( var_8 in var_6 )
        {
            if ( istrue( var_8.goalstruct ) )
            {
                if ( distance2dsquared( var_0.origin, var_8.origin ) < var_4 )
                {
                    var_2 = 1;
                    break;
                }
            }
        }

        if ( istrue( var_2 ) )
            break;
    }

    return var_2;
}

_id_11A0A( var_0 )
{
    var_1 = undefined;
    var_2 = 0;

    foreach ( var_5, var_4 in level._id_119E6 )
    {
        if ( var_2 == var_0 )
        {
            var_1 = var_4;
            break;
        }

        var_2++;
    }

    return var_1;
}

_id_11A18( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = undefined;
    var_6 = getdvarint( "scr_dmz_lc_patrol_radius", 4000 );

    if ( isdefined( var_0 ) )
        var_5 = var_0.origin;
    else
    {
        var_7 = [];

        foreach ( var_9 in level.players )
        {
            if ( scripts\mp\utility\player::isreallyalive( var_9 ) )
                var_7[var_7.size] = var_9;
        }

        if ( var_7.size > 0 )
        {
            var_11 = randomint( var_7.size );
            var_5 = var_7[var_11].origin;
        }
    }

    if ( !isdefined( var_5 ) )
        return;

    var_5 = scripts\mp\gametypes\br.gsc::resetcircuitbreakers( var_5, ( 0, 0, 10000 ) );
    var_12 = undefined;

    if ( isdefined( var_4 ) )
        var_12 = var_4;
    else
        var_12 = scripts\cp_mp\killstreaks\chopper_support::getpathstart( var_5 );

    var_13 = vectortoangles( var_5 - var_12 );
    var_14 = -1200;

    if ( isdefined( level.br_level ) && isdefined( level.br_level._id_11A5B ) )
        var_14 = level.br_level._id_11A5B;

    var_15 = var_14 + 10000;

    if ( var_12[2] < var_15 )
        var_12 = ( var_12[0], var_12[1], var_15 );

    var_16 = scripts\engine\utility::ter_op( isdefined( var_1 ), var_1, "veh_chopper_support_dmz_mp" );
    var_17 = scripts\cp_mp\vehicles\vehicle_tracking::_spawnhelicopter( level.players[randomint( level.players.size )], var_12, var_13, var_16, "veh8_mil_air_palfa_east" );

    if ( !isdefined( var_17 ) )
        return;

    if ( isdefined( var_2 ) && isdefined( var_3 ) )
    {
        var_17.chopper_boss_explosion = var_2;
        var_17._id_1220E = var_3;
    }
    else
        var_17.chopper_boss_explosion = 0;

    var_17.speed = 100;
    var_17.accel = 50;
    var_17.lifetime = getdvarint( "scr_dmz_lc_lifetime", 9999 );
    var_17.team = "neutral";
    var_17.angles = var_13;
    var_17.flaresreservecount = getdvarint( "scr_dmz_lc_flares", 0 );
    var_17.currentdamagestate = 0;
    var_17.pathstart = var_12;
    var_17.pathgoal = var_5;
    var_17.currentaction = "patrol";
    var_17.currenttarget = undefined;
    var_17.heightoffset = ( 0, 0, getdvarint( "scr_dmz_lc_height", 1500 ) );
    var_17._id_12210 = var_0;
    var_17._id_1220D = var_5;
    var_17._id_1220F = var_6;
    var_17._id_13768 = 35;
    var_17.infil_complete = var_17.heightoffset[2] - 250;

    if ( var_17.chopper_boss_explosion )
    {
        var_17._id_12200 = 0;
        var_17.updateteamscoreplacements = 1;
    }

    var_17 setmaxpitchroll( 15, 15 );
    var_17 vehicle_setspeed( var_17.speed, var_17.accel );
    var_17 sethoverparams( 50, 5, 2.5 );
    var_17 setturningability( 0.5 );
    var_17 setyawspeed( 100, 25, 25, 0.1 );
    var_17 setcandamage( 1 );
    var_17 setneargoalnotifydist( 768 );
    var_17 setvehicleteam( var_17.team );
    var_17.health = getdvarint( "scr_dmz_lc_health", 5000 );
    var_17.maxhealth = getdvarint( "scr_dmz_lc_health", 5000 );
    var_17 scripts\mp\sentientpoolmanager::registersentient( "Level_Vehicle", var_17.team );
    var_17 _id_11A15();
    var_17 setscriptablepartstate( "blinking_lights", "on", 0 );
    var_17 setscriptablepartstate( "engine", "on", 0 );
    var_17.frontturret = spawnturret( "misc_turret", var_17 gettagorigin( "tag_turret_front" ), "chopper_support_turret_mp" );
    var_17.frontturret setmodel( "veh8_mil_air_ahotel64_turret_wm_east" );
    var_17.frontturret.team = var_17.team;
    var_17.frontturret.angles = var_17.angles;
    var_17.frontturret.turreton = 1;
    var_17.frontturret.name = "front_turret";
    var_17.frontturret.attackingtarget = undefined;
    var_17.frontturret._id_14258 = "loot_chopper";
    var_17.frontturret linkto( var_17 );
    var_17.frontturret setturretteam( var_17.team );
    var_17.frontturret setturretmodechangewait( 0 );
    var_17.frontturret setmode( "manual" );
    var_17.frontturret setdefaultdroppitch( 45 );
    var_17.frontturret.groundtargetent = spawn( "script_model", var_17.origin );
    var_17.frontturret.groundtargetent setmodel( "tag_origin" );
    var_17.frontturret.groundtargetent dontinterpolate();
    var_17.rearturret = spawnturret( "misc_turret", var_17 gettagorigin( "tag_turret_rear" ), "chopper_support_turret_mp" );
    var_17.rearturret setmodel( "veh8_mil_air_ahotel64_turret_wm_east" );
    var_17.rearturret.team = var_17.team;
    var_17.rearturret.angles = var_17.angles;
    var_17.rearturret.turreton = 1;
    var_17.rearturret.name = "rear_turret";
    var_17.rearturret.attackingtarget = undefined;
    var_17.rearturret._id_14258 = "loot_chopper";
    var_17.rearturret linkto( var_17 );
    var_17.rearturret setturretteam( var_17.team );
    var_17.rearturret setturretmodechangewait( 0 );
    var_17.rearturret setmode( "manual" );
    var_17.rearturret setdefaultdroppitch( 45 );
    var_17.rearturret.groundtargetent = spawn( "script_model", var_17.origin );
    var_17.rearturret.groundtargetent setmodel( "tag_origin" );
    var_17.rearturret.groundtargetent dontinterpolate();
    level._id_119E7[level._id_119E7.size] = var_17;

    if ( var_17.chopper_boss_explosion && isdefined( var_17.intro_enemy_respawner ) )
        var_17._id_1220C = var_17.intro_enemy_respawner;
    else
        var_17._id_1220C = ::_id_11A12;

    var_17.lootfunc = ::_id_11A05;
    var_17.has_ammo_drain_passive = ::_id_11A03;
    var_17 _id_11A04();
    var_17 thread scripts\cp_mp\killstreaks\chopper_support::choppersupport_neargoalsettings();

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "flares", "handleIncomingStinger" ) )
        var_17 thread [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "flares", "handleIncomingStinger" ) ]]( scripts\cp_mp\killstreaks\chopper_support::choppersupport_handlemissiledetection );

    if ( !istrue( var_17.chopper_boss_explosion ) )
        var_17 thread scripts\cp_mp\killstreaks\chopper_support::debugtimedelta( var_17.pathgoal, 1 );

    return var_17;
}

_id_11A15()
{
    self.vehiclename = "loot_chopper";
    scripts\mp\vehicles\damage::set_vehicle_hit_damage_data( self.vehiclename, 20 );
    _id_11A10( "iw8_la_gromeo_mp", 4.0, 20 );
    _id_11A10( "iw8_la_kgolf_mp", 4.0, 20 );
    _id_11A10( "iw8_la_t9standard_mp", 4.0, 20 );
    _id_11A10( "iw8_la_rpapa7_mp", 4.0, 20 );
    _id_11A10( "iw8_la_t9freefire_mp", 4.0, 20 );
    _id_11A10( "iw8_la_juliet_mp", 5.0, 20 );
    _id_11A10( "iw8_la_gromeoks_mp", 4.0, 20 );
    _id_11A10( "iw8_la_mike32_mp", 2.85714, 20 );
    _id_11A10( "iw8_la_t9launcher_mp", 2.85714, 20 );
    _id_11A10( "iw8_ar_mike4_mp", 2.85714, 20 );
    _id_11A10( "iw8_ar_akilo47_mp", 2.85714, 20 );
    _id_11A10( "c4_mp_p", 4.0, 20 );
    _id_11A10( "semtex_mp", 2.85714, 20 );
    _id_11A10( "frag_grenade_mp", 2.85714, 20 );
    _id_11A10( "pop_rocket_mp", 2.85714, 20 );
    _id_11A10( "molotov_mp", 1.81818, 20 );
    _id_11A10( "at_mine_ap_mp", 1.81818, 20 );
    _id_11A10( "at_mine_mp", 2.85714, 20 );
    _id_11A10( "thermite_mp", 1, 36 );
    _id_11A10( "thermite_av_mp", 1, 36 );
    _id_11A10( "thermite_bolt_mp", 1, 30 );
    _id_11A10( "thermite_xmike109_mp", 1, 52 );
    _id_11A10( "emp_grenade_mp", 2.85714, 20 );
    _id_11A10( "claymore_mp", 2.85714, 20 );
    _id_11A10( "semtex_bolt_mp", 2.0, 20 );
    _id_11A10( "semtex_xmike109_mp", 1.42857, 20 );
    _id_11A10( "semtex_aalpha12_mp", 1.0, 20 );
    _id_11A10( "apache_proj_mp", 5.0, 20 );
    _id_11A10( "toma_proj_mp", 2.85714, 20 );
    _id_11A10( "cruise_proj_mp", 6.66667, 20 );
    _id_11A10( "artillery_mp", 6.66667, 20 );
    _id_11A10( "nuke_mp", 10.0, 20 );
    _id_11A10( "ac130_105mm_mp", 10.0, 20 );
    _id_11A10( "ac130_40mm_mp", 5.0, 20 );
    _id_11A10( "ac130_25mm_mp", 2.85714, 20 );
    _id_11A10( "hover_jet_proj_mp", 5.0, 20 );
    scripts\cp_mp\vehicles\vehicle_damage::vehicle_damage_enableownerdamage( self );
    scripts\mp\vehicles\damage::get_vehicle_mod_damage_data( self.vehiclename, 1 );
    scripts\mp\vehicles\damage::set_pre_mod_damage_callback( self.vehiclename, ::_id_11A14 );
    scripts\mp\vehicles\damage::set_post_mod_damage_callback( self.vehiclename, ::_id_11A13 );
    scripts\mp\vehicles\damage::set_death_callback( self.vehiclename, ::_id_11A0B );
    scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_registerinstance( self );
}

_id_11A10( var_0, var_1, var_2 )
{
    scripts\mp\vehicles\damage::set_weapon_hit_damage_data_for_vehicle( var_0, var_1, self.vehiclename );
    scripts\mp\vehicles\damage::set_vehicle_hit_damage_data_for_weapon( self.vehiclename, var_2, var_0 );
}

_id_11A14( var_0 )
{
    var_1 = var_0.damage;
    var_2 = var_0.attacker;
    return 1;
}

_id_11A13( var_0 )
{
    scripts\cp_mp\killstreaks\chopper_support::choppersupport_modifydamage( var_0 );

    if ( !isdefined( self.attackers ) )
        self.attackers = [];

    var_1 = _id_11A08( var_0.attacker );

    if ( !isdefined( var_1 ) )
    {
        var_2 = spawnstruct();
        var_2.player = var_0.attacker;
        var_2.objweapon = var_0.objweapon;
        var_2._id_13BEE = var_0.damage;
        self.attackers[self.attackers.size] = var_2;
    }
    else
    {
        var_1._id_13BEE = var_1._id_13BEE + var_0.damage;
        var_1.objweapon = var_0.objweapon;
    }

    return 1;
}

_id_11A0B( var_0 )
{
    scripts\cp_mp\killstreaks\chopper_support::choppersupport_handledeathdamage( var_0 );

    if ( istrue( level.tryupdategenericprogress ) )
    {
        self notify( "death" );
        return 1;
    }

    var_1 = undefined;
    var_2 = undefined;
    var_3 = var_0.attacker;
    self.viphud_hidefromplayer = var_3;

    if ( isdefined( self.attackers ) )
    {
        foreach ( var_5 in self.attackers )
        {
            if ( isdefined( var_5.player ) )
            {
                if ( isdefined( var_3 ) && var_3 == var_5.player )
                    var_1 = "br_loot_chopper_destroyed";
                else
                    var_1 = "br_loot_chopper_destroyed_assist";

                var_2 = scripts\mp\rank::getscoreinfovalue( var_1 );
                var_5.player thread scripts\mp\rank::giverankxp( var_1, var_2, var_5.objweapon );
                var_5.player thread scripts\mp\events::killeventtextpopup( var_1, 0 );
                thread scripts\cp\vehicles\vehicle_compass_cp::vehiclekilled( self, var_0.inflictor, var_5.player, 0, var_5.objweapon );
            }
        }
    }

    self notify( "death" );
    return 1;
}

_id_11A12( var_0 )
{
    self endon( "death" );
    self endon( "leaving" );
    self endon( "crashing" );
    self endon( "engaging_target" );

    if ( self.currentaction != "patrol" )
        self.currentaction = "patrol";
    else if ( self.currentaction == "patrol" && !istrue( var_0 ) )
        return;

    self clearlookatent();
    self setneargoalnotifydist( 300 );
    var_1 = 0;
    var_2 = 0;

    for (;;)
    {
        if ( self.currentaction == "attacking" )
        {
            if ( !istrue( var_1 ) )
                var_1 = 1;

            waitframe();
            continue;
        }

        if ( !istrue( var_0 ) && istrue( var_1 ) )
            var_1 = 0;

        var_3 = self._id_1220D + anglestoforward( ( 0, var_2, 0 ) ) * int( self._id_1220F / 1.2 );
        var_2 = var_2 + 90;
        scripts\cp_mp\killstreaks\chopper_support::debugtimedelta( var_3, 1 );

        if ( var_2 >= 360 )
            var_2 = 0;

        wait 0.5;
    }
}

_id_11A05()
{
    var_0 = _id_11A06( self.origin + ( 0, 0, 500 ) );

    if ( isdefined( var_0 ) && istrue( level._id_14088 ) && isscriptabledefined() )
        var_0 = getclosestpointonnavmesh( var_0 );

    if ( isdefined( var_0 ) )
    {
        var_1 = scripts\cp_mp\killstreaks\airdrop::missionbonustimer( self.origin, var_0 );
        var_2 = scripts\cp_mp\killstreaks\airdrop::gettriggerobject( var_1 );
        var_2._id_140A0 = 10;
    }
}

_id_11A06( var_0 )
{
    var_1 = undefined;
    var_2 = var_0 - ( 0, 0, 20000 );
    var_3 = [ self, self.frontturret, self.rearturret ];
    var_4 = scripts\engine\trace::ray_trace( var_0, var_2, var_3 );

    if ( isdefined( var_4 ) && var_4["hittype"] != "hittype_none" )
        var_1 = var_4["position"];

    return var_1;
}

_id_11A11( var_0 )
{
    var_1 = getdvarint( "scr_dmz_lc_plunder_reward", 100000 );

    if ( istrue( level.convoy_handle_stuck_compromise ) )
    {
        var_2 = getdvarint( "scr_dmz_lc_plunder_bonus_reward", 50000 );
        var_1 = var_1 + var_2;
    }

    if ( isdefined( level.delayed_explosion_things ) )
        var_1 = level.delayed_explosion_things;

    var_3 = scripts\mp\gametypes\br_pickups.gsc::test_ai_anim();
    self.itemsdropped = 0;
    var_4 = scripts\mp\gametypes\br_plunder.gsc::dropplunderbyrarity( var_1 / 100, var_3 );

    foreach ( var_6 in var_4 )
        var_6._id_11A40 = "loot_chopper";

    if ( !isdefined( var_0._id_11A01 ) )
        var_0._id_11A01 = 1;
    else
        var_0._id_11A01++;

    var_0 scripts\mp\utility\stats::setextrascore1( var_0._id_11A01 );
    var_0 thread scripts\mp\utility\points::giveunifiedpoints( "br_loot_chopper_box_open" );
}

_id_11A03()
{
    if ( isdefined( self.modifyvehicledamage ) )
        self.modifyvehicledamage delete();

    if ( isdefined( self._id_12210 ) )
        self._id_12210.goalstruct = undefined;

    if ( isdefined( self.objectiveiconid ) )
        scripts\mp\objidpoolmanager::returnobjectiveid( self.objectiveiconid );

    scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_deregisterinstance( self );
    level._id_119E7 = scripts\engine\utility::array_remove( level._id_119E7, self );
}

_id_11A04()
{
    var_0 = scripts\mp\objidpoolmanager::requestobjectiveid( 1 );

    if ( var_0 != -1 )
    {
        scripts\mp\objidpoolmanager::objective_add_objective( var_0, "active", self.origin, "ui_mp_br_mapmenu_icon_boss_chopper", "icon_medium" );
        scripts\mp\objidpoolmanager::update_objective_setbackground( var_0, 1 );
        scripts\mp\objidpoolmanager::objective_playermask_showtoall( var_0 );
        scripts\mp\objidpoolmanager::update_objective_onentity( var_0, self );
        playencryptedcinematicforall( var_0, 1 );
    }

    self.objectiveiconid = var_0;
}

_id_11A08( var_0 )
{
    var_1 = undefined;

    if ( !isdefined( var_0 ) )
        return var_1;

    foreach ( var_3 in self.attackers )
    {
        if ( isdefined( var_3.player ) && var_0 == var_3.player )
        {
            var_1 = var_3;
            break;
        }
    }

    return var_1;
}
