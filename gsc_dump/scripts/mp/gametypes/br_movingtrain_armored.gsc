// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.validateattacker = ::_id_14642;
    level._id_13BD1 = ::helidrivabledeathall;
    scripts\cp_mp\utility\script_utility::registersharedfunc( "killstreak", "dangerNotifyPlayersInRange", ::helidrivabledeath );
    totalweaponxpearned();
    teleport_trigger_to_airplane();
    teleport_to_debug_start_pos();
    tr_kiosksearchparams();
    thread _id_11B37();
    level thread exfil_smoke_vfx();
    level thread enemy_targets_headshot();
}

totalweaponxpearned()
{
    foreach ( var_1 in level._id_145F1._id_13C8D )
    {
        var_1.team = run_openexfil_spawn();
        var_1.wz_tease.team = run_openexfil_spawn();
    }
}

helidrivabledeathall()
{
    if ( !isdefined( self ) )
        return;

    radiusdamage( self.origin, 256, 100, 100, play_ac130_approach_scene(), "MOD_EXPLOSIVE", "toma_proj_mp" );
}

helidrivabledeath( var_0, var_1, var_2, var_3 )
{
    if ( var_2 == "toma_strike" )
    {
        var_4 = scripts\common\utility::playersincylinder( var_0, var_1 );

        if ( !isdefined( var_3 ) )
            var_3 = 1;

        foreach ( var_6 in var_4 )
        {
            if ( !isdefined( var_6 ) || !scripts\mp\utility\player::isreallyalive( var_6 ) || var_6.team == self.team )
                continue;

            if ( isdefined( var_6.waittill_target_group_complete ) )
                var_7 = scripts\engine\utility::ter_op( var_6 get_alt_weapon(), var_3, 0 );
            else
                var_7 = var_3;

            scripts\mp\gametypes\br_killstreaks.gsc::isbrsquadleader( var_6, var_2, var_7 );

            if ( var_7 )
                var_6.waittill_target_group_complete = gettime();
        }
    }
    else
        scripts\mp\gametypes\br_killstreaks.gsc::isbulletpenetration( var_0, var_1, var_2, var_3 );
}

get_alt_weapon()
{
    if ( self.heli_orbit_logic.size > 4 )
        return 0;

    if ( self.waittill_target_group_complete + 10000 > gettime() )
        return 0;

    return 1;
}

teleport_trigger_to_airplane()
{
    var_0 = [ [ "", 1, "", level._effect["vfx_br_x2_locomotive_hit"] ], [ "x2_veh8_mil_lnd_br_train_locomotive_damaged", 1, "d1", level._effect["vfx_br_x2_locomotive_damage_hit"] ], [ "", 0.5, "d2", undefined ], [ "", 0, "d3", undefined ], [ "x2_veh8_mil_lnd_br_train_locomotive_dead", 0, "dead", undefined ] ];
    level._id_14637 = _id_127E8( var_0 );
    var_0 = [ [ "", 1, "", level._effect["vfx_br_x2_assault_car_hit"], 0 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d2", 1, "d1", level._effect["vfx_br_x2_assault_car_damage_01_hit"], 0 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d3", 0.66, "d2", level._effect["vfx_br_x2_assault_car_damage_02_hit"], 1 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_d4", 0.33, "d3", undefined, 1 ], [ "", 0, "explosion", undefined, 1 ], [ "x2_veh8_mil_lnd_br_armored_train_cart_dead", 0, "dead", undefined, 1 ] ];
    level._id_14636 = _id_127E8( var_0 );
    level._id_14635 = 0;
    var_0 = [ [ "", 1, "" ], [ "", 0.5, "" ], [ "", 0, "" ] ];
    level._id_14638 = _id_127E8( var_0 );
}

tr_kiosksearchparams()
{
    var_0 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_3, var_2 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
            continue;

        var_2.wz_tease.isvalidpos = spawn( "script_model", ( 0, 0, 0 ) );
        var_2.wz_tease.isvalidpos setmodel( "x2_veh8_mil_lnd_br_train_assault_decal_0" + var_3 );
        var_2.wz_tease.isvalidpos linkto( var_2.wz_tease, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    }
}

_id_127E8( var_0 )
{
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = spawnstruct();
        var_4.model = var_3[0];
        var_4.get_request_backup_alias = var_3[1];
        var_4.statename = var_3[2];
        var_4.completex1stashquest = var_3[3];
        var_4._id_12C2B = var_3[4];
        var_1[var_1.size] = var_4;
    }

    return var_1;
}

_id_11B37()
{
    level endon( "game_ended" );
    var_0 = getdvarint( "scr_wztrain_carHealthPerPlayer", 1700 );
    var_1 = getdvarint( "scr_wztrain_locmotiveCarHealthPerPlayer", 3150 );
    var_2 = var_0 + 0;
    tr_ontimerexpired( 1, var_2, var_1 );
    scripts\mp\flags::gameflagwait( "prematch_done" );
    totaldata();
    tr_ontimerexpired( level.players.size, var_2, var_1 );
    level._id_145F1.brmodifyvehicledamage = getdvarint( "scr_wztrain_ambDamagePerPlayer", 0 );
    level._id_145F1.usedcountinveh = 0;
    level._id_14640 = [];
    fail_mission_if_killed();
}

tr_ontimerexpired( var_0, var_1, var_2 )
{
    level._id_145F1._id_11B56 = var_0 * var_1;
    level._id_145F1._id_11B61 = var_0 * var_2;
    var_3 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_5 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_5.script_noteworthy ) && var_5.script_noteworthy == var_3 )
        {
            var_5.wz_tease.get_remaining_bots = level._id_145F1._id_11B61;
            var_5.wz_tease.lightsfx = 0;
        }
        else
        {
            var_5.wz_tease.get_remaining_bots = level._id_145F1._id_11B56;
            var_5.wz_tease.lightsfx = 0;
        }

        var_5.wz_tease.stadium_one_death_func = 1;
    }

    var_7 = level._id_145F1._id_13C8D.size - 1;
    level._id_145F1._id_11B7A = var_7 * level._id_145F1._id_11B56;
}

teleport_to_debug_start_pos()
{
    var_0 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_3, var_2 in level._id_145F1._id_13C8D )
    {
        var_2.wz_tease.lb_wood_surf_dmg_scalar = -1;

        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.wz_tease setcandamage( 1 );
            var_2.wz_tease thread setup_weapon_spawns();
        }
        else
        {
            var_2.wz_tease setcandamage( 1 );
            var_2.wz_tease thread handledamage();
        }

        var_2.wz_tease._id_13CC5 = var_3;
        var_2.wz_tease._id_11E95 = 1;
        var_2.wz_tease._id_1217A = 0;
    }
}

totaldata()
{
    var_0 = getdvarfloat( "scr_x2_max_damage_reward", 135000.0 );
    level._id_13735 = [ 30000, 45000, 60000, 75000, 100000, var_0 ];
    level._id_13736 = [ "knife_blueprint", "paintjob_stickers_x2", "watch_x2", "emblem_2_x2", "vehicleskin_x2", "callingcards_x2" ];
    level._id_13737 = [];
    var_1 = level.squaddata;

    if ( scripts\mp\menus::brking_updateteamscore() )
    {
        var_1 = [];
        var_1["allies"] = level.squaddata["allies"];
    }

    foreach ( var_7, var_3 in var_1 )
    {
        level._id_13737[var_7] = [];

        foreach ( var_5 in var_3 )
        {
            if ( var_5.players.size == 0 )
                continue;

            level._id_13737[var_7][var_5.index] = spawnstruct();
            level._id_13737[var_7][var_5.index]._id_13BEE = 0;
            level._id_13737[var_7][var_5.index]._id_11E72 = 0;
        }
    }
}

initmarker()
{
    level endon( "game_ended" );
    scripts\engine\utility::flag_wait( "wztrain_anim_playing" );
    var_0 = level._id_145F1._id_13C8D[0];
    var_0 scripts\mp\gametypes\br_quest_util.gsc::init_tape_machine_animations( "ui_mp_br_ping_icon_x2_t", "current", var_0.origin + ( 0, 0, 300 ) );
    objective_removeallfrommask( var_0.objectiveiconid );
    var_0 thread _id_13FF4();
    var_0 thread _id_13FF3();
    var_0 thread _id_13FF5();
}

_id_13FF5()
{
    level endon( "game_ended" );

    for (;;)
    {
        var_0 = 4500;

        foreach ( var_2 in level.players )
        {
            var_3 = distance2d( removespecialistbonus(), var_2.origin );

            if ( var_3 > var_0 && isalive( var_2 ) )
            {
                if ( !isdefined( var_2._id_1337B ) || var_2._id_1337B == 0 )
                {
                    var_2 _id_1335F();
                    var_2._id_1337B = 1;
                }

                continue;
            }

            if ( istrue( var_2._id_1337B ) )
            {
                var_2 spawn_crew();
                var_2._id_1337B = 0;
            }
        }

        wait 1;
    }
}

removespecialistbonus()
{
    return ( level._id_145F1._id_13C8D[3].origin + level._id_145F1._id_13C8D[4].origin ) / 2;
}

_id_13FF4()
{
    level endon( "game_ended" );

    while ( !scripts\mp\flags::gameflag( "x2_train_destroyed" ) )
    {
        var_0 = removespecialistbonus();
        scripts\mp\gametypes\br_quest_util.gsc::_id_11DB0( var_0 + ( 0, 0, 300 ) );
        waitframe();
    }
}

_id_1335F()
{
    var_0 = level._id_145F1._id_13C8D[0];
    objective_addclienttomask( var_0.objectiveiconid, self );
    objective_showtoplayersinmask( var_0.objectiveiconid );
}

spawn_crew()
{
    var_0 = level._id_145F1._id_13C8D[0];
    objective_removeclientfrommask( var_0.objectiveiconid, self );
    objective_showtoplayersinmask( var_0.objectiveiconid );
}

_id_13FF3()
{
    level endon( "game_ended" );
    level scripts\engine\utility::_id_143A5( "game_ended", "x2_train_destroyed" );
    _id_12C0D();
}

_id_12C0D()
{
    var_0 = level._id_145F1._id_13C8D[0];
    var_0 scripts\mp\gametypes\br_quest_util.gsc::lastdropedtime();
}

run_openexfil_spawn()
{
    if ( scripts\mp\menus::brking_updateteamscore() )
        return "axis";

    return "team_two_hundred";
}

handledamage()
{
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_10, var_10, var_11 );

        if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == run_openexfil_spawn() && !istrue( var_1._id_1217A ) )
            continue;

        if ( self.brdisabledamagestattracking > 0 || self.lb_wood_surf_dmg_scalar < 1 )
            continue;

        if ( getdvarint( "x2_enable_blink_fx", 1 ) && !istrue( var_1._id_11E95 ) )
            thread enemy_think( 0 );

        var_12 = var_1;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
        {
            var_0 = setupmissionwidget( var_1 );

            if ( isdefined( var_1.owner ) )
                var_12 = var_1.owner;
        }

        var_13 = self.get_remaining_bots;
        self.get_remaining_bots = int( max( self.get_remaining_bots - var_0, 0 ) );

        if ( var_13 > 0 )
        {
            if ( isplayer( var_12 ) )
            {
                if ( self.get_remaining_bots <= 0 )
                    var_12 scripts\mp\damagefeedback::updatedamagefeedback( "hitheadx2break", 0, 0, "hitheadx2break", 0, 1 );
                else
                    var_12 scripts\mp\damagefeedback::updatedamagefeedback( "hitheadx2", 0, 0, "hitheadx2", 0, 1 );

                var_14 = int( min( var_0, var_13 ) );
                _id_13FCF( var_12, var_14 );
            }

            scripts\mp\gametypes\br_gametype_x2.gsc::equipprimarypickup( var_1, var_0 );
        }

        if ( getgametypekillsperhouravg() )
            getblueprintforpickupweapon();
    }
}

setup_weapon_spawns()
{
    level endon( "game_ended" );
    level waittill( "x2_locomotive_vulnerable" );
    level endon( "train_destroyed" );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_10, var_10, var_11 );

        if ( isdefined( var_1 ) && isdefined( var_1.team ) && var_1.team == run_openexfil_spawn() && !istrue( var_1._id_1217A ) )
            continue;

        if ( getdvarint( "x2_enable_blink_fx", 1 ) && !istrue( var_1._id_11E95 ) )
            thread enemy_think( 0 );

        var_12 = var_1;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
        {
            var_0 = setupmissionwidget( var_1 );

            if ( isdefined( var_1.owner ) )
                var_12 = var_1.owner;
        }

        var_13 = self.get_remaining_bots;
        self.get_remaining_bots = int( max( self.get_remaining_bots - var_0, 0 ) );

        if ( var_13 > 0 )
        {
            if ( isplayer( var_12 ) )
            {
                var_12 scripts\mp\damagefeedback::updatedamagefeedback( "hitequip", self.get_remaining_bots == 0, 0, "standard", 0, 1 );
                var_14 = int( min( var_0, var_13 ) );
                _id_13FCF( var_12, var_14 );
            }

            scripts\mp\gametypes\br_gametype_x2.gsc::equipprimarypickup( var_1, var_0 );
        }

        if ( getkothlocations() )
            getbombteam();
    }
}

setupmissionwidget( var_0 )
{
    var_1 = spawnstruct();
    var_1.ent = [ var_0, self ];
    var_1.velocity = [ var_0 vehicle_getvelocity(), self.velocity ];
    var_2 = scripts\mp\gametypes\br_movingtrain.gsc::setup_hacks( var_1 );

    if ( var_2 > 0 )
        var_2 = clamp( var_2, 0.0, 3000 );

    return var_2;
}

_id_13CCD()
{
    level endon( "game_ended" );
    level endon( "x2_train_destroyed" );
    level._id_145F1.usedcountinveh = 1;
    var_0 = getdvarint( "scr_wztrain_timeBeforeSelfDestruct", 30 );
    wait( var_0 );
    var_1 = level._id_14636.size - 2;
    var_2 = level._id_14638.size - 1;
    var_3 = level._id_14637.size - 2;
    var_4 = level._id_145F1._id_11B56 * 0.02;
    var_5 = level._id_145F1._id_11B7C * 0.02;
    var_6 = level._id_145F1._id_11B61 * 0.02;

    foreach ( var_9, var_8 in level._id_145F1._id_13C8D )
        var_8.wz_tease._id_1217A = 1;

    for (;;)
    {
        foreach ( var_9, var_8 in level._id_145F1._id_13C8D )
        {
            var_11 = var_8.wz_tease;

            if ( isdefined( var_8.script_noteworthy ) && var_8.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
            {
                if ( var_11.lb_wood_surf_dmg_scalar < var_3 )
                    var_11 dodamage( var_6, var_11.origin, var_11, var_11, "MOD_EXPLOSIVE" );
                else
                    break;
            }
            else
            {
                if ( var_11.brdisabledamagestattracking > 0 )
                {
                    if ( isdefined( var_11.frontturret ) && var_11.frontturret.lb_wood_surf_dmg_scalar < var_2 )
                        var_11.frontturret dodamage( var_5, var_11.frontturret.origin, var_11, var_11, "MOD_EXPLOSIVE" );

                    if ( isdefined( var_11.rearturret ) && var_11.rearturret.lb_wood_surf_dmg_scalar < var_2 )
                        var_11.rearturret dodamage( var_5, var_11.rearturret.origin, var_11, var_11, "MOD_EXPLOSIVE" );

                    continue;
                }

                if ( var_11.lb_wood_surf_dmg_scalar < var_1 )
                    var_11 dodamage( var_4, var_11.origin, var_11, var_11, "MOD_EXPLOSIVE" );
            }
        }

        wait 1;
    }
}

_id_13FCF( var_0, var_1 )
{
    var_2 = level._id_13737[var_0.team][var_0.squadindex]._id_13BEE;
    var_3 = level._id_13735[level._id_13735.size - 1];

    if ( var_2 < var_3 )
    {
        level._id_13737[var_0.team][var_0.squadindex]._id_13BEE = min( var_2 + var_1, var_3 );
        scripts\mp\gametypes\br_gametype_x2.gsc::fadeoutoverlay( var_0 );

        while ( isdefined( level._id_13735[level._id_13737[var_0.team][var_0.squadindex]._id_11E72] ) && level._id_13737[var_0.team][var_0.squadindex]._id_13BEE >= level._id_13735[level._id_13737[var_0.team][var_0.squadindex]._id_11E72] )
            _id_13F1A( level._id_13737[var_0.team][var_0.squadindex]._id_11E72, level.squaddata[var_0.team][var_0.squadindex].players, var_0 );
    }
}

_id_13F1A( var_0, var_1, var_2 )
{
    foreach ( var_4 in var_1 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        if ( var_4.squadindex == var_2.squadindex )
            var_4 scripts\cp\vehicles\vehicle_compass_cp::_id_120A4( level._id_13736[var_0] );
    }

    level._id_13737[var_2.team][var_2.squadindex]._id_11E72++;
}

getgametypekillsperhouravg()
{
    var_0 = self.lb_wood_surf_dmg_scalar + 1;

    if ( var_0 >= level._id_14636.size - 1 )
        return 0;

    var_1 = self.get_remaining_bots / level._id_145F1._id_11B56;

    if ( var_1 > level._id_14636[var_0].get_request_backup_alias )
        return 0;

    return 1;
}

getblueprintforpickupweapon()
{
    var_0 = self.get_remaining_bots / level._id_145F1._id_11B56;

    for ( var_1 = level._id_14636.size - 2; self.lb_wood_surf_dmg_scalar < var_1 && var_0 <= level._id_14636[self.lb_wood_surf_dmg_scalar + 1].get_request_backup_alias; self.lb_wood_surf_dmg_scalar = int( min( self.lb_wood_surf_dmg_scalar + 1, var_1 ) ) )
    {

    }

    caclulate_track_distance( self.lb_wood_surf_dmg_scalar );

    if ( self.lb_wood_surf_dmg_scalar == var_1 )
    {
        extract_removemissionweapon();
        thread explosion();
    }
}

caclulate_track_distance( var_0 )
{
    self.lb_wood_surf_dmg_scalar = var_0;
    var_1 = level._id_14636[self.lb_wood_surf_dmg_scalar];

    if ( var_1.model != "" )
        self setmodel( var_1.model );

    if ( var_1.statename != "" )
        self setscriptablepartstate( "base", var_1.statename );

    if ( isdefined( var_1.completex1stashquest ) )
        self.completex1stashquest = var_1.completex1stashquest;

    if ( isdefined( self.isvalidpos ) && self.lb_wood_surf_dmg_scalar >= 4 )
    {
        self.isvalidpos delete();
        self.isvalidpos = undefined;
    }

    lbravo_actor_keep_anim_loop();

    if ( istrue( var_1._id_12C2B ) )
    {
        if ( isdefined( self.frontturret ) )
            self.frontturret has_started_cache_defenses();

        if ( isdefined( self.rearturret ) )
            self.rearturret has_started_cache_defenses();
    }

    if ( self.lb_wood_surf_dmg_scalar == 1 )
        level notify( "car_vulnerable" );

    _id_1402A( self._id_13CC5, self.lb_wood_surf_dmg_scalar );
}

calculateandvalidatefuelstability( var_0 )
{
    self.lb_wood_surf_dmg_scalar = var_0;
    var_1 = level._id_14637[self.lb_wood_surf_dmg_scalar];

    if ( var_1.model != "" )
        self setmodel( var_1.model );

    if ( var_1.statename != "" )
        self setscriptablepartstate( "base", var_1.statename );

    if ( isdefined( var_1.completex1stashquest ) )
        self.completex1stashquest = var_1.completex1stashquest;

    _id_13FED( self.lb_wood_surf_dmg_scalar );
}

_id_119A6()
{
    level endon( "game_ended" );
    thread exterior_goal_func( "scn_x2_train_death_explo_final_rampup", self, 4 );
    f11scriptlightinit();
    wait 5;
    calculateandvalidatefuelstability( level._id_14637.size - 1 );
    lastdeathheadiconforenemy();
    _id_13C9D();
}

explosion()
{
    level endon( "game_ended" );
    var_0 = play_ac130_approach_scene();
    self._id_1293B = 1;
    thread _id_13FD6();
    wait 5;
    self._id_1293B = 0;
    caclulate_track_distance( level._id_14636.size - 1 );

    foreach ( var_2 in level.players )
        var_2 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_armored_car" );

    thread scripts\mp\gametypes\br_gametype_x2.gsc::extractquest_helipadid();
    lastdeathheadiconforenemy();
    level._id_14635 = level._id_14635 + 1;
    level notify( "car_destroyed" );
    getrandompointinboundscircle();
    thread _id_13E62();
    wait 0.1;
    var_4 = scripts\mp\utility\player::getplayersinradius( self.origin, 1500 );

    foreach ( var_2 in var_4 )
    {
        if ( onteamproximitybecameinvalidplayer( var_2 ) )
            var_2 scripts\mp\gametypes\br_gametype_x2.gsc::extratimeincreasecountcap( 4 );
    }

    _id_13CCA();
    level._id_145F1.instance++;
    self.mediumstatehealthratio = _id_1327C();
}

onteamproximitybecameinvalidplayer( var_0 )
{
    var_1 = [ "tag_origin", "tag_front_base", "tag_rear_base", "tag_fx03", "tag_fx01" ];
    var_2 = var_0.origin + ( 0, 0, var_0 getplayerviewheight() );
    var_3 = [ self, var_0 ];
    var_4 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_water", "physicscontents_vehicle", "physicscontents_item" ] );

    foreach ( var_6 in var_1 )
    {
        if ( !self tagexists( var_6 ) )
            return;

        var_7 = self gettagorigin( var_6 );

        if ( scripts\engine\trace::ray_trace_passed( var_7, var_2, var_3, var_4 ) )
            return 1;
    }

    return 0;
}

lbravo_actor_keep_anim_loop()
{
    var_0 = 750;
    var_1 = self.origin;
    var_2 = self.angles + ( -90, 0, 0 );
    var_3 = physics_createcontents( [ "physicscontents_player" ] );
    var_4 = physics_capsulecast( var_1, var_1, 200, var_0 / 2, var_2, var_3, [], "physicsquery_all" );
    var_5 = [];

    foreach ( var_7 in var_4 )
    {
        var_8 = var_7["entity"];

        if ( isdefined( var_8 ) )
        {
            var_5[var_5.size] = var_8;

            if ( onteamproximitybecameinvalidplayer( var_8 ) )
                var_8 dodamage( 250, self.origin, self, self, "MOD_EXPLOSIVE" );
        }
    }

    var_10 = scripts\mp\utility\player::getplayersinradius( self.origin, 750, undefined, var_5 );

    foreach ( var_12 in var_10 )
    {
        if ( !isdefined( var_12 ) || !onteamproximitybecameinvalidplayer( var_12 ) )
            continue;

        var_13 = distancesquared( var_12.origin, self.origin );

        if ( var_13 < squared( 550 ) )
            var_14 = 90;
        else
            var_14 = 50;

        var_12 dodamage( var_14, self.origin, self, self, "MOD_EXPLOSIVE" );
    }
}

_id_1327C()
{
    var_0 = 700;
    var_1 = 85;
    var_2 = anglestoforward( self.angles ) * 350;
    var_3 = anglestoup( self.angles ) * 30;
    var_4 = self.origin + var_2 + var_3;
    var_5 = spawn( "trigger_rotatable_radius", var_4, 0, var_1, var_0 );
    var_5.angles = self.angles + ( -90, 0, 0 );
    var_5.burnid = scripts\mp\equipment\molotov::molotov_get_next_burning_id();
    var_5.playersintrigger = [];
    var_5.traincar = self;
    var_5 enablelinkto();
    var_5 linkto( self );
    var_5 thread mercywintriggered();
    var_5 thread method_for_calling_reinforcemen();
    var_5 thread hangar_juggs();
    return var_5;
}

mercywintriggered()
{
    self endon( "death" );
    level endon( "game_ended" );
    level endon( "train_destroyed" );

    for (;;)
    {
        self waittill( "trigger", var_0 );
        var_1 = var_0 getentitynumber();

        if ( isdefined( self.playersintrigger[var_1] ) )
            continue;

        self.playersintrigger[var_1] = var_0;
        var_0 mercymatchending_time( var_0, undefined, undefined, self.burnid );
    }
}

method_for_calling_reinforcemen()
{
    self endon( "death" );
    level endon( "game_ended" );
    level endon( "train_destroyed" );

    for (;;)
    {
        foreach ( var_2, var_1 in self.playersintrigger )
        {
            if ( !isdefined( var_1 ) )
                continue;

            if ( !scripts\mp\utility\player::isreallyalive( var_1 ) )
                continue;

            if ( var_1 istouching( self ) )
                continue;

            self.playersintrigger[var_2] = undefined;
            var_1 scripts\mp\equipment\molotov::molotov_stop_burning( self.burnid );
        }

        waitframe();
    }
}

mercymatchending_time( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\mp\equipment\molotov::molotov_get_burning_info( 1 );

    if ( !isdefined( var_3 ) )
        var_3 = scripts\mp\equipment\molotov::molotov_get_next_burning_id();

    var_5 = scripts\mp\equipment\molotov::molotov_get_burning_source( var_0, var_1, var_2, var_4, var_3, 1 );
    var_6 = 0;

    if ( var_5.count <= 0 )
        var_6 = 1;

    var_5.count++;

    if ( var_6 )
        thread mercymatchending_nuke();
}

mercymatchending_nuke()
{
    self endon( "death_or_disconnect" );
    self endon( "clear_burning" );
    level endon( "game_ended" );
    self notify( "update_burning" );
    self endon( "update_burning" );
    thread scripts\mp\equipment\molotov::molotov_cleanup_burning();
    var_0 = scripts\mp\equipment\molotov::molotov_get_burning_info();

    if ( gettime() <= var_0.updatetimestamp )
        waitframe();

    for (;;)
    {
        var_0 = scripts\mp\equipment\molotov::molotov_get_burning_info();
        var_1 = undefined;

        foreach ( var_3 in var_0.sources )
        {
            if ( var_3 scripts\mp\equipment\molotov::molotov_burning_source_is_valid() )
            {
                if ( !isdefined( var_1 ) || var_3.id > var_1 )
                    var_1 = var_3.id;

                continue;
            }

            var_0.sources[var_3.id] = undefined;
        }

        if ( isdefined( var_1 ) )
        {
            var_0.timeoff = 0;
            var_0.timeon = var_0.timeon + 0.05;
            var_3 = var_0.sources[var_1];
            var_5 = 15;
            var_6 = undefined;
            var_7 = var_3.attacker.origin;

            if ( isdefined( var_3.inflictor ) )
            {
                var_6 = var_3.inflictor;
                var_7 = var_3.inflictor.origin;
            }

            if ( var_0.timetodamage <= 0 )
            {
                self dodamage( var_5, var_7, var_3.attacker, var_6, "MOD_EXPLOSIVE", "molotov_mp" );
                var_0.firstdamagedone = 1;
                var_0.timetodamage = 0.25;
            }
            else
            {
                if ( !var_0.firstdamagedone )
                {
                    self dodamage( var_5, var_7, var_3.attacker, var_6, "MOD_EXPLOSIVE", "molotov_mp" );
                    var_0.firstdamagedone = 1;
                }

                var_0.timetodamage = var_0.timetodamage - 0.05;
            }
        }
        else
        {
            var_0.timeoff = var_0.timeoff + 0.05;

            if ( var_0.timeoff >= 0.25 )
                thread scripts\mp\equipment\molotov::molotov_clear_burning();
        }

        var_0.updatetimestamp = gettime();
        wait 0.05;
    }
}

hangar_juggs()
{
    level endon( "game_ended" );
    level waittill( "train_destroyed" );

    foreach ( var_2, var_1 in self.playersintrigger )
        var_1 scripts\mp\equipment\molotov::molotov_stop_burning( self.burnid );

    self.traincar.mediumstatehealthratio = undefined;
    self delete();
}

_id_13FD6()
{
    level endon( "game_ended" );
    var_0 = undefined;

    while ( self._id_1293B )
    {
        if ( isdefined( var_0 ) )
            var_0 delete();

        var_0 = getmaxobjectivecount( self.origin[0], self.origin[1], 1500 );
        var_0 setmapcirclecolorindex( 0 );
        var_0 setmapcirclestyleindex( 0 );
        wait 0.5;
    }

    var_0 delete();
}

lastdeathheadiconforenemy()
{
    foreach ( var_1 in level._id_145F1._id_13C8D )
    {
        if ( var_1.wz_tease == self )
        {
            if ( isdefined( var_1.num_hackers ) )
            {
                var_1.num_hackers delete();
                break;
            }
        }
    }
}

run_module_unpause_funcs()
{
    var_0 = 0;

    foreach ( var_3, var_2 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
            continue;
        else
            var_0 = var_0 + var_2.wz_tease.get_remaining_bots;
    }

    return var_0;
}

getkothlocations()
{
    var_0 = self.lb_wood_surf_dmg_scalar + 1;

    if ( var_0 >= level._id_14637.size - 1 )
        return 0;

    var_1 = self.get_remaining_bots / level._id_145F1._id_11B61;

    if ( var_1 > level._id_14637[var_0].get_request_backup_alias )
        return 0;

    return 1;
}

getbombteam()
{
    var_0 = self.get_remaining_bots / level._id_145F1._id_11B61;

    for ( var_1 = level._id_14637.size - 2; self.lb_wood_surf_dmg_scalar < var_1 && var_0 <= level._id_14637[self.lb_wood_surf_dmg_scalar + 1].get_request_backup_alias; self.lb_wood_surf_dmg_scalar = int( min( self.lb_wood_surf_dmg_scalar + 1, var_1 ) ) )
    {

    }

    calculateandvalidatefuelstability( self.lb_wood_surf_dmg_scalar );

    if ( self.lb_wood_surf_dmg_scalar == var_1 )
    {
        thread _id_13E62();
        level notify( "x2SuperInterupt" );
        extract_removemissionweapon();
        thread _id_119A6();
    }
}

register_vehicle_as_ambient()
{
    var_0 = [];
    var_1 = level._id_14636.size - 1;

    foreach ( var_4, var_3 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_3.script_noteworthy ) && var_3.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
            continue;
        else if ( var_3.wz_tease.lb_wood_surf_dmg_scalar < var_1 )
            var_0[var_0.size] = var_3;
    }

    return var_0;
}

getrandompointinboundscircle()
{
    var_0 = 0;
    var_1 = level._id_14636.size - 1;

    foreach ( var_4, var_3 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_3.script_noteworthy ) && var_3.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
            continue;
        else if ( var_3.wz_tease.lb_wood_surf_dmg_scalar < var_1 )
            var_0++;
    }

    if ( var_0 == 0 )
        _id_119A5();
}

_id_119A5()
{
    scripts\mp\flags::gameflagset( "x2_locomotive_vulnerable" );
    var_0 = level._id_145F1._id_13C8D[0].wz_tease;
    var_0 extractioncomplete();
    var_0 calculateandvalidatefuelstability( 1 );
}

_id_13C9D()
{
    scripts\mp\flags::gameflagset( "x2_train_destroyed" );

    foreach ( var_1 in level.players )
        var_1 thread scripts\mp\utility\points::giveunifiedpoints( "br_x2_train_destroyed" );

    level._id_145F1._id_13C8D[0].wz_tease.frontturret _id_13E63();
}

_id_1402A( var_0, var_1 )
{
    if ( var_1 == 0 )
        return;

    var_2 = 3;
    var_3 = var_0 * var_2;
    _calloutmarkerping_handleluinotify_added::_id_13191( "ui_br_x2_event_data", var_3, var_2, var_1 );
}

_id_13FED( var_0 )
{
    var_1 = 3;
    var_2 = 0;
    _calloutmarkerping_handleluinotify_added::_id_13191( "ui_br_x2_event_data", var_2, var_1, var_0 );
}

_id_1402D( var_0, var_1, var_2 )
{
    var_3 = 2;
    var_4 = var_3 * 2;
    var_5 = ( var_0 - 1 ) * var_4 + var_1 * var_3;
    _calloutmarkerping_handleluinotify_added::_id_13191( "ui_br_x2_event_data_2", var_5, var_3, var_2 );
}

enemy_rushdown_player()
{
    ent_cleanup( level._id_145F1.brmodifyvehicledamage * level._id_14639 );
}

ent_cleanup( var_0 )
{
    var_1 = 7;
    var_2 = var_0;
    var_3 = [];
    var_4 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_7, var_6 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_6.script_noteworthy ) && var_6.script_noteworthy == var_4 )
            continue;

        var_3[var_3.size] = var_6.wz_tease;
    }

    while ( var_1 > 0 && var_2 > 0 )
    {
        var_8 = var_0 / var_1;
        var_9 = 0;
        var_1 = 0;

        foreach ( var_7, var_11 in var_3 )
        {
            if ( var_8 >= var_11.get_remaining_bots )
            {
                if ( isdefined( var_11.lightsfx ) && !var_11.lightsfx )
                {
                    var_9 = var_9 + ( var_8 - var_11.get_remaining_bots );
                    var_11.lightsfx = 1;
                }
            }
            else
                var_1++;

            var_11 dodamage( var_8, var_11.origin, var_11 );
        }

        var_2 = var_9;
    }

    var_4 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_7, var_11 in var_3 )
        var_11.lightsfx = 0;
}

entityhit()
{
    var_0 = spawnstruct();
    var_0.streakname = "toma_strike";
    var_0.owner = self;
    var_0.score = 0;
    var_0.shots_fired = 0;
    var_0.hits = 0;
    var_0.damage = 0;
    var_0.kills = 0;
    var_0._id_121A9 = "ks_toma_strike_missile_mp_x2";
    var_0._id_121A8 = "ks_toma_strike_cluster_mp_x2";

    if ( scripts\cp_mp\utility\script_utility::issharedfuncdefined( "killstreak", "createCustomStreakData" ) )
        var_0 = [[ scripts\cp_mp\utility\script_utility::getsharedfunc( "killstreak", "createCustomStreakData" ) ]]( var_0, "toma_strike" );

    return var_0;
}

ents_to_clean_up( var_0 )
{
    if ( var_0 == "armored_train_mg_turret_mp" || var_0 == "armored_train_mg_turret_buffed_mp" )
        return level._effect["vfx_br_x2_train_turrets_gatling_hit"];

    if ( var_0 == "armored_train_tank_turret_mp" || var_0 == "armored_train_tank_turret_buffed_mp" )
        return level._effect["vfx_br_x2_train_turrets_88mm_hit"];

    return undefined;
}

entry_open( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = spawnturret( "misc_turret", var_1, var_5 );
    var_7 setmodel( var_6 );
    var_7.team = run_openexfil_spawn();
    var_7.angles = var_2;
    var_7.turreton = 1;
    var_7.name = var_3;
    var_7.momentum = 0;
    var_7.attackingtarget = undefined;
    var_7._id_14258 = var_0.name;
    var_7._id_12CB3 = 15;
    var_7._id_11C78 = "auto_nonai";
    var_7._id_11C77 = "sentry_offline";
    var_7.weaponname = var_5;
    var_7.health = level.turretsettings[var_5].health;
    var_7.maxhealth = level.turretsettings[var_5].maxhealth;
    var_7._id_1407D = 1;
    var_7._id_12161 = 0;
    var_7.completex1stashquest = ents_to_clean_up( var_5 );
    var_7 linkto( var_0.wz_tease, var_4, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_7 setturretteam( run_openexfil_spawn() );
    var_7 setturretmodechangewait( 0 );
    var_7 setmode( var_7._id_11C78 );
    var_7 makeunusable();
    var_7 maketurretinoperable();
    var_7 setconvergenceheightpercent( level.turretsettings[var_5]._id_132BE );
    var_7 setdefaultdroppitch( 0.0 );
    var_7 setcandamage( 1 );
    var_7 setnodeploy( 1 );
    var_7 setautorotationdelay( 1 );
    var_7 setconvergencetime( level.turretsettings[var_5]._id_14681, "yaw" );
    var_7 setconvergencetime( level.turretsettings[var_5]._id_12381, "pitch" );
    var_7.damagecenter = var_7.origin + ( 0, 0, 10 );
    var_7._id_13E91 = var_4;
    var_7.lb_wood_surf_dmg_scalar = 0;
    var_7.brking_getcenterofcircle = 1;
    var_7.helperdrone_isbeingpingedbydrone = spawn( "script_model", var_7.origin );
    var_7.helperdrone_isbeingpingedbydrone.team = var_7.team;
    var_7.helperdrone_isbeingpingedbydrone linkto( var_7, "tag_aim_pivot", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_7.helperdrone_isbeingpingedbydrone.juggernaut_update_hint_logic = var_2;
    var_7.helperdrone_isbeingpingedbydrone setmodel( var_6 );
    var_7.helperdrone_isbeingpingedbydrone hide();
    var_7 thread _id_13E80();
    var_7 thread _id_13E7E();

    if ( var_5 != "armored_train_locomotive_turret_mp" )
        var_7 thread _id_13E6E();

    level._id_14640[level._id_14640.size] = var_7;
    return var_7;
}

extractcountdown( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnturret( "misc_turret", var_1.origin, var_2 );
    var_4 setmodel( var_3 );
    var_4 linkto( var_0.wz_tease, var_1._id_13E91, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_4.team = var_1.team;
    var_4.angles = var_1.angles;
    var_4.turreton = var_1.turreton;
    var_4.name = var_1.name;
    var_4.momentum = var_1.momentum;
    var_4.attackingtarget = var_1.attackingtarget;
    var_4._id_14258 = var_1._id_14258;
    var_4._id_12CB3 = var_1._id_12CB3;
    var_4._id_11C78 = var_1._id_11C78;
    var_4._id_11C77 = var_1._id_11C77;
    var_4.weaponname = var_2;
    var_4.health = var_1.health;
    var_4.maxhealth = var_1.maxhealth;
    var_4._id_1407D = var_1._id_1407D;
    var_4._id_12161 = var_1._id_12161;
    var_4.completex1stashquest = ents_to_clean_up( var_2 );
    var_4 setturretteam( var_1.team );
    var_4 setturretmodechangewait( 0 );
    var_4 setmode( var_4._id_11C78 );
    var_4 makeunusable();
    var_4 maketurretinoperable();
    var_4 setconvergenceheightpercent( level.turretsettings[var_1.weaponname]._id_132BE );
    var_4 setdefaultdroppitch( 0.0 );
    var_4 setcandamage( 1 );
    var_4 setnodeploy( 1 );
    var_4 setautorotationdelay( 1 );
    var_4 setconvergencetime( level.turretsettings[var_1.weaponname]._id_14681, "yaw" );
    var_4 setconvergencetime( level.turretsettings[var_1.weaponname]._id_12381, "pitch" );
    var_4.damagecenter = var_1.damagecenter;
    var_4._id_13E91 = var_1._id_13E91;
    var_4.lb_wood_surf_dmg_scalar = var_1.lb_wood_surf_dmg_scalar;
    var_4.helperdrone_isbeingpingedbydrone = spawn( "script_model", var_4.origin );
    var_4.helperdrone_isbeingpingedbydrone.team = var_4.team;
    var_4.helperdrone_isbeingpingedbydrone linkto( var_4, "tag_aim_pivot", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_4.helperdrone_isbeingpingedbydrone.juggernaut_update_hint_logic = var_1.angles;
    var_4.helperdrone_isbeingpingedbydrone setmodel( var_3 );
    var_4.helperdrone_isbeingpingedbydrone hide();
    var_4 thread _id_13E80( 3 );
    var_4 thread _id_13E7E();

    if ( var_2 != "armored_train_locomotive_turret_mp" && var_2 != "armored_train_locomotive_turret_buffed_mp" )
        var_4 thread _id_13E6E();

    level._id_14640[level._id_14640.size] = var_4;
    return var_4;
}

extraction_balloon_total_plunder()
{
    foreach ( var_2, var_1 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_1.script_noteworthy ) && var_1.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
            continue;
        else
        {
            var_1.wz_tease.frontturret extractioncomplete();
            var_1.wz_tease.rearturret extractioncomplete();
        }
    }
}

extractioncomplete()
{
    self._id_12161 = 0;
    self.outlineid = scripts\mp\utility\outline::outlineenableforall( self, "outline_depth_red_x2", "level_script" );
}

extract_removemissionweapon()
{
    self._id_12161 = 1;
    scripts\mp\utility\outline::outlinedisable( self.outlineid, self );
}

entmantlingendtime()
{
    var_0 = spawnstruct();
    var_0._id_13E89 = "armored_train_mg_turret_mp";
    var_0.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_gatling";
    var_1 = spawnstruct();
    var_1._id_13E89 = "armored_train_tank_turret_mp";
    var_1.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_88mm";
    var_2 = spawnstruct();
    var_2._id_13E89 = "armored_train_mortar_turret_mp";
    var_2.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_mortar";
    var_3 = spawnstruct();
    var_3._id_13E89 = "armored_train_locomotive_turret_mp";
    var_3.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_locomotive";
    return [ [ var_3 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ] ];
}

enter_numbers_start()
{
    var_0 = spawnstruct();
    var_0._id_13E89 = "armored_train_mg_turret_buffed_mp";
    var_0.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_gatling";
    var_1 = spawnstruct();
    var_1._id_13E89 = "armored_train_tank_turret_buffed_mp";
    var_1.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_88mm";
    var_2 = spawnstruct();
    var_2._id_13E89 = "armored_train_locomotive_turret_buffed_mp";
    var_2.turretmodel = "x2_veh8_mil_lnd_br_train_turrets_locomotive";
    return [ [ var_2 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ], [ var_1, var_1 ], [ var_0, var_0 ] ];
}

fail_mission_if_killed()
{
    var_0 = getdvarint( "scr_wztrain_turretHealthPerPlayer", 1050 );
    var_1 = level.players.size * var_0;
    level._id_145F1._id_11B7C = var_1;
    level.turretsettings["armored_train_mg_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_mg_turret_mp"].health = var_1;
    level.turretsettings["armored_train_mg_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_mg_turret_mp"].burst = 20;
    level.turretsettings["armored_train_mg_turret_mp"]._id_12212 = 1;
    level.turretsettings["armored_train_mg_turret_mp"].lockstrength = 3;
    level.turretsettings["armored_train_mg_turret_mp"].spinuptime = 0.1;
    level.turretsettings["armored_train_mg_turret_mp"].cooldowntime = 0.3;
    level.turretsettings["armored_train_mg_turret_mp"]._id_13A84 = 3500;
    level.turretsettings["armored_train_mg_turret_mp"]._id_132BE = 0.65;
    level.turretsettings["armored_train_mg_turret_mp"]._id_14681 = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"]._id_12381 = 0.35;
    level.turretsettings["armored_train_mg_turret_mp"].weaponinfo = "armored_train_mg_turret_mp";
    level.turretsettings["armored_train_mg_turret_buffed_mp"] = spawnstruct();
    level.turretsettings["armored_train_mg_turret_buffed_mp"].health = var_1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].burst = 20;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_12212 = 0.1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].lockstrength = 3;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].spinuptime = 0.1;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].cooldowntime = 0.3;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_13A84 = 3500;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_132BE = 0.65;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_14681 = 0.35;
    level.turretsettings["armored_train_mg_turret_buffed_mp"]._id_12381 = 0.35;
    level.turretsettings["armored_train_mg_turret_buffed_mp"].weaponinfo = "armored_train_mg_turret_buffed_mp";
    level.turretsettings["armored_train_tank_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_tank_turret_mp"].health = var_1;
    level.turretsettings["armored_train_tank_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_tank_turret_mp"].burst = 1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_12212 = 3.5;
    level.turretsettings["armored_train_tank_turret_mp"].lockstrength = 3;
    level.turretsettings["armored_train_tank_turret_mp"].spinuptime = 0.4;
    level.turretsettings["armored_train_tank_turret_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_13A84 = 4500;
    level.turretsettings["armored_train_tank_turret_mp"]._id_132BE = 0.1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_14681 = 1;
    level.turretsettings["armored_train_tank_turret_mp"]._id_12381 = 1;
    level.turretsettings["armored_train_tank_turret_mp"].weaponinfo = "armored_train_tank_turret_mp";
    level.turretsettings["armored_train_tank_turret_buffed_mp"] = spawnstruct();
    level.turretsettings["armored_train_tank_turret_buffed_mp"].health = var_1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].burst = 1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_12212 = 0.9;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].lockstrength = 3;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].spinuptime = 0.4;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_13A84 = 4500;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_132BE = 0.1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_14681 = 1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"]._id_12381 = 1;
    level.turretsettings["armored_train_tank_turret_buffed_mp"].weaponinfo = "armored_train_tank_turret_buffed_mp";
    level.turretsettings["armored_train_mortar_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_mortar_turret_mp"].health = var_1;
    level.turretsettings["armored_train_mortar_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_mortar_turret_mp"].burst = 1;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_12212 = 20;
    level.turretsettings["armored_train_mortar_turret_mp"].lockstrength = 6;
    level.turretsettings["armored_train_mortar_turret_mp"].spinuptime = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].cooldowntime = 1;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_13A84 = 5000;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_132BE = 0.2;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_14681 = 1;
    level.turretsettings["armored_train_mortar_turret_mp"]._id_12381 = 1;
    level.turretsettings["armored_train_mortar_turret_mp"].weaponinfo = "armored_train_mortar_turret_mp";
    level.turretsettings["armored_train_mortar_turret_mp"].streakinfo = entityhit();
    level.turretsettings["armored_train_locomotive_turret_mp"] = spawnstruct();
    level.turretsettings["armored_train_locomotive_turret_mp"].health = var_1;
    level.turretsettings["armored_train_locomotive_turret_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_locomotive_turret_mp"].burst = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_12212 = 2;
    level.turretsettings["armored_train_locomotive_turret_mp"].lockstrength = 3;
    level.turretsettings["armored_train_locomotive_turret_mp"].spinuptime = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_13A84 = 4500;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_132BE = 0.1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_14681 = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"]._id_12381 = 1;
    level.turretsettings["armored_train_locomotive_turret_mp"].weaponinfo = "armored_train_locomotive_turret_mp";
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"] = spawnstruct();
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].health = var_1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].maxhealth = var_1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].burst = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_12212 = 0.7;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].lockstrength = 3;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].spinuptime = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].cooldowntime = 0.1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_13A84 = 4500;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_132BE = 0.1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_14681 = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"]._id_12381 = 1;
    level.turretsettings["armored_train_locomotive_turret_buffed_mp"].weaponinfo = "armored_train_locomotive_turret_mp";
    var_2 = entmantlingendtime();

    foreach ( var_8, var_4 in level._id_145F1._id_13C8D )
    {
        var_5 = var_2[var_8];

        if ( isdefined( var_4.script_noteworthy ) && var_4.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
        {
            var_4.wz_tease.frontturret = entry_open( var_4, var_4.wz_tease gettagorigin( "tag_turret_front" ), var_4.angles, "front_turret", "tag_turret_front", var_5[0]._id_13E89, var_5[0].turretmodel );
            var_4.wz_tease.frontturret.traincar = var_4.wz_tease;
            var_4.wz_tease.brdisabledamagestattracking = 1;
            continue;
        }

        var_6 = ( 0, 0, 0 );
        var_7 = ( 0, 180, 0 );
        var_4.wz_tease.frontturret = entry_open( var_4, var_4.wz_tease gettagorigin( "tag_turret_front" ), var_4.angles + var_6, "front_turret", "tag_turret_front", var_5[0]._id_13E89, var_5[0].turretmodel );
        var_4.wz_tease.rearturret = entry_open( var_4, var_4.wz_tease gettagorigin( "tag_turret_rear" ), var_4.angles + var_7, "rear_turret", "tag_turret_rear", var_5[1]._id_13E89, var_5[1].turretmodel );
        var_4.wz_tease.frontturret.traincar = var_4.wz_tease;
        var_4.wz_tease.rearturret.traincar = var_4.wz_tease;
        var_4.wz_tease.brdisabledamagestattracking = 2;
    }
}

_id_13E80( var_0 )
{
    self endon( "death" );
    self endon( "disabled" );
    level endon( "game_ended" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1.cooldowntime;

    for (;;)
    {
        if ( !istrue( self.turreton ) )
        {
            waitframe();
            continue;
        }

        var_3 = _id_13E6B();

        if ( isdefined( var_3 ) )
        {
            self.currenttarget = var_3;
            _id_13E68( var_3 );
            scripts\cp_mp\hostmigration::hostmigration_waitlongdurationwithpause( var_2 );
        }

        wait 0.05;
    }
}

_id_13E6B()
{
    var_0 = level.turretsettings[self.weaponname];
    var_1 = var_0._id_13A84;
    var_2 = var_1 * var_1;
    var_3 = self.origin + anglestoforward( self.angles ) * var_1;
    var_4 = scripts\common\utility::playersinsphere( var_3, var_1 );
    var_5 = undefined;
    var_6 = undefined;

    foreach ( var_8 in var_4 )
    {
        var_9 = _id_13E72( var_8 );

        if ( !istrue( var_9 ) )
            continue;

        var_10 = self gettagorigin( "tag_barrel" );
        var_11 = var_8.origin;
        var_12 = distancesquared( var_10, var_11 );

        if ( !isdefined( var_5 ) && !isdefined( var_6 ) || var_12 < var_6 )
        {
            var_5 = var_8;
            var_6 = var_12;
        }
    }

    return var_5;
}

_id_13E72( var_0 )
{
    var_1 = 1;

    if ( !isdefined( var_0 ) )
        var_1 = 0;
    else if ( !scripts\mp\utility\player::isreallyalive( var_0 ) )
        var_1 = 0;
    else if ( scripts\mp\utility\player::unset_relic_trex( var_0 ) )
        var_1 = 0;
    else if ( isdefined( var_0.play_disguise_vo ) )
        var_1 = 0;
    else if ( !_id_13E5E( var_0 ) )
        var_1 = 0;

    return var_1;
}

_id_13E7C( var_0 )
{
    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1._id_13A84;
    var_3 = var_2 * var_2;

    if ( !_id_13E72( var_0 ) )
        return 0;

    if ( distancesquared( self gettagorigin( "tag_barrel" ), var_0.origin ) > var_3 )
        return 0;

    return 1;
}

_id_13E5E( var_0 )
{
    var_1 = [ var_0 gettagorigin( "j_head" ), var_0 gettagorigin( "j_mainroot" ), var_0 gettagorigin( "tag_origin" ) ];
    var_2 = self gettagorigin( "tag_flash" );
    var_3 = var_0.origin + ( 0, 0, var_0 getplayerviewheight() );
    var_4 = vectornormalize( var_3 - var_2 );
    var_5 = vectornormalize( anglestoforward( self.angles ) );
    var_6 = [ self, var_0 ];
    var_6 = scripts\engine\utility::array_combine( var_6, level._id_14640 );
    var_7 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_water", "physicscontents_vehicle", "physicscontents_item" ] );
    var_8 = var_0 scripts\cp_mp\utility\player_utility::isinvehicle();

    if ( istrue( var_8 ) )
    {
        var_9 = var_0 scripts\cp_mp\utility\player_utility::getvehicle();
        var_6[var_6.size] = var_9;
        var_10 = var_9 getlinkedchildren();

        if ( isdefined( var_10 ) && var_10.size > 0 )
            var_6 = scripts\engine\utility::array_combine( var_6, var_10 );
    }

    for ( var_11 = 0; var_11 < var_1.size; var_11++ )
    {
        if ( scripts\engine\trace::ray_trace_passed( var_2, var_3, var_6, var_7 ) && vectordot( var_5, var_4 ) > cos( 120 ) )
            return 1;
    }

    return 0;
}

_id_13E71( var_0 )
{
    var_1 = self gettagorigin( "tag_flash" );
    var_2 = var_0.origin;
    var_3 = vectornormalize( var_2 - var_1 );
    var_4 = vectornormalize( anglestoforward( self gettagangles( "tag_aim_pivot" ) ) );

    if ( vectordot( var_4, var_3 ) > 0.3 )
        return 1;

    return 0;
}

_id_13E68( var_0 )
{
    self settargetentity( var_0 );
    self.attackingtarget = var_0;
    _id_13E79();
    _id_13E5C( var_0 );
    _id_13E5D();
    self cleartargetentity();
    self.currenttarget = undefined;
}

_id_13E79()
{
    self laseron();
    var_0 = level.turretsettings[self.weaponname];

    while ( istrue( self.turreton ) && self.momentum < var_0.spinuptime )
    {
        self.momentum = self.momentum + 0.1;
        wait 0.1;
    }
}

_id_13E78()
{
    self laseroff();
    self.momentum = 0;
}

_id_13E5C( var_0 )
{
    self endon( "disabled" );
    var_1 = level.turretsettings[self.weaponname];
    var_2 = var_1.burst;
    var_3 = var_1._id_12212;
    var_4 = var_1.lockstrength;

    while ( istrue( self.turreton ) && _id_13E7C( var_0 ) )
    {
        for ( var_5 = 0; var_5 < var_2; var_5++ )
        {
            if ( istrue( self.turreton ) && _id_13E7C( var_0 ) && _id_13E71( var_0 ) )
            {
                if ( self.weaponname == "armored_train_mortar_turret_mp" )
                {
                    var_6 = var_1.streakinfo;
                    _id_11D2C( self.origin, var_0.origin, var_6 );
                    self shootturret( "tag_flash", var_4 );
                }
                else
                {
                    var_7 = weaponfiretime( var_1.weaponinfo );
                    self shootturret( "tag_flash", var_4 );
                    wait( var_7 );
                }

                continue;
            }

            break;
        }

        wait( var_3 );
    }
}

_id_13E5D()
{
    _id_13E78();
}

_id_13E7E()
{
    self endon( "death" );
    level waittill( "game_ended" );

    if ( isdefined( self ) )
    {
        self.helperdrone_isbeingpingedbydrone delete();
        self delete();
    }
}

enemy_think( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );

    if ( istrue( self._id_12161 ) )
        return;

    var_1 = "tag_origin";

    if ( var_0 )
        var_1 = "tag_aim_pivot";

    if ( isdefined( self.completex1stashquest ) )
        playfxontag( self.completex1stashquest, self, var_1 );
}

_id_13E6E()
{
    self endon( "stopDamageMonitor" );
    level endon( "game_ended" );
    var_0 = undefined;
    var_1 = undefined;

    for (;;)
    {
        self waittill( "damage", var_2, var_0, var_3, var_4, var_1, var_5, var_6 );

        if ( !isdefined( self ) )
            return;

        if ( isdefined( var_0 ) && isdefined( var_0.team ) && var_0.team == run_openexfil_spawn() && !istrue( var_0._id_1217A ) )
            continue;

        if ( getdvarint( "x2_enable_blink_fx", 1 ) && !istrue( var_0._id_11E95 ) )
            thread enemy_think( 1 );

        var_7 = var_0;

        if ( isdefined( var_0.classname ) && var_0.classname == "script_vehicle" )
        {
            if ( isdefined( var_0.owner ) )
                var_7 = var_0.owner;
        }

        var_8 = var_2;

        if ( self.health < 0 )
            var_8 = var_8 + self.health;

        if ( isplayer( var_7 ) )
        {
            if ( self.health <= 0 )
                var_7 scripts\mp\damagefeedback::updatedamagefeedback( "hitturretx2break", 0, 1, "hitturretx2break", 0, 1 );
            else
                var_7 scripts\mp\damagefeedback::updatedamagefeedback( "hitturretx2", 0, 1, "hitturretx2", 0, 1 );

            var_9 = int( min( var_2, var_8 ) );
            _id_13FCF( var_7, var_9 );
        }

        scripts\mp\gametypes\br_gametype_x2.gsc::equipsecondarypickup( var_0, var_8 );

        if ( getrandompointinboundssafecircle() )
            getc130airdropheight();

        if ( self.health <= 0 )
            break;
    }

    _id_13E63();
    self.traincar thread _id_13E85();
}

_id_13E63()
{
    if ( self.turreton )
    {
        if ( self.health > 0 )
        {
            self notify( "stopDamageMonitor" );
            self.health = 0;
        }

        self.turreton = 0;
        self setmode( self._id_11C77 );
        self cleartargetentity();
        self.attackingtarget = undefined;
        self notify( "disabled" );
        self hide();

        if ( isdefined( self.outlineid ) )
            extract_removemissionweapon();

        if ( self.weaponname == "armored_train_locomotive_turret_mp" || self.weaponname == "armored_train_locomotive_turret_buffed_mp" )
        {
            self._id_127E6 = spawn( "script_model", self.origin );
            self._id_127E6 setmodel( "x2_vfx_turret_loco_pop" );
            self._id_127E6.angles = self.traincar.angles;
            self._id_127E6 linkto( self.traincar, self._id_13E91 );
            self._id_127E6 setscriptablepartstate( "base", "loco_pop" );
        }
        else
        {
            self._id_127E6 = spawn( "script_model", self.origin );
            self._id_127E6 setmodel( "x2_vfx_turret_pop" );
            self._id_127E6.angles = self.traincar.angles;
            self._id_127E6 linkto( self.traincar, self._id_13E91 );
            self._id_127E6 setscriptablepartstate( "base", "pop" );
            self.isvalidpos = spawn( "script_model", self.origin );
            self.isvalidpos setmodel( "x2_reveal_assault_car_turrets_destroyed_decal" );
            self.isvalidpos.angles = self.traincar.angles;
            self.isvalidpos linkto( self.traincar, self._id_13E91 );
        }
    }
}

has_started_cache_defenses()
{
    if ( isdefined( self.isvalidpos ) )
    {
        self.isvalidpos delete();
        self.isvalidpos = undefined;
    }

    if ( isdefined( self._id_127E6 ) )
    {
        self._id_127E6 delete();
        self._id_127E6 = undefined;
    }
}

has_no_focus_fire_attackers( var_0 )
{
    self endon( "death" );

    if ( !isdefined( var_0 ) )
        var_0 = 5;

    wait( var_0 );

    if ( isdefined( self ) )
        self delete();
}

_id_13E62()
{
    level endon( "game_ended" );

    if ( self.frontturret.turreton )
        self.frontturret _id_13E63();

    if ( isdefined( self.rearturret ) && self.rearturret.turreton )
        self.rearturret _id_13E63();

    self.frontturret kill();

    if ( isdefined( self.rearturret ) )
        self.rearturret kill();

    if ( isdefined( self.frontturret ) || isdefined( self.rearturret ) )
    {
        self.frontturret hide();
        self.frontturret.helperdrone_isbeingpingedbydrone hide();

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret hide();
            self.rearturret.helperdrone_isbeingpingedbydrone hide();
        }

        wait 5;
        self.frontturret.helperdrone_isbeingpingedbydrone delete();
        self.frontturret delete();

        if ( isdefined( self.rearturret ) )
        {
            self.rearturret.helperdrone_isbeingpingedbydrone delete();
            self.rearturret delete();
        }
    }
}

getrandompointinboundssafecircle()
{
    var_0 = self.lb_wood_surf_dmg_scalar + 1;

    if ( var_0 >= level._id_14638.size )
        return 0;

    var_1 = self.health / self.maxhealth;

    if ( var_1 > level._id_14638[var_0].get_request_backup_alias )
        return 0;

    return 1;
}

getc130airdropheight()
{
    var_0 = self.health / self.maxhealth;

    for ( var_1 = level._id_14638.size - 1; self.lb_wood_surf_dmg_scalar < var_1 && var_0 <= level._id_14638[self.lb_wood_surf_dmg_scalar + 1].get_request_backup_alias; self.lb_wood_surf_dmg_scalar = int( min( self.lb_wood_surf_dmg_scalar + 1, var_1 ) ) )
    {

    }

    calculatenumteamswithplayers( self.lb_wood_surf_dmg_scalar );
}

calculatenumteamswithplayers( var_0 )
{
    self.lb_wood_surf_dmg_scalar = var_0;
    var_1 = level._id_14638[self.lb_wood_surf_dmg_scalar];

    if ( var_1.model != "" )
        self setmodel( var_1.model );

    if ( var_1.statename != "" )
        self setscriptablepartstate( "base", var_1.statename );

    var_2 = scripts\engine\utility::ter_op( self == self.traincar.frontturret, 0, 1 );
    _id_1402D( self.traincar._id_13CC5, var_2, self.lb_wood_surf_dmg_scalar );
}

_id_13E64()
{
    var_0 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_2 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.wz_tease.frontturret _id_13E63();
            continue;
        }
        else if ( var_2.wz_tease.lb_wood_surf_dmg_scalar != level._id_14636.size - 1 )
        {
            var_2.wz_tease.frontturret _id_13E63();
            var_2.wz_tease.rearturret _id_13E63();
        }
    }
}

_id_13E65()
{
    if ( !self.turreton )
    {
        self show();
        self.helperdrone_isbeingpingedbydrone hide();
        self.helperdrone_isbeingpingedbydrone setscriptablepartstate( "base", "enabled" );
        self.health = self.maxhealth;
        self setmode( self._id_11C78 );
        self.turreton = 1;
        thread _id_13E80();

        if ( self.weaponname != "armored_train_locomotive_turret_mp" )
            thread _id_13E6E();
    }
}

_id_13E66()
{
    var_0 = level._id_145F1.cargo_truck_mg_create._id_119A4;

    foreach ( var_2 in level._id_145F1._id_13C8D )
    {
        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == var_0 )
        {
            var_2.wz_tease.frontturret _id_13E65();
            continue;
        }
        else if ( var_2.wz_tease.lb_wood_surf_dmg_scalar != level._id_14636.size - 1 )
        {
            var_2.wz_tease.frontturret _id_13E65();
            var_2.wz_tease.rearturret _id_13E65();
        }
    }
}

fire_rate()
{
    scripts\mp\gametypes\br_gametype_x2.gsc::f11scriptlighttoggle( 0 );
    var_0 = enter_numbers_start();

    foreach ( var_7, var_2 in level._id_145F1._id_13C8D )
    {
        var_3 = var_0[var_7];

        if ( isdefined( var_2.script_noteworthy ) && var_2.script_noteworthy == level._id_145F1.cargo_truck_mg_create._id_119A4 )
        {
            var_4 = extractcountdown( var_2, var_2.wz_tease.frontturret, var_3[0]._id_13E89, var_3[0].turretmodel );
            var_2.wz_tease.frontturret.helperdrone_isbeingpingedbydrone delete();
            var_2.wz_tease.frontturret delete();
            var_2.wz_tease.frontturret = var_4;
            var_2.wz_tease.frontturret.traincar = var_2.wz_tease;
            continue;
        }

        if ( isdefined( var_2.wz_tease.frontturret ) && var_2.wz_tease.frontturret.turreton && var_2.wz_tease.frontturret.health > 0 )
        {
            var_5 = extractcountdown( var_2, var_2.wz_tease.frontturret, var_3[0]._id_13E89, var_3[0].turretmodel );
            var_2.wz_tease.frontturret.helperdrone_isbeingpingedbydrone delete();
            var_2.wz_tease.frontturret delete();
            var_2.wz_tease.frontturret = var_5;
            var_2.wz_tease.frontturret.traincar = var_2.wz_tease;
            var_2.wz_tease.frontturret extractioncomplete();
            var_2.wz_tease.frontturret getc130airdropheight();
        }

        if ( isdefined( var_2.wz_tease.rearturret ) && var_2.wz_tease.rearturret.turreton && var_2.wz_tease.rearturret.health > 0 )
        {
            var_6 = extractcountdown( var_2, var_2.wz_tease.rearturret, var_3[1]._id_13E89, var_3[1].turretmodel );
            var_2.wz_tease.rearturret.helperdrone_isbeingpingedbydrone delete();
            var_2.wz_tease.rearturret delete();
            var_2.wz_tease.rearturret = var_6;
            var_2.wz_tease.rearturret.traincar = var_2.wz_tease;
            var_2.wz_tease.rearturret extractioncomplete();
            var_2.wz_tease.rearturret getc130airdropheight();
        }
    }

    wait 2.5;
    level notify( "buffTurrets" );
}

_id_11D2C( var_0, var_1, var_2 )
{
    var_3 = play_ac130_approach_scene();
    _id_132B3( var_3, var_0, var_1, var_2 );
}

_id_13E85()
{
    level endon( "game_ended" );
    _id_13CCA();
    self.brdisabledamagestattracking = max( self.brdisabledamagestattracking - 1, 0 );

    if ( self.brdisabledamagestattracking == 0 )
    {
        wait 0.2;
        caclulate_track_distance( 1 );
        extractioncomplete();

        if ( !scripts\mp\flags::gameflag( "x2_airstrike_begin" ) )
        {
            thread scripts\mp\gametypes\br_gametype_x2.gsc::extratimeincreasecount( 3, 0 );
            wait 9;
            scripts\mp\gametypes\br_gametype_x2.gsc::fadeoutinspectatorsofplayer( 1 );
        }
    }
}

enemy_targets_headshot()
{
    level endon( "game_ended" );
    level endon( "x2_locomotive_vulnerable" );
    level waittill( "buffTurrets" );
    scripts\mp\gametypes\br_gametype_x2.gsc::showsplash( "br_x2_buffed_turrets_enabled" );

    while ( level._id_145F1._id_13CCA < 15 )
        wait 0.2;

    level notify( "activateMortar" );
    scripts\mp\gametypes\br_gametype_x2.gsc::showsplash( "br_x2_superattack_enabled" );
}

_id_13CCA()
{
    level._id_145F1._id_13CCA++;
    level notify( "train_part_destroyed" );

    if ( level._id_145F1._id_13CCA == 6 )
        thread fire_rate();
}

round_vehicle_path_logic()
{
    if ( level._id_145F1._id_13CCA >= 21 )
        var_0 = 0.5;
    else if ( level._id_145F1._id_13CCA >= 15 )
        var_0 = 1;
    else
        var_0 = 0;

    var_0 = getdvarfloat( "x2_cluster_cooldown", var_0 );
    return var_0;
}

round_waittill_at_end_enemy_count()
{
    if ( level._id_145F1._id_13CCA >= 21 )
        var_0 = 0.5;
    else if ( level._id_145F1._id_13CCA >= 15 )
        var_0 = 0.3;
    else
        var_0 = 0;

    var_0 = getdvarfloat( "x2_cluster_delay", var_0 );
    return var_0;
}

exfil_smoke_vfx()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2SuperInterupt" );

    for (;;)
    {
        if ( level._id_145F1._id_13CCA < 15 )
        {
            wait 0.5;
            continue;
        }

        level._id_145F1._id_1397C = [];
        var_0 = register_vehicle_as_ambient();

        if ( var_0.size == 0 )
        {
            var_1 = level._id_145F1._id_13C8D[0];
            var_1 thread enter_combat_after_call();
            wait( round_waittill_at_end_enemy_count() );
        }
        else
        {
            foreach ( var_3 in var_0 )
            {
                var_3 thread enter_combat_after_call();
                wait( round_waittill_at_end_enemy_count() );
            }
        }

        waitframe();
        wait( round_vehicle_path_logic() );
    }
}

enter_combat_after_call()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2SuperInterupt" );
    scripts\mp\gametypes\br_gametype_x2.gsc::extractionlocation();
    thread _id_1397A();
}

_id_1397A()
{
    level endon( "game_ended" );
    level endon( "train_destroyed" );
    level endon( "x2SuperInterupt" );
    var_0 = play_ac130_approach_scene();
    var_1 = 0;
    var_2 = 1;

    if ( !isdefined( var_2 ) )
        return;

    var_3 = scripts\mp\utility\player::getplayersinradius( self.origin, 12000 );

    foreach ( var_5 in var_3 )
    {
        if ( var_1 >= var_2 )
            break;

        if ( !get_bomb_case_omnvar_value_based_on_color( var_5.origin ) )
            continue;

        if ( unset_slow_healthregen( var_5.origin ) )
            continue;

        if ( !_id_13E1C( var_5.origin ) )
            continue;

        _id_132B3( var_0, self.origin, var_5.origin );
        var_1++;
    }

    var_7 = var_1;

    while ( var_7 < var_2 )
    {
        var_8 = getrandompointincircle( self.origin, 5000, 0.5 );

        if ( unset_slow_healthregen( var_8 ) )
            continue;

        if ( !_id_13E1C( var_8 ) )
            continue;

        _id_132B3( var_0, self.origin, var_8 );
        var_7++;
    }

    level notify( "x2SuperAttackCompleted" );
}

get_bomb_case_omnvar_value_based_on_color( var_0 )
{
    var_1 = gettime() - 500000;
    var_2 = scripts\mp\utility\player::getplayersinradius( var_0, 1200 );

    foreach ( var_4 in var_2 )
    {
        var_5 = play_train_sequence( var_4 );

        if ( isdefined( var_5 ) && level._id_145F1._id_1397D[var_5].watch_for_player_in_los >= var_1 )
            return 0;
    }

    return 1;
}

_id_13E1C( var_0 )
{
    var_1 = gettime();
    var_2 = var_1 - 500000;
    var_3 = scripts\mp\utility\player::getplayersinradius( var_0, 1200 );

    foreach ( var_5 in var_3 )
    {
        var_6 = play_train_sequence( var_5 );

        if ( isdefined( var_6 ) && level._id_145F1._id_1397D[var_6].watch_for_player_in_los >= var_2 )
            return 0;
    }

    foreach ( var_5 in var_3 )
    {
        var_6 = play_train_sequence( var_5 );

        if ( !isdefined( var_6 ) )
        {
            var_9 = spawnstruct();
            var_9.player = var_5;
            var_6 = level._id_145F1._id_1397D.size;
        }
        else
            var_9 = level._id_145F1._id_1397D[var_6];

        var_9.watch_for_player_in_los = var_1 + randomint( 1000 );
        level._id_145F1._id_1397D[var_6] = var_9;
    }

    return 1;
}

play_train_sequence( var_0 )
{
    foreach ( var_3, var_2 in level._id_145F1._id_1397D )
    {
        if ( var_2.player == var_0 )
            return var_3;
    }

    return undefined;
}

unset_slow_healthregen( var_0 )
{
    foreach ( var_2 in level._id_145F1._id_1397C )
    {
        var_3 = distance2d( var_0, var_2 );

        if ( var_3 <= 1200 )
            return 1;
    }

    return 0;
}

_id_14642( var_0 )
{
    if ( isagent( var_0 ) )
    {
        var_1 = play_ac130_approach_scene();

        if ( var_1 != var_0 )
        {
            if ( !isdefined( var_0.isactive ) || !var_0.isactive )
                return undefined;

            if ( !isdefined( var_0.classname ) )
                return undefined;
        }
    }

    return var_0;
}

play_ac130_approach_scene()
{
    var_0 = undefined;

    if ( isdefined( level._id_13CC2 ) )
        var_0 = level._id_13CC2;
    else
    {
        var_1 = scripts\engine\utility::array_reverse( level.agentarray );

        foreach ( var_3 in var_1 )
        {
            if ( !isdefined( var_3 ) )
                continue;

            if ( isdefined( var_3.team ) && var_3.team != "axis" )
                continue;

            if ( !isdefined( var_3.team ) && isdefined( var_3.agentteam ) )
                continue;

            var_0 = var_3;
            var_0._id_1407D = 1;

            if ( !isdefined( var_0.pers["nextKillstreakID"] ) )
                var_0.pers["nextKillstreakID"] = 0;

            break;
        }

        level._id_13CC2 = var_0;
    }

    return var_0;
}

_id_132B3( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = var_0 scripts\cp_mp\utility\killstreak_utility::createstreakinfo( "toma_strike", var_0 );

    var_3._id_11EAE = 1;
    var_3._id_11F47 = 1;
    var_3.vehicle_process_node_when_at_goal = 1;
    var_3._id_121A9 = "ks_toma_strike_missile_mp_x2";
    var_3._id_121A8 = "ks_toma_strike_cluster_mp_x2";
    var_0.origin = var_2;
    var_0.angles = vectortoangles( var_2 - var_1 );
    level._id_145F1._id_1397C = scripts\engine\utility::array_add( level._id_145F1._id_1397C, var_2 );
    var_3._id_13A81 = var_2;
    var_0 thread scripts\cp_mp\killstreaks\toma_strike::starttomastrike( 5, undefined, undefined, var_3 );
}

getrandompointincircle( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    if ( var_1 <= 0.0 )
        return var_0;

    var_7 = 0.0;

    if ( isdefined( var_2 ) )
        var_7 = var_2;

    var_8 = 1.0;

    if ( isdefined( var_3 ) )
        var_8 = var_3;

    if ( !isdefined( var_4 ) )
        var_4 = 1;

    if ( !isdefined( var_5 ) )
        var_5 = 0;

    if ( !isdefined( var_6 ) )
        var_6 = 360;

    var_9 = squared( var_1 * var_7 );
    var_10 = squared( var_1 * var_8 );
    var_11 = undefined;

    if ( var_9 == var_10 )
        var_11 = sqrt( var_9 );
    else
        var_11 = sqrt( randomfloatrange( var_9, var_10 ) );

    var_12 = var_5 + randomfloat( var_6 - var_5 );
    var_13 = ( var_11 * cos( var_12 ), var_11 * sin( var_12 ), 0 );
    var_14 = var_0 + var_13;

    if ( var_4 )
    {
        var_15 = scripts\engine\trace::create_contents( 0, 1, 1, 1, 0, 0, 1 );
        var_14 = scripts\engine\utility::drop_to_ground( ( var_0[0], var_0[1], 400 ) + var_13, undefined, undefined, undefined, var_15 );
    }

    return var_14;
}

exterior_goal_func( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    wait( var_2 );
    var_1 playsoundonmovingent( var_0 );
}

f11scriptlightinit()
{
    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        var_1 setsoundsubmix( "br_x2_train_destroyed", 0.3 );
    }
}
