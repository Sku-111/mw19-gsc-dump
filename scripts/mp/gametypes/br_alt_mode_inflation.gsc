// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !getdvarint( "scr_br_alt_mode_inflation", 0 ) || scripts\mp\utility\game::round_vehicle_logic() == "truckwar" )
        return;

    level.debug_silo_jump = spawnstruct();
    level.debug_silo_jump.disabled = 0;
    level.debug_silo_jump.cost = getdvarint( "scr_br_alt_mode_inflation_cost", 45 );
    level.debug_silo_jump.minigamewinnersettings = getdvarfloat( "scr_br_alt_mode_inflation_drop_percent", 1.0 );
    level.debug_silo_jump.minigameapplyplayernamesettings = getdvarint( "scr_br_alt_mode_inflation_drop_max", -1 );
    level.debug_silo_jump._id_12C89 = getdvarfloat( "scr_br_alt_mode_inflation_respawn_delay", 10.0 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "playerDropPlunderOnDeath", ::playerdropplunderondeath );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "circleTimer", ::circletimer );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "postPlunder", ::_id_12804 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "markPlayerAsEliminatedOnKilled", ::_id_11B16 );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "playerGulagAutoWinWait", ::_id_125BD );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "triggerRespawnOverlay", ::_id_13DCB );
    scripts\mp\gametypes\br_gametypes.gsc::_id_12B11( "assignSpectatorToSpectatePlayer", ::assignspectatortospectateplayer );

    if ( !getdvarint( "scr_br_alt_mode_inflation_gulag", 0 ) )
        scripts\mp\gametypes\br_gametypes.gsc::load_sequence_3_vfx( "gulag" );

    scripts\mp\gametypes\br_gametypes.gsc::load_sequence_3_vfx( "useTokenToReviveTeammate" );
    scripts\mp\gametypes\br_gametypes.gsc::load_sequence_3_vfx( "gulagWinnerRestoreLoadoutUseGulag" );
    thread teamswithcirclepeek();
}

teamswithcirclepeek()
{
    while ( !isdefined( level.onplayerspawncallbacks ) )
        waitframe();

    scripts\mp\utility\spawn_event_aggregator::registeronplayerspawncallback( ::onplayerspawned );
}

onplayerspawned()
{
    _id_14012();
}

_id_12516()
{
    return istrue( level.br_prematchstarted ) && !istrue( self.delay_enter_combat_after_investigating_grenade ) && !level.debug_silo_jump.disabled && self.plundercount >= level.debug_silo_jump.cost;
}

playerdropplunderondeath( var_0, var_1 )
{
    var_2 = self.plundercount;

    if ( istrue( self.respawningfromtoken ) )
    {
        var_2 = var_2 - level.debug_silo_jump.cost;

        if ( var_2 < 0 )
            var_2 = 0;
    }

    var_3 = int( var_2 * level.debug_silo_jump.minigamewinnersettings );
    var_2 = var_2 - var_3;
    scripts\mp\gametypes\br_plunder.gsc::playersetplundercount( var_2, roof_combat_spawn_func() );

    if ( level.debug_silo_jump.minigameapplyplayernamesettings >= 0 )
        var_3 = int( min( level.debug_silo_jump.minigameapplyplayernamesettings, var_3 ) );

    scripts\mp\gametypes\br_plunder.gsc::ml_p3_func( var_3, var_0 );
    return 1;
}

circletimer( var_0 )
{
    if ( !var_0 )
        scripts\mp\gametypes\br_gulag.gsc::_id_13249();

    var_1 = scripts\mp\gametypes\br_gulag.gsc::remove_engineer_class();

    if ( !level.debug_silo_jump.disabled && var_0 >= var_1 )
    {
        level.debug_silo_jump.disabled = 1;

        foreach ( var_3 in level.players )
        {
            if ( !isdefined( var_3 ) || !isalive( var_3 ) )
                continue;

            var_3 _id_14012();
            scripts\mp\gametypes\br_killstreaks.gsc::isbrsquadleader( var_3, "cash_deploy_closed", undefined, 2 );
        }
    }

    return 0;
}

_id_12804( var_0 )
{
    var_1 = 0;

    if ( isdefined( var_0 ) )
        var_1 = var_0._id_133E4;

    _id_14012( var_1 );
}

_id_14012( var_0 )
{
    if ( _id_12516() )
    {
        if ( !scripts\mp\gametypes\br_public.gsc::hasrespawntoken() )
        {
            scripts\mp\gametypes\br_pickups.gsc::addrespawntoken( 1 );

            if ( !istrue( var_0 ) )
                thread scripts\mp\hud_message::showsplash( "br_inflation_respawn_token_pickup" );
        }
    }
    else if ( scripts\mp\gametypes\br_public.gsc::hasrespawntoken() )
    {
        scripts\mp\gametypes\br_pickups.gsc::removerespawntoken();

        if ( !istrue( var_0 ) )
            thread scripts\mp\hud_message::showsplash( "br_inflation_respawn_token_lost" );
    }
}

_id_1336E( var_0 )
{
    waittillframeend;
    scripts\mp\utility\lower_message::setlowermessageomnvar( 9, int( gettime() + var_0 * 1000 ) );
    scripts\mp\gametypes\br_gulag.gsc::_id_131A2( 1 );
    thread spawn_drones( var_0 );
}

spawn_drones( var_0 )
{
    self endon( "disconnect" );

    if ( isdefined( var_0 ) )
        wait( var_0 );

    scripts\mp\gametypes\br_gulag.gsc::_id_131A2( 0 );
    scripts\mp\utility\lower_message::setlowermessageomnvar( 0 );
}

roof_combat_spawn_func()
{
    var_0 = spawnstruct();
    var_0._id_133E4 = 1;
    return var_0;
}

_id_11B16()
{
    return 0;
}

_id_125BD( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
    {
        if ( level.debug_silo_jump._id_12C89 )
        {
            var_2 = level.debug_silo_jump._id_12C89;
            thread _id_1336E( var_2 );
            wait( var_2 );
            return 1;
        }
    }

    return 0;
}

_id_13DCB( var_0 )
{
    return 1;
}

assignspectatortospectateplayer( var_0, var_1 )
{
    var_0 notify( "assignSpectatorToSpectatePlayerWaitForTeam" );

    if ( istrue( level.endmatchcameratransitions ) )
        return 0;

    if ( !isdefined( var_1 ) || !isplayer( var_1 ) || !isalive( var_1 ) && !isdefined( var_1._id_1391A ) )
        return 0;

    if ( var_0.team == var_1.team )
        return 0;

    if ( !scripts\mp\utility\teams::getteamdata( var_0.team, "aliveCount" ) )
        return 0;

    thread cargo_truck_mg_mp_init( var_0 );
    return 1;
}

cargo_truck_mg_mp_init( var_0 )
{
    level endon( "brSpawnPlayersEnding" );
    var_0 endon( "assignSpectatorToSpectatePlayerWaitForTeam" );
    var_0 endon( "death_or_disconnect" );
    var_0 scripts\mp\gametypes\br_spectate.gsc::_id_126AB();
    var_0 setclientomnvar( "ui_show_spectateHud", var_0 getentitynumber() );
    wait 1.0;
    var_1 = scripts\mp\gametypes\br_spectate.gsc::regive_killstreak_after_use( var_0 );
    thread scripts\mp\gametypes\br_spectate.gsc::assignspectatortospectateplayer( var_0, var_1 );
}
