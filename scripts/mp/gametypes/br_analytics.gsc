// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

destroycrateinbadtrigger()
{
    level._id_11B22 = ::_id_1205B;
    level.br_branalytics_revivefunc = ::branalytics_revive;

    if ( getdvarint( "NNNQSOPLKR", 0 ) )
    {
        level.kothtotaltime = [];
        analyticsaddevent();
    }
}

add_outline()
{
    return isdefined( level.kothtotaltime );
}

add_pack_characteranim()
{
    var_0 = gettime();

    if ( !isdefined( level._id_12855 ) )
        var_0 = 0;
    else
        var_0 = var_0 - level._id_12855;

    return var_0;
}

add_object_to_trap_room_ents( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_1 ) )
        var_1 = ( 0, 0, 0 );

    if ( !isdefined( var_2 ) )
        var_2 = 0;

    if ( !isdefined( var_3 ) )
        var_3 = "";

    var_4 = add_pack_characteranim();
    analyticswritecsv( var_1, var_0, var_2, var_4, var_3 );
}

ai_roof_think( var_0 )
{
    if ( !isdefined( var_0 ) )
        return -1;

    switch ( var_0 )
    {
        case "deathType_switchingTeams":
            var_1 = 6;
            break;
        case "deathType_worldDeath":
            var_1 = 3;
            break;
        case "deathType_suicide":
            var_1 = 5;
            break;
        case "deathType_friendlyFire":
            var_1 = 4;
            break;
        case "deathType_inLastStand":
            var_1 = 2;
            break;
        case "deathType_normal":
            var_1 = 1;
            break;
        case "downed":
            var_1 = 0;
            break;
        default:
            var_1 = -1;
            break;
    }

    return var_1;
}

add_pack_camanim( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3 ) )
        var_3 = "";

    if ( !isdefined( level.kothtotaltime[var_0] ) )
        level.kothtotaltime[var_0] = [];

    var_4 = spawnstruct();
    var_4.type = var_0;
    var_4.origin = var_1;
    var_4.ent = var_2;
    var_4.data = var_3;
    var_4.state = 0;
    var_4.time = add_pack_characteranim();
    var_5 = level.kothtotaltime[var_0].size;
    level.kothtotaltime[var_0][var_5] = var_4;
}

dialog_grenade_update( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) || !isdefined( level.kothtotaltime ) || !isdefined( level.kothtotaltime[var_0] ) )
        return;

    foreach ( var_4 in level.kothtotaltime[var_0] )
    {
        if ( var_4.ent == var_1 )
        {
            var_4.time = add_pack_characteranim();
            var_4.state = var_2;
            return;
        }
    }
}

dialog_monitor_shieldraise()
{
    if ( scripts\mp\utility\game::getgametype() != "br" )
        return 0;

    return 1;
}

branalytics_equipmentuse( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = var_1.basename;
    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "item_name";
    var_3[var_3.size] = var_2;
    var_0 dlog_recordplayerevent( "dlog_event_br_equipment_use", var_3 );
}

dialog_monitor_hurry( var_0 )
{
    if ( !isdefined( var_0 ) )
        return 1;

    switch ( var_0 )
    {
        case "trigger_hurt":
        case "worldspawn":
        case "misc_turret":
        case "script_model":
        case "script_vehicle":
        case "trigger_multiple":
        case "trigger_radius":
            return 1;
        default:
            break;
    }

    return 0;
}

branalytics_down( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( isdefined( var_0.classname ) && var_0.classname == "agent" )
        return;

    var_5 = dialog_monitor_hurry( var_0.classname );

    if ( !var_5 && !isplayer( var_0 ) )
    {
        var_6 = "attacker.classname: " + var_0.classname;
        scripts\mp\utility\script::laststand_dogtags( var_6 );
    }

    if ( var_5 )
    {
        var_7 = "world";
        var_0 = var_1;
    }
    else if ( isdefined( var_2 ) )
        var_7 = var_2.basename;
    else
    {
        var_8 = var_0 getcurrentweapon();
        var_7 = var_8.basename;
    }

    var_9 = var_1 getcurrentweapon();
    var_10 = var_9.basename;
    var_11 = [];
    var_11[var_11.size] = "victim";
    var_11[var_11.size] = var_1;
    var_12 = _branalytics_header( var_0, "attacker" );

    foreach ( var_14 in var_12 )
        var_11[var_11.size] = var_14;

    var_11[var_11.size] = "attacker_weapon";
    var_11[var_11.size] = var_7;
    var_16 = var_0 calloutmarkerping_entityzoffset( "ui_br_objective_index" );

    if ( !isdefined( var_16 ) )
        var_17 = "none";
    else
        var_17 = tablelookup( "mp/brmissions.csv", 0, var_16, 1 );

    var_11[var_11.size] = "attacker_active_mission";
    var_11[var_11.size] = var_17;
    var_18 = add_pack_fx( [], var_1, "victim" );

    foreach ( var_14 in var_18 )
        var_11[var_11.size] = var_14;

    var_11[var_11.size] = "victim_weapon";
    var_11[var_11.size] = var_10;
    var_16 = var_1 calloutmarkerping_entityzoffset( "ui_br_objective_index" );

    if ( !isdefined( var_16 ) )
        var_17 = "NONE";
    else
        var_17 = tablelookup( "mp/brmissions.csv", 0, var_16, 1 );

    var_11[var_11.size] = "victim_active_mission";
    var_11[var_11.size] = var_17;
    var_11[var_11.size] = "death_type";
    var_11[var_11.size] = var_3;
    var_11[var_11.size] = "means_of_death";
    var_11[var_11.size] = var_4;
    var_21 = scripts\mp\utility\teams::getfriendlyplayers( var_1.team, 1 );
    var_22 = 2147483647;

    foreach ( var_24 in var_21 )
    {
        if ( var_24 == var_1 )
            continue;

        var_25 = distance( var_1.origin, var_24.origin );

        if ( var_25 < var_22 || var_22 == 2147483647 )
            var_22 = var_25;
    }

    var_11[var_11.size] = "closest_victim_teammate_distance";
    var_11[var_11.size] = int( var_22 );
    var_0 dlog_recordplayerevent( "dlog_event_br_down", var_11 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "down", var_1.origin, ai_roof_think( var_3 ), var_7 );
}

branalytics_revive( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = [];
    var_2[var_2.size] = "revivee";
    var_2[var_2.size] = var_1;
    var_3 = _branalytics_header( var_0, "reviver" );

    foreach ( var_5 in var_3 )
        var_2[var_2.size] = var_5;

    var_7 = add_pack_fx( [], var_1, "revivee" );

    foreach ( var_5 in var_7 )
        var_2[var_2.size] = var_5;

    var_0 dlog_recordplayerevent( "dlog_event_br_revive", var_2 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "revive", var_1.origin );
}

dialog_grenade_missed( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = _branalytics_header( var_0, "revivee" );
    var_0 dlog_recordplayerevent( "dlog_event_br_selfrevive", var_1 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "selfRevive", var_0.origin );
}

diablecachesaroundorigin( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_11 = [];
    var_11[var_11.size] = "lastStandAttacker";
    var_11[var_11.size] = var_1;
    var_11[var_11.size] = "victim";
    var_11[var_11.size] = var_2;
    var_12 = _branalytics_header( var_0, "revivee" );

    foreach ( var_14 in var_12 )
        var_11[var_11.size] = var_14;

    var_16 = add_pack_fx( [], var_1, "laststandattacker" );

    foreach ( var_14 in var_16 )
        var_11[var_11.size] = var_14;

    var_19 = add_pack_fx( [], var_2, "victim" );

    foreach ( var_14 in var_19 )
        var_11[var_11.size] = var_14;

    var_11[var_11.size] = "only_cleanup";
    var_11[var_11.size] = var_7;
    var_11[var_11.size] = "only_downed";
    var_11[var_11.size] = var_8;
    var_11[var_11.size] = "bled_out";
    var_11[var_11.size] = var_9;
    var_11[var_11.size] = "downed_seconds";
    var_11[var_11.size] = var_10;

    if ( !isdefined( var_3 ) )
        var_3 = "";

    var_11[var_11.size] = "means_of_death";
    var_11[var_11.size] = var_3;

    if ( !isdefined( var_4 ) )
        var_4 = "";

    var_11[var_11.size] = "weapon_name";
    var_11[var_11.size] = var_4;

    if ( !isdefined( var_5 ) )
        var_5 = "";

    var_11[var_11.size] = "laststand_means_of_death";
    var_11[var_11.size] = var_5;

    if ( !isdefined( var_6 ) )
        var_6 = "";

    var_11[var_11.size] = "laststand_weapon_name";
    var_11[var_11.size] = var_6;
    var_0 dlog_recordplayerevent( "dlog_event_br_secondwind", var_11 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "secondWind", var_0.origin );
}

dialog_monitor_waitreload( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = [];
    var_3[var_3.size] = "door_id";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "desination";
    var_3[var_3.size] = var_2;
    var_0 dlog_recordplayerevent( "dlog_event_red_warp_door_usage", var_3 );
}

branalytics_deployallowed()
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_deploy_allowed", [] );
}

branalytics_deploytriggered( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = _branalytics_header( var_0 );
    var_0 dlog_recordplayerevent( "dlog_event_br_deploy_triggered", var_1 );
}

detachriotshield( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = _branalytics_header( var_0 );
    var_0 dlog_recordplayerevent( "dlog_event_br_deploy_land", var_1 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "land", var_0.origin );
}

detonatedripfx( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( add_outline() )
        add_object_to_trap_room_ents( "playerCount", ( 0, 0, 0 ), 0, var_0 );
}

determine_starting_breadcrumb( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "damage_taken";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "damage_source";
    var_3[var_3.size] = var_2;
    var_0 dlog_recordplayerevent( "dlog_event_player_largedamage_taken", var_3 );
}

branalytics_lootpickup( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "item_name";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "amount";
    var_3[var_3.size] = var_2;
    var_0 dlog_recordplayerevent( "dlog_event_br_loot_pickup", var_3 );
}

branalytics_lootdrop( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = istrue( var_2 );
    var_4 = _branalytics_header( var_0 );
    var_4[var_4.size] = "item_name";
    var_4[var_4.size] = var_1;
    var_4[var_4.size] = "is_drop_from_weapon_switch";
    var_4[var_4.size] = var_2;
    var_4[var_4.size] = "amount";
    var_4[var_4.size] = var_3;
    var_0 dlog_recordplayerevent( "dlog_event_br_loot_drop", var_4 );
}

destroyawardlaunchonly( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = _branalytics_header( var_0 );
    var_2[var_2.size] = "type";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_gulag_start", var_2 );
}

destroyaward( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = _branalytics_header( var_0 );
    var_2[var_2.size] = "type";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_gulag_end", var_2 );

    if ( add_outline() )
    {
        var_3 = 0;

        switch ( var_1 )
        {
            case "winner":
                var_3 = 1;
                break;
            case "timeout":
                var_3 = 2;
                break;
            case "shutdown":
                var_3 = 3;
                break;
            case "debug":
                var_3 = 4;
                break;
            default:
                var_3 = 0;
                break;
        }

        add_object_to_trap_room_ents( "gulag", ( 0, 0, 0 ), var_3 );
    }
}

devspectatetesthost( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( add_outline() )
        add_object_to_trap_room_ents( "respawn", ( 0, 0, 0 ), var_1 );
}

detonatesound( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( add_outline() )
        add_object_to_trap_room_ents( "PlunderRespawn", var_0, var_1, var_2 );
}

destpoint( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( add_outline() )
        add_object_to_trap_room_ents( "disconnect", ( 0, 0, 0 ), var_1 );
}

dialog_intro( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "start_station";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "next_station";
    var_3[var_3.size] = var_2;
    var_0 dlog_recordplayerevent( "dlog_event_br_subway_used", var_3 );
}

destroy_vehicles( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = _branalytics_header( var_0 );
    var_2[var_2.size] = "tree_level";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_ff_tree_level_achieved", var_2 );
}

destroy_vehicle_on_pilot_death( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = _branalytics_header( var_0 );
    var_0 dlog_recordplayerevent( "dlog_event_br_ff_riddle_completed", var_1 );
}

destroy_vehicle_if_driver_dies( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = _branalytics_header( var_0 );
    var_2[var_2.size] = "elf_level";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_ff_elf_level_achieved", var_2 );
}

destprogress( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_4 = _branalytics_header( var_0 );
    var_4[var_4.size] = "drop_x";
    var_4[var_4.size] = var_1[0];
    var_4[var_4.size] = "drop_y";
    var_4[var_4.size] = var_1[1];
    var_4[var_4.size] = "drop_z";
    var_4[var_4.size] = var_1[2];
    var_4[var_4.size] = "spawn_type";
    var_4[var_4.size] = var_2;
    var_0 dlog_recordplayerevent( "dlog_event_br_dropbag_deployed", var_4 );

    if ( add_outline() )
        add_pack_camanim( "dropkit", var_1, var_3, 0 );
}

destroy_intro_tank( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "drop_x";
    var_3[var_3.size] = var_1[0];
    var_3[var_3.size] = "drop_y";
    var_3[var_3.size] = var_1[1];
    var_3[var_3.size] = "drop_z";
    var_3[var_3.size] = var_1[2];
    var_0 dlog_recordplayerevent( "dlog_event_br_dropbag_used", var_3 );

    if ( add_outline() )
        dialog_grenade_update( "dropkit", var_2, 1 );
}

destroy_bad_traversals( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = [];
    var_2[var_2.size] = "drop_team";
    var_2[var_2.size] = var_0;
    var_2[var_2.size] = "drop_x";
    var_2[var_2.size] = var_1[0];
    var_2[var_2.size] = "drop_y";
    var_2[var_2.size] = var_1[1];
    var_2[var_2.size] = "drop_z";
    var_2[var_2.size] = var_1[2];
    getentitylessscriptablearray( "dlog_event_br_dropbag_destroyed", var_2 );
}

descendpos( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = _branalytics_header( var_0 );
    var_2[var_2.size] = "time_spent_outside";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_circle_enter", var_2 );
}

descendsolostarts( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = _branalytics_header( var_0 );
    var_2[var_2.size] = "time_spent_inside";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_circle_exit", var_2 );
}

destinations( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = [];
    var_3[var_3.size] = "axis_contracts_completed";
    var_3[var_3.size] = var_0;
    var_3[var_3.size] = "allies_contracts_completed";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "location";
    var_3[var_3.size] = var_2;
    getentitylessscriptablearray( "dlog_event_br_clash_contracts_completed", var_3 );
}

desired_landing_spot( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = [];
    var_3[var_3.size] = "axis_score";
    var_3[var_3.size] = var_0;
    var_3[var_3.size] = "allies_score";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "location";
    var_3[var_3.size] = var_2;
    getentitylessscriptablearray( "dlog_event_br_clash_contracts_completed", var_3 );
}

determinewinnertype( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    level waittill( "prematch_done" );
    getentitylessscriptablearray( "dlog_event_br_plane_path", [ "center_x", var_0[0], "center_y", var_0[1], "center_z", var_0[2], "yaw", var_1, "start_x", var_2[0], "start_y", var_2[1], "start_z", var_2[2], "end_x", var_3[0], "end_y", var_3[1], "end_z", var_3[2] ] );
}

destroy_jammer_relocate( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = [];
    var_2 = 0;
    var_3 = 0;
    var_4 = 5000;
    var_5 = 0;
    var_6 = 5000;

    foreach ( var_8 in var_0 )
    {
        if ( !isdefined( var_1[var_8.team] ) )
            var_1[var_8.team] = 0;

        if ( isdefined( var_8.plundercount ) )
        {
            var_2 = var_2 + var_8.plundercount;
            var_1[var_8.team] = var_1[var_8.team] + var_8.plundercount;

            if ( var_8.plundercount > var_3 )
                var_3 = var_8.plundercount;

            if ( var_8.plundercount < var_4 )
                var_4 = var_8.plundercount;
        }

        if ( var_1[var_8.team] > var_5 )
            var_5 = var_1[var_8.team];

        if ( var_1[var_8.team] < var_6 )
            var_6 = var_1[var_8.team];
    }

    var_10 = int( _id_12E53( var_2, var_0.size ) );
    var_11 = int( _id_12E53( var_2, var_1.size ) );
    var_12 = [];
    var_12[var_12.size] = "num_players_alive";
    var_12[var_12.size] = _id_12E4E( var_0.size );
    var_12[var_12.size] = "num_teams_alive";
    var_12[var_12.size] = _id_12E4E( var_1.size );
    var_12[var_12.size] = "total_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_2 );
    var_12[var_12.size] = "top_player_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_3 );
    var_12[var_12.size] = "top_team_total_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_5 );
    var_12[var_12.size] = "avg_player_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_10 );
    var_12[var_12.size] = "avg_team_total_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_11 );
    var_12[var_12.size] = "min_player_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_4 );
    var_12[var_12.size] = "min_team_total_plunder_held";
    var_12[var_12.size] = _id_12E4E( var_6 );
    var_12[var_12.size] = "plunder_items_picked_up";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder._id_12790 );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "plunder_value_picked_up";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder._id_127AD );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "plunder_items_dropped";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder._id_1278F );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "plunder_value_dropped";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder._id_127AC );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "plunder_awarded_by_missions_total";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder._id_12784 );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "kiosk_spent_total";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.wait_for_all_players_in_airlock );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "kiosk_num_purchases";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.wait_fire_mainhouse_flashbangs_and_smokes );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "extraction_balloon_total_value";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.oscope_freq_think );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "extraction_balloon_total_extractions";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.oscope_freq );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "extraction_helicoptor_total_value";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.oscope_sign_think );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "extraction_helicoptor_total_extractions";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.oscope_sign );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_uncommon_1";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_uncommon_1"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_uncommon_2";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_uncommon_2"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_uncommon_3";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_uncommon_3"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_rare_1";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_rare_1"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_rare_2";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_rare_2"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_epic_1";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_epic_1"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_epic_2";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_epic_2"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "ingame_count_legendary_1";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["brloot_plunder_cash_legendary_1"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "count_unopened_chests";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["br_loot_cache"] );
    else
        var_12[var_12.size] = 0;

    var_12[var_12.size] = "count_available_missions";

    if ( isdefined( level.br_plunder ) )
        var_12[var_12.size] = _id_12E4E( level.br_plunder.vehicle_collision_updateinstance["missionTablets"] );
    else
        var_12[var_12.size] = 0;

    getentitylessscriptablearray( "dlog_event_br_plunder_economy_snapshot", var_12 );
}

defusebomb( var_0 )
{
    var_1 = var_0 getcurrentweapon();
    var_2 = undefined;

    if ( isdefined( var_0.primaryweaponobj ) && var_1 != var_0.primaryweaponobj )
        var_2 = var_0.primaryweaponobj;
    else if ( isdefined( var_0.secondaryweaponobj ) && var_1 != var_0.secondaryweaponobj )
        var_2 = var_0.secondaryweaponobj;

    return [ var_1, var_2 ];
}

destroyscorelaunchonly( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = defusebomb( var_0 );
    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "reason";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "primary_weapon";
    var_3[var_3.size] = _id_12E51( var_2[0] );
    var_3[var_3.size] = "secondary_weapon";
    var_3[var_3.size] = _id_12E51( var_2[1] );
    var_3[var_3.size] = "primary_equipment";
    var_3[var_3.size] = _id_12E4F( var_0.equipment["primary"] );
    var_3[var_3.size] = "secondary_equipment";
    var_3[var_3.size] = _id_12E4F( var_0.equipment["secondary"] );
    var_3[var_3.size] = "field_equipment";
    var_3[var_3.size] = _id_12E4F( var_0.equipment["super"] );
    var_3[var_3.size] = "has_gasmask";
    var_3[var_3.size] = isdefined( var_0.gasmaskequipped ) && var_0.gasmaskequipped == 1;
    var_3[var_3.size] = "armor_plates";
    var_3[var_3.size] = _id_12E4E( var_0 scripts\mp\equipment::getequipmentslotammo( "health" ) );
    var_3[var_3.size] = "plunder_total";
    var_3[var_3.size] = _id_12E4E( var_0.plundercount );
    var_3[var_3.size] = "plunder_banked";
    var_3[var_3.size] = _id_12E4E( var_0.plunderbanked );

    if ( !isdefined( var_0.br_ammo ) )
        var_0.br_ammo = [];

    var_3[var_3.size] = "ammo_smg";
    var_3[var_3.size] = _id_12E4E( var_0.br_ammo["brloot_ammo_919"] );
    var_3[var_3.size] = "ammo_ar_lmg";
    var_3[var_3.size] = _id_12E4E( var_0.br_ammo["brloot_ammo_762"] );
    var_3[var_3.size] = "ammo_shotgun";
    var_3[var_3.size] = _id_12E4E( var_0.br_ammo["brloot_ammo_12g"] );
    var_3[var_3.size] = "ammo_sniper";
    var_3[var_3.size] = _id_12E4E( var_0.br_ammo["brloot_ammo_50cal"] );
    var_3[var_3.size] = "ammo_rockets";
    var_3[var_3.size] = _id_12E4E( var_0.br_ammo["brloot_ammo_rocket"] );
    var_4 = [];

    for ( var_5 = 0; var_5 < 3; var_5++ )
    {
        var_6 = "specialty_null";

        if ( isdefined( var_0.classstruct ) && isdefined( var_0.classstruct.loadoutstandardperks[var_5] ) )
            var_6 = var_0.classstruct.loadoutstandardperks[var_5];

        var_4[var_5] = var_6;
    }

    var_3[var_3.size] = "perk1";
    var_3[var_3.size] = var_4[0];
    var_3[var_3.size] = "perk2";
    var_3[var_3.size] = var_4[1];
    var_3[var_3.size] = "perk3";
    var_3[var_3.size] = var_4[2];
    var_7 = var_3.size;
    var_3[var_7] = "p_rec";
    var_3[var_7 + 2] = "p_front";
    var_3[var_7 + 4] = "p_back";
    var_3[var_7 + 6] = "p_mag";
    var_3[var_7 + 8] = "p_over";
    var_3[var_7 + 10] = "p_sco";
    var_3[var_7 + 12] = "p_under";
    var_3[var_7 + 14] = "p_mod";
    var_3[var_7 + 16] = "p_vis";
    var_3[var_7 + 18] = "p_muz";
    var_3[var_7 + 20] = "p_r_grip";
    var_3[var_7 + 22] = "p_trig";
    var_3[var_7 + 24] = "p_ex";
    var_3[var_7 + 26] = "p_oth";

    if ( isdefined( var_2[0] ) )
    {
        var_3[var_7 + 1] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0]._id_12A95 ) );
        var_3[var_7 + 3] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].frontpiece ) );
        var_3[var_7 + 5] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].backpiece ) );
        var_3[var_7 + 7] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].magazine ) );
        var_3[var_7 + 9] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].override ) );
        var_3[var_7 + 11] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].scope ) );
        var_3[var_7 + 13] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].underbarrel ) );
        var_3[var_7 + 15] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].modifier ) );
        var_3[var_7 + 17] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].visual ) );
        var_3[var_7 + 19] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].muzzle ) );
        var_3[var_7 + 21] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].reargrip ) );
        var_3[var_7 + 23] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].trigger ) );
        var_3[var_7 + 25] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[0].extra ) );
        var_3[var_7 + 27] = "";
        var_8 = var_2[0].others;

        foreach ( var_11, var_10 in var_8 )
        {
            var_3[var_7 + 27] = var_3[var_7 + 27] + scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_10 ) );

            if ( var_11 < var_8.size - 1 )
                var_3[var_7 + 27] = var_3[var_7 + 27] + ",";
        }
    }
    else
    {
        for ( var_5 = 1; var_5 <= 27; var_5 = var_5 + 2 )
            var_3[var_7 + var_5] = "";
    }

    var_7 = var_3.size;
    var_3[var_7] = "s_rec";
    var_3[var_7 + 2] = "s_front";
    var_3[var_7 + 4] = "s_back";
    var_3[var_7 + 6] = "s_mag";
    var_3[var_7 + 8] = "s_over";
    var_3[var_7 + 10] = "s_sco";
    var_3[var_7 + 12] = "s_under";
    var_3[var_7 + 14] = "s_mod";
    var_3[var_7 + 16] = "s_vis";
    var_3[var_7 + 18] = "s_muz";
    var_3[var_7 + 20] = "s_r_grip";
    var_3[var_7 + 22] = "s_trig";
    var_3[var_7 + 24] = "s_ex";
    var_3[var_7 + 26] = "s_oth";

    if ( isdefined( var_2[1] ) )
    {
        var_3[var_7 + 1] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1]._id_12A95 ) );
        var_3[var_7 + 3] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].frontpiece ) );
        var_3[var_7 + 5] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].backpiece ) );
        var_3[var_7 + 7] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].magazine ) );
        var_3[var_7 + 9] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].override ) );
        var_3[var_7 + 11] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].scope ) );
        var_3[var_7 + 13] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].underbarrel ) );
        var_3[var_7 + 15] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].modifier ) );
        var_3[var_7 + 17] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].visual ) );
        var_3[var_7 + 19] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].muzzle ) );
        var_3[var_7 + 21] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].reargrip ) );
        var_3[var_7 + 23] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].trigger ) );
        var_3[var_7 + 25] = scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_2[1].extra ) );
        var_3[var_7 + 27] = "";
        var_8 = var_2[1].others;

        foreach ( var_11, var_10 in var_8 )
        {
            var_3[var_7 + 27] = var_3[var_7 + 27] + scripts\mp\utility\weapon::attachmentmap_tobase( _id_12E50( var_10 ) );

            if ( var_11 < var_8.size - 1 )
                var_3[var_7 + 27] = var_3[var_7 + 27] + ",";
        }
    }
    else
    {
        for ( var_5 = 1; var_5 <= 27; var_5 = var_5 + 2 )
            var_3[var_7 + var_5] = "";
    }

    var_0 dlog_recordplayerevent( "dlog_event_br_inventory_snapshot", var_3 );

    if ( var_1 == "dropbag_used" )
        var_0 dlog_recordplayerevent( "dlog_event_br_dropbag_snapshot", var_3 );
}

destructiblevehiclesetup( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = _branalytics_header( var_0 );
    var_3[var_3.size] = "plunder_spent";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "player_plunder_after_purchase";
    var_3[var_3.size] = var_0.plundercount;
    var_3[var_3.size] = "primary_weapon";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutprimaryfullname );
    var_3[var_3.size] = "secondary_weapon";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutsecondaryfullname );
    var_3[var_3.size] = "primary_equipment";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutequipmentprimary );
    var_3[var_3.size] = "secondary_equipment";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutequipmentsecondary );
    var_3[var_3.size] = "perk_1";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutperks[0] );
    var_3[var_3.size] = "perk_2";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutperks[1] );
    var_3[var_3.size] = "perk_3";
    var_3[var_3.size] = _id_12E4F( var_2.loadoutperks[2] );
    var_0 dlog_recordplayerevent( "dlog_event_br_kiosk_purchase_loadout", var_3 );
}

destructiblecarlightssetup( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_4 = _branalytics_header( var_0 );
    var_4[var_4.size] = "plunder_spent";
    var_4[var_4.size] = _id_12E4E( var_1 );
    var_4[var_4.size] = "player_plunder_after_purchase";
    var_4[var_4.size] = _id_12E4E( var_0.plundercount );
    var_4[var_4.size] = "purchase_type";
    var_4[var_4.size] = var_2;
    var_4[var_4.size] = "item_name";
    var_4[var_4.size] = var_3;
    var_0 dlog_recordplayerevent( "dlog_event_br_kiosk_purchase_item", var_4 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "purchase", var_0.origin, var_0 getentitynumber(), var_3 );
}

destructable_car( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = _branalytics_header( var_0, "kiosk_menu_owner" );
    var_3[var_3.size] = "kiosk_menu_owner_event";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "kiosk_menu_owner_event_param";

    if ( isdefined( var_2 ) )
        var_3[var_3.size] = var_2;
    else
        var_3[var_3.size] = "none";

    var_3[var_3.size] = "kiosk_menu_owner_event_time";
    var_3[var_3.size] = gettime() - level.starttime;
    var_3[var_3.size] = "kiosk_menu_owner_kiosk";

    if ( isdefined( var_0.delay_kick_inactive_player ) )
        var_3[var_3.size] = var_0.delay_kick_inactive_player.index;
    else
        var_3[var_3.size] = -1;

    var_3[var_3.size] = "kiosk_menu_owner_allowed";
    var_3[var_3.size] = istrue( var_0.armorykioskpurchaseallowed );
    var_3[var_3.size] = "kiosk_menu_owner_error";

    if ( var_1 != "menu_close" && !isdefined( var_0.delay_kick_inactive_player ) )
        var_3[var_3.size] = "unexpected_undefined_kiosk";
    else
        var_3[var_3.size] = "none";

    var_0 dlog_recordplayerevent( "dlog_event_br_kiosk_menu_event", var_3 );
}

detonatefxair( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_4 = [];
    var_4[var_4.size] = "extraction_method";
    var_4[var_4.size] = var_1;
    var_4[var_4.size] = "plunder_placed_into_extraction";
    var_4[var_4.size] = var_3;
    var_4[var_4.size] = "extraction_point_x";
    var_4[var_4.size] = var_2[0];
    var_4[var_4.size] = "extraction_point_y";
    var_4[var_4.size] = var_2[1];
    var_4[var_4.size] = "extraction_point_z";
    var_4[var_4.size] = var_2[2];
    var_0 dlog_recordplayerevent( "dlog_event_br_plunder_placed_into_extraction", var_4 );
}

detonatefx( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_5 = [];
    var_5[var_5.size] = "num_depositers";
    var_5[var_5.size] = var_0;
    var_5[var_5.size] = "plunder_extracted";
    var_5[var_5.size] = var_1;
    var_5[var_5.size] = "method";
    var_5[var_5.size] = var_2;
    var_5[var_5.size] = "contains_enemy_plunder";
    var_5[var_5.size] = var_3;
    var_5[var_5.size] = "extraction_origin_x";
    var_5[var_5.size] = var_4[0];
    var_5[var_5.size] = "extraction_origin_y";
    var_5[var_5.size] = var_4[1];
    var_5[var_5.size] = "extraction_origin_z";
    var_5[var_5.size] = var_4[2];
    getentitylessscriptablearray( "dlog_event_br_plunder_extraction_success", var_5 );
}

detonatefunc( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_4 = [];
    var_4[var_4.size] = "plunder_dropped";
    var_4[var_4.size] = var_0;
    var_4[var_4.size] = "method";
    var_4[var_4.size] = var_1;
    var_4[var_4.size] = "extraction_origin_x";
    var_4[var_4.size] = var_2[0];
    var_4[var_4.size] = "extraction_origin_y";
    var_4[var_4.size] = var_2[1];
    var_4[var_4.size] = "extraction_origin_z";
    var_4[var_4.size] = var_2[2];
    var_4[var_4.size] = "destruction_origin_x";
    var_4[var_4.size] = var_3[0];
    var_4[var_4.size] = "destruction_origin_y";
    var_4[var_4.size] = var_3[1];
    var_4[var_4.size] = "destruction_origin_z";
    var_4[var_4.size] = var_3[2];
    getentitylessscriptablearray( "dlog_event_br_plunder_extraction_failure", var_4 );
}

deregisterscriptableinstance( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( isdefined( self ) )
        var_2 = self getentitynumber() + "; " + var_1;
    else
        var_2 = "none; " + var_1;

    var_0 = int( var_0 );

    if ( add_outline() )
        add_object_to_trap_room_ents( "bonusXpDebug", ( 0, 0, 0 ), var_0, var_2 );
}

branalytics_modespecificscore( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    if ( !isdefined( var_2 ) )
        var_2 = "unknown";

    if ( !isdefined( var_1 ) )
        var_1 = 1;

    var_1 = int( var_1 );
    var_0 dlog_recordplayerevent( "dlog_event_player_modescore_earned", [ "player_life_index", var_0.matchdatalifeindex, "player_score_earned", var_1, "score_event", var_2 ] );

    if ( add_outline() )
    {
        if ( isdefined( var_0 ) )
            var_3 = self getentitynumber() + "; " + var_2;
        else
            var_3 = "none; " + var_2;

        add_object_to_trap_room_ents( "modeScore", var_0.origin, var_1, var_3 );
    }
}

dialog_low_health( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = [];
    var_1[var_1.size] = "amount";
    var_1[var_1.size] = 1;
    var_0 dlog_recordplayerevent( "dlog_event_br_summerofaction_record_player_explosive_bow_kill", var_1 );
}

dialog_kill_watcher_civ( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = [];
    var_1[var_1.size] = "weapon_used";
    var_1[var_1.size] = var_0;
    getentitylessscriptablearray( "dlog_event_br_summerofaction_event_chopper_killed", var_1 );
}

detonatingplayer( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_4 = [];
    var_4[var_4.size] = "amount";
    var_4[var_4.size] = var_1;
    var_4[var_4.size] = "ally_collected";
    var_4[var_4.size] = var_2;
    var_4[var_4.size] = "enemy_collected";
    var_4[var_4.size] = var_3;
    var_0 dlog_recordplayerevent( "dlog_event_br_powergrab_player_dogtags_collected", var_4 );
}

detonation_time( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = [];
    var_2[var_2.size] = "level_achieved";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_powergrab_player_reward_level_achieved", var_2 );
}

detonation_color_omnvar_value( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = [];
    var_2[var_2.size] = "amount";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_powergrab_player_highest_extra_lives_reached", var_2 );
}

detonation_code_omnvar_value( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = [];
    var_2[var_2.size] = "amount";
    var_2[var_2.size] = var_1;
    var_0 dlog_recordplayerevent( "dlog_event_br_powergrab_player_extra_lives_used", var_2 );
}

devspectateenemyteam1( var_0, var_1, var_2 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_3 = [];
    var_3[var_3.size] = "amount";
    var_3[var_3.size] = var_0;
    var_3[var_3.size] = "ally_collected";
    var_3[var_3.size] = var_1;
    var_3[var_3.size] = "enemy_collected";
    var_3[var_3.size] = var_2;
    getentitylessscriptablearray( "dlog_event_br_powergrab_squad_total_dogtags_collected", var_3 );
}

devscriptedtests( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = [];
    var_1[var_1.size] = "reward_level_reached";
    var_1[var_1.size] = var_0;
    getentitylessscriptablearray( "dlog_event_br_powergrab_squad_highest_reward_reached", var_1 );
}

devspectateenemyteam2()
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_0 = [];
    var_0[var_0.size] = "amount";
    var_0[var_0.size] = 1;
    getentitylessscriptablearray( "dlog_event_br_powergrab_win_by_exfil", var_0 );
}

dialog_monitor_shieldstow( var_0, var_1 )
{
    if ( scripts\mp\utility\game::getgametype() != "br" )
        return;

    if ( !dialog_monitor_shieldraise() )
        return;

    if ( add_outline() && isdefined( level._id_12855 ) )
        add_pack_camanim( "vehicle", var_0.origin, var_0, var_1 );
}

branalytics_skyhookredeploy( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_1 = _branalytics_header( var_0 );
    var_0 dlog_recordplayerevent( "dlog_event_skyhook_redeploy", var_1 );
}

destroypropspecatehud( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_mission_init", [ "num_missions", var_0, "num_missions_active", var_1, "num_missions_hidden", var_2, "hide_percent", var_3 ] );
}

destorder( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_mission_repopulate", [ "circle_index", var_0, "show_percent", var_1, "num_valid", var_2, "num_shown", var_3 ] );
}

dialog_hurry( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_mission_spawn", [ "id", scripts\engine\utility::ter_op( isdefined( var_0.index ), "" + var_0.index, "invalid" ), "type", var_0._id_139EB, "origin_x", var_0.origin[0], "origin_y", var_0.origin[1], "origin_z", var_0.origin[2] ] );

    if ( add_outline() && isdefined( var_0.index ) )
        add_pack_camanim( "mission", var_0.origin, "" + var_0.index, var_0._id_139EB );
}

destroyscoreevent( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_mission_invalid", [ "id", scripts\engine\utility::ter_op( isdefined( var_0.index ), "" + var_0.index, "invalid" ), "type", var_0._id_139EB, "origin_x", var_0.origin[0], "origin_y", var_0.origin[1], "origin_z", var_0.origin[2] ] );
}

reset_ability_invulnerable( var_0 )
{
    var_1 = 0;

    if ( var_0.questcategory == "blueprintextract" )
    {
        if ( isdefined( var_0.overwatch_soldiers_05_bombers ) )
            var_1 = var_0.overwatch_soldiers_05_bombers;
    }

    return var_1;
}

determinetrackingcirclesize( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    var_2 = [];
    var_3 = scripts\mp\utility\teams::getfriendlyplayers( var_1.team, 1 );
    var_2 = add_pack_modelanim( var_2, var_3 );
    var_2[var_2.size] = "id";
    var_2[var_2.size] = scripts\engine\utility::ter_op( isdefined( var_0._id_11C4E ), var_0._id_11C4E, "invalid" );

    if ( isdefined( level.br_circle ) )
        var_4 = scripts\engine\utility::remove_player_rig_laser_panel( level.br_circle.circleindex );
    else
        var_4 = -1;

    var_2[var_2.size] = "circle_index";
    var_2[var_2.size] = var_4;
    var_2[var_2.size] = "type";
    var_2[var_2.size] = var_0.questcategory;
    var_2[var_2.size] = "blueprint_loot_id";
    var_2[var_2.size] = reset_ability_invulnerable( var_0 );
    var_1 dlog_recordplayerevent( "dlog_event_br_mission_start", var_2 );

    if ( add_outline() && isdefined( var_0._id_11C4E ) )
        dialog_grenade_update( "mission", var_0._id_11C4E, -1 );
}

determinetrackingcircleoffset( var_0, var_1, var_2, var_3 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_mission_end", [ "id", scripts\engine\utility::ter_op( isdefined( var_0._id_11C4E ), var_0._id_11C4E, "invalid" ), "result", scripts\engine\utility::ter_op( isdefined( var_0.result ), var_0.result, "unknown" ), "reward_tier", var_1, "xp", scripts\engine\utility::ter_op( isdefined( var_2["xp"] ), var_2["xp"], 0 ), "weapon_xp", scripts\engine\utility::ter_op( isdefined( var_2["weapon_xp"] ), var_2["weapon_xp"], 0 ), "plunder", scripts\engine\utility::ter_op( isdefined( var_2["plunder"] ), var_2["plunder"], 0 ), "num_teammates_awarded", scripts\engine\utility::ter_op( isdefined( var_3 ), var_3, 0 ), "type", var_0.questcategory, "blueprint_loot_id", reset_ability_invulnerable( var_0 ) ] );

    if ( add_outline() && isdefined( var_0._id_11C4E ) )
    {
        if ( isdefined( var_0.result ) && var_0.result == "success" )
            dialog_grenade_update( "mission", var_0._id_11C4E, var_1 );
        else
            dialog_grenade_update( "mission", var_0._id_11C4E, -1 );
    }
}

dialog_monitor_getoffground( var_0, var_1 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_team_eliminated", [ "team", var_0, "placement", var_1, "survival_time", gettime() - level.starttime ] );
}

devspectatetest( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_public_event_start", [ "type", var_0 ] );
}

devspectateloc( var_0 )
{
    if ( !dialog_monitor_shieldraise() )
        return;

    getentitylessscriptablearray( "dlog_event_br_public_event_end", [ "type", var_0 ] );
}

_branalytics_header( var_0, var_1 )
{
    var_2 = [];

    if ( !isstring( var_1 ) )
        var_1 = "player";

    var_2 = add_pack_fx( var_2, var_0, var_1 );

    if ( isdefined( level.br_circle ) )
        var_3 = scripts\engine\utility::remove_player_rig_laser_panel( level.br_circle.circleindex );
    else
        var_3 = -1;

    var_2[var_2.size] = "circle_index";
    var_2[var_2.size] = var_3;
    return var_2;
}

add_pack_fx( var_0, var_1, var_2 )
{
    if ( !isstring( var_2 ) )
        var_2 = "player";

    var_0[var_0.size] = var_2 + "_x";
    var_0[var_0.size] = var_1.origin[0];
    var_0[var_0.size] = var_2 + "_y";
    var_0[var_0.size] = var_1.origin[1];
    var_0[var_0.size] = var_2 + "_z";
    var_0[var_0.size] = var_1.origin[2];
    var_0[var_0.size] = var_2 + "_pitch";
    var_0[var_0.size] = scripts\engine\utility::getplayerpitch( var_1 );
    var_0[var_0.size] = var_2 + "_yaw";
    var_0[var_0.size] = scripts\engine\utility::getplayeryaw( var_1 );
    return var_0;
}

add_pack_modelanim( var_0, var_1 )
{
    var_0[var_0.size] = "living_player_pos";
    var_2 = [];

    foreach ( var_4 in var_1 )
    {
        var_2[var_2.size] = "x";
        var_2[var_2.size] = var_4.origin[0];
        var_2[var_2.size] = "y";
        var_2[var_2.size] = var_4.origin[1];
        var_2[var_2.size] = "z";
        var_2[var_2.size] = var_4.origin[2];
        var_2[var_2.size] = "pitch";
        var_2[var_2.size] = scripts\engine\utility::getplayerpitch( var_4 );
        var_2[var_2.size] = "yaw";
        var_2[var_2.size] = scripts\engine\utility::getplayeryaw( var_4 );
    }

    var_0[var_0.size] = var_2;
    return var_0;
}

_id_12E4F( var_0 )
{
    if ( isdefined( var_0 ) )
        return var_0;
    else
        return "empty";
}

_id_12E50( var_0 )
{
    if ( isdefined( var_0 ) )
        return var_0;
    else
        return "";
}

_id_12E51( var_0 )
{
    if ( isdefined( var_0 ) )
        return var_0.basename;
    else
        return "empty";
}

_id_12E4E( var_0 )
{
    if ( isdefined( var_0 ) )
        return var_0;
    else
        return 0;
}

_id_12E53( var_0, var_1 )
{
    if ( !isdefined( var_1 ) || var_1 <= 0 )
        return var_0 / 1;
    else
        return var_0 / var_1;
}

destroy_lmgs()
{
    if ( add_outline() )
    {
        if ( isdefined( level.kothtotaltime["vehicle"] ) )
        {
            foreach ( var_1 in level.kothtotaltime["vehicle"] )
            {
                if ( !isdefined( var_1.ent ) )
                {
                    var_1.state = 1;
                    continue;
                }

                if ( distancesquared( var_1.origin, var_1.ent.origin ) > squared( 1000 ) )
                    var_1.state = 1;
            }
        }

        if ( isdefined( level.br_armory_kiosk ) )
        {
            foreach ( var_4 in level.br_armory_kiosk.scriptables )
            {
                if ( istrue( var_4.visible ) )
                {
                    analyticswritecsv( var_4.origin, "kiosk", 1, 0, "" );
                    continue;
                }

                analyticswritecsv( var_4.origin, "kiosk", 0, 0, "" );
            }
        }

        if ( isdefined( level.br_level ) && isdefined( level.br_level.default_class_chosen ) )
        {
            var_6 = level.br_level.default_class_chosen.size - 1;
            var_7 = 0;

            for ( var_8 = 0; var_8 < var_6; var_8++ )
            {
                var_9 = level.br_level.default_class_chosen[var_8 + 1];
                var_10 = level.br_level.br_circleradii[var_8 + 1];
                var_11 = level.br_level.br_circledelaytimes[var_8];
                var_12 = level.br_level.br_circleclosetimes[var_8];
                var_7 = var_7 + var_11 + var_12;
                analyticswritecsv( var_9, "circle", int( var_10 ), int( var_7 ), "" );
            }
        }

        foreach ( var_14 in level.kothtotaltime )
        {
            foreach ( var_16 in var_14 )
                analyticswritecsv( var_16.origin, var_16.type, var_16.state, var_16.time, var_16.data );
        }
    }

    objective_setspecialobjectivedisplay();
}

teamvehicles()
{
    level.get_vehicle_driver_hint_string_func = [];
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "loot";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "mission";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "combat";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "cache";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "cache_legendary";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "cache_scavenger";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "loot_chopper";
    level.get_vehicle_driver_hint_string_func[level.get_vehicle_driver_hint_string_func.size] = "c130_box";
    level.get_veh_spawn_test_spawners = [];

    foreach ( var_1 in level.teamnamelist )
    {
        var_2 = spawnstruct();
        var_2.sources = [];
        var_2._id_13BF0 = [];

        foreach ( var_4 in level.get_vehicle_driver_hint_string_func )
        {
            var_2.sources[var_4] = 0;
            var_2._id_13BF0[var_4] = 0;
        }

        level.get_veh_spawn_test_spawners[var_1] = var_2;
    }

    level waittill( "prematch_done" );
    level thread _id_12AA6();
}

_id_12AA6()
{
    for ( var_0 = 60.0; !istrue( level.gameended ); var_0 = max( 60.0 - var_12, 0 ) )
    {
        level scripts\engine\utility::waittill_notify_or_timeout( "game_ended", var_0 );
        var_1 = gettime();
        var_2 = scripts\mp\gamescore::run_common_functions_stealth();

        foreach ( var_4 in level.teamnamelist )
        {
            if ( level scripts\mp\utility\game::vehicle_collision_ignorefuturemultievent( var_4 ) )
                continue;

            if ( !isdefined( var_4 ) )
                continue;

            var_5 = scripts\mp\matchdata::gettimefrommatchstart( gettime() );
            var_6 = [];
            var_6[var_6.size] = "match_complete";
            var_6[var_6.size] = 0;
            var_6[var_6.size] = "time";
            var_6[var_6.size] = var_5;
            var_6[var_6.size] = "team";
            var_6[var_6.size] = var_4;
            var_6[var_6.size] = "placement";
            var_6[var_6.size] = var_2[var_4];

            foreach ( var_8 in level.get_vehicle_driver_hint_string_func )
            {
                var_9 = level.get_veh_spawn_test_spawners[var_4].sources[var_8];
                var_6[var_6.size] = "cash_source_" + var_8;
                var_6[var_6.size] = var_9;
                level.get_veh_spawn_test_spawners[var_4]._id_13BF0[var_8] = level.get_veh_spawn_test_spawners[var_4]._id_13BF0[var_8] + var_9;
                level.get_veh_spawn_test_spawners[var_4].sources[var_8] = 0;
            }

            getentitylessscriptablearray( "dlog_event_blood_money_interval", var_6 );
            waitframe();
        }

        var_12 = ( gettime() - var_1 ) * 0.001;
    }

    var_5 = scripts\mp\matchdata::gettimefrommatchstart( gettime() );
    var_2 = scripts\mp\gamescore::run_common_functions_stealth();

    foreach ( var_4 in level.teamnamelist )
    {
        if ( level scripts\mp\utility\game::vehicle_collision_ignorefuturemultievent( var_4 ) )
            continue;

        var_6 = [];
        var_6[var_6.size] = "match_complete";
        var_6[var_6.size] = 1;
        var_6[var_6.size] = "time";
        var_6[var_6.size] = var_5;
        var_6[var_6.size] = "team";
        var_6[var_6.size] = var_4;
        var_6[var_6.size] = "placement";
        var_6[var_6.size] = var_2[var_4];

        foreach ( var_8 in level.get_vehicle_driver_hint_string_func )
        {
            var_9 = level.get_veh_spawn_test_spawners[var_4]._id_13BF0[var_8];
            var_6[var_6.size] = "cash_source_" + var_8;
            var_6[var_6.size] = var_9;
        }

        getentitylessscriptablearray( "dlog_event_blood_money_interval", var_6 );
    }
}

_id_13C44( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_0.team ) )
        return;

    if ( add_outline() )
        add_object_to_trap_room_ents( "plunder_award", var_0.origin, var_2, var_0.team + "; " + var_0 getentitynumber() + "; " + var_1 );

    if ( !isdefined( level.get_veh_spawn_test_spawners ) )
        return;

    var_3 = var_0.team;
    level.get_veh_spawn_test_spawners[var_3].sources[var_1] = level.get_veh_spawn_test_spawners[var_3].sources[var_1] + var_2;
}

_id_1205B()
{
    thread allowed_objectives();
}

allowed_objectives()
{
    waittillframeend;
    var_0 = level.disable_super_in_turret.name;
    var_1 = scripts\engine\utility::remove_player_rig_laser_panel( level.maxteamsize );
    var_2 = scripts\engine\utility::remove_player_rig_laser_panel( level.players.size );
    var_3 = scripts\engine\utility::remove_player_rig_laser_panel( level.teamswithplayers.size );
    var_4 = 0;

    foreach ( var_6 in level.players )
    {
        if ( isbot( var_6 ) || var_6 calloutmarkerping_getent() )
            continue;

        var_4++;
    }

    if ( isdefined( level.br_armory_kiosk ) )
        var_8 = scripts\engine\utility::remove_player_rig_laser_panel( level.br_armory_kiosk._id_13AC2 );
    else
        var_8 = 0;

    var_9 = scripts\engine\utility::remove_player_rig_laser_panel( level.usegulag );

    if ( isdefined( level.gulag ) )
    {
        var_10 = scripts\engine\utility::remove_player_rig_laser_panel( level.gulag.maxuses );
        var_11 = scripts\engine\utility::remove_player_rig_laser_panel( level.gulag._id_11F2D );
        var_12 = scripts\engine\utility::remove_player_rig_laser_panel( level.gulag._id_13672 );
    }
    else
    {
        var_10 = 0;
        var_11 = 0;
        var_12 = 0;
    }

    var_13 = [];

    if ( isdefined( level.questinfo ) )
    {
        foreach ( var_16, var_15 in level.questinfo.tabletinfo )
        {
            var_13[var_13.size] = "name";
            var_13[var_13.size] = var_16;
            var_13[var_13.size] = "is_enabled";
            var_13[var_13.size] = isdefined( var_15 ) && istrue( var_15.enabled );
        }
    }

    var_17 = scripts\engine\utility::remove_player_rig_laser_panel( getplaylistid() );

    if ( isdefined( level._id_12855 ) )
        var_18 = level._id_12855;
    else
        var_18 = -1;

    var_19 = _func_042D();
    getentitylessscriptablearray( "dlog_event_br_server_match_start", [ "br_mission_type_info", var_13, "map", level.script, "sub_game_type", var_0, "max_team_size", var_1, "player_count", var_2, "human_player_count", var_4, "team_count", var_3, "kiosk_respawn_cost", var_8, "gulag_active", var_9, "gulag_max_uses", var_10, "gulag_starting_armor", var_11, "gulag_spawn_loot", var_12, "prematch_end_time", var_18, "playlist_id", var_17, "playlist_name", var_19 ] );
}
