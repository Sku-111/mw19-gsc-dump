// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

thermite_damage_over_time()
{
    scripts\engine\scriptable::scriptable_addusedcallback( ::scriptable_used );
    scripts\engine\scriptable::_id_12F5A( ::_id_12F64 );
    waitframe();
    all_players_skip_last_stand();
    ally_initial_spawners();
    allownvgsatmatchstart();
    activenumber();
    thread _id_144CE();
    thread apc_rus_monitordriverturretfire();
}

all_players_skip_last_stand()
{
    var_0 = [];
    var_0[var_0.size] = allow_nvgs( "bdg_button1", "scr_switch_1_targets", "bdg_timer1", "set1", "bdg_light1" );
    var_0[var_0.size] = allow_nvgs( "bdg_button2", "scr_switch_1_targets", "bdg_timer1", "set1", "bdg_light2" );
    var_0[var_0.size] = allow_nvgs( "bdg_button3", "scr_switch_1_targets", "bdg_timer1", "set1", "bdg_light3" );
    var_0[var_0.size] = allow_nvgs( "bdg_button4", "scr_switch_1_targets", "bdg_timer1", "set1", "bdg_light4" );
    var_0[var_0.size] = allow_nvgs( "bdg_button5", "scr_switch_1_targets", "bdg_timer1", "set1", "bdg_light5" );
    var_0[var_0.size] = allow_nvgs( "bdg_button6", "scr_switch_6_targets", undefined, undefined, undefined, 2.5 );
    var_0[var_0.size] = allow_nvgs( "bdg_button7", "scr_switch_7_targets", undefined, undefined, undefined, 2.5 );
    var_1 = [];
    var_1[var_1.size] = allow_offhand_throwback( "bdg_timer1", "bdg_escdoor=false,bdg_redepdoor=false", 30 );

    foreach ( var_3 in var_0 )
    {
        var_4 = getentitylessscriptablearrayinradius( var_3.name, "script_noteworthy" );

        foreach ( var_6 in var_4 )
        {
            var_6._id_13A7B = var_3._id_13A7B;

            if ( isdefined( var_3.timer ) )
            {
                var_7 = getentitylessscriptablearrayinradius( var_3.timer, "script_noteworthy", var_6.position, 1200 );

                if ( isdefined( var_7 ) )
                    var_6.timer = var_7[0];
            }

            var_6.flightyaw = var_3.flightyaw;
            var_6.stack_patch_waittill_context = var_3.stack_patch_waittill_context;
            var_6._id_12029 = var_3._id_12029;

            if ( isdefined( var_3.light ) )
            {
                var_8 = getentitylessscriptablearrayinradius( var_3.light, "script_noteworthy", var_6.position, 1200 );

                if ( isdefined( var_8 ) )
                    var_6.light = var_8[0];
            }
        }
    }

    foreach ( var_12 in var_1 )
    {
        var_4 = getentitylessscriptablearrayinradius( var_12.name, "script_noteworthy" );

        foreach ( var_6 in var_4 )
        {
            var_6._id_12C7E = var_12._id_12C7E;
            var_6.timeout = var_12.timeout;
            var_6.lights = [];
        }
    }
}

apc_rus_monitordriverturretfire()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "gulag_begin_new_fight", var_0 );
        var_1 = getdvarint( "scr_escape_route_chance", "4" );

        if ( randomint( 100 ) < var_1 )
            thread activeintelchallengekeys( var_0 );
    }
}

recentghostridekillcount( var_0, var_1, var_2 )
{
    if ( !isdefined( var_1 ) )
        var_1 = var_0.origin;

    if ( !isdefined( var_2 ) )
        var_2 = 1200;

    var_3 = getentitylessscriptablearrayinradius( "scriptable_scriptable_door_button", "classname", var_1, var_2 );
    var_4 = [];

    foreach ( var_6 in var_3 )
    {
        if ( isdefined( var_6.timer ) && var_6.timer == var_0 )
            var_4[var_4.size] = var_6;
    }

    return var_4;
}

processcashpileovertimemultiplier( var_0, var_1, var_2 )
{
    var_3 = [];

    if ( isdefined( var_0 ) && isdefined( var_0._id_13A7B ) && isdefined( level.set_relic_martyrdom[var_0._id_13A7B] ) )
    {
        if ( !isdefined( var_1 ) )
            var_1 = var_0.origin;

        if ( !isdefined( var_2 ) )
            var_2 = 1200;

        var_4 = level.set_relic_martyrdom[var_0._id_13A7B];

        foreach ( var_6 in var_4 )
        {
            var_7 = getentitylessscriptablearrayinradius( var_6, "script_noteworthy", var_1, var_2 );

            foreach ( var_9 in var_7 )
                var_3[var_3.size] = var_9;
        }
    }

    return var_3;
}

activeintelchallengekeys( var_0 )
{
    var_1 = var_0.origin;
    var_2 = getentitylessscriptablearrayinradius( "bdg_escdoor", "script_noteworthy", var_1, 1200 );

    if ( isdefined( var_2.size ) & var_2.size > 0 )
        var_2 = var_2[0];
    else
        return;

    ammobox_tryuse( var_2, 1 );
    var_3 = getentitylessscriptablearrayinradius( "scriptable_status_light", "classname", var_1, 1200 );

    foreach ( var_5 in var_3 )
        var_5 setscriptablepartstate( "light", "active" );

    var_7 = getentitylessscriptablearrayinradius( "scriptable_gulag_timer", "classname", var_1, 1200 );

    if ( isdefined( var_7 ) && isdefined( var_7[0] ) )
    {
        var_7 = var_7[0];
        var_8 = recentghostridekillcount( var_7, var_1 );

        foreach ( var_10 in var_8 )
            var_10.stack_patch_waittill_context = 0;

        if ( var_7 getscriptablepartstate( "timer" ) != "on" )
        {
            var_7 setscriptablepartstate( "timer", "on" );
            wait( var_7.timeout );
            var_7 setscriptablepartstate( "timer", "off" );
            ammobox_canweaponacceptmoreattachments( var_7 );

            foreach ( var_5 in var_3 )
                var_5 setscriptablepartstate( "light", "inactive" );

            foreach ( var_10 in var_8 )
                var_10.stack_patch_waittill_context = 1;
        }
    }
}

allow_nvgs( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = spawnstruct();
    var_6.name = var_0;
    var_6._id_13A7B = var_1;
    var_6.timer = var_2;
    var_6.flightyaw = var_3;
    var_6.light = var_4;
    var_6.stack_patch_waittill_context = 0;
    var_6._id_12029 = var_5;
    return var_6;
}

allow_offhand_throwback( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    var_3.name = var_0;
    var_3._id_12C7E = var_1;
    var_3.timeout = var_2;
    return var_3;
}

ally_initial_spawners()
{
    var_0 = getentitylessscriptablearrayinradius( "scriptable_gulag_timer", "classname" );

    foreach ( var_2 in var_0 )
    {
        var_3 = getentitylessscriptablearrayinradius( "scriptable_scriptable_door_button", "classname", var_2.position, 1200 );
        var_4 = [];

        foreach ( var_6 in var_3 )
        {
            var_7 = var_6.flightyaw;

            if ( !isdefined( var_7 ) )
                continue;

            if ( !isdefined( var_4[var_7] ) )
                var_4[var_7] = [];

            var_4[var_7][var_4[var_7].size] = var_6;
        }

        foreach ( var_10 in var_4 )
        {
            for ( var_11 = 0; var_11 < var_10.size; var_11++ )
            {
                var_10[var_11].enabled = 0;
                var_10[var_11].stack_patch_waittill_context = 1;
            }

            var_12 = randomintrange( 0, var_10.size );
            var_10[var_12].enabled = 1;
        }
    }
}

activenumber()
{
    var_0 = getentitylessscriptablearrayinradius( "bdg_timer1", "script_noteworthy" );

    foreach ( var_2 in var_0 )
        ammobox_canweaponacceptmoreattachments( var_2 );
}

allassassin_initteamlist( var_0 )
{
    if ( isdefined( var_0._id_1202A ) && var_0._id_1202A == 1 )
        return 1;

    return 0;
}

analytics_init( var_0, var_1 )
{
    if ( allassassin_initteamlist( var_0 ) )
        return;

    var_0._id_1202A = 1;
    wait( var_1 );
    ammobox_tryuse( var_0, 0 );
    var_0._id_1202A = 0;
}

ammobox_canweaponacceptmoreattachments( var_0 )
{
    level.set_relic_mythic = [];

    if ( !isdefined( var_0._id_12C7E ) )
        return;

    var_1 = strtok( var_0._id_12C7E, "," );
    var_2 = [];

    foreach ( var_4 in var_1 )
    {
        var_5 = strtok( var_4, "=" );

        if ( var_5[1] == "true" )
        {
            var_2[var_2.size] = [ var_5[0], 1 ];
            continue;
        }

        var_2[var_2.size] = [ var_5[0], 0 ];
    }

    foreach ( var_4 in var_2 )
    {
        var_8 = var_4[0];
        var_9 = var_4[1];

        if ( isdefined( var_0 ) )
            var_1 = getentitylessscriptablearrayinradius( var_8, "script_noteworthy", var_0.position, 1200 );
        else
            var_1 = getentitylessscriptablearrayinradius( var_8, "script_noteworthy" );

        foreach ( var_11 in var_1 )
        {
            var_12 = aigroundturret_dismountcompleted( var_11 );

            if ( var_12 != var_9 )
                ammobox_tryuse( var_11, var_9 );
        }
    }
}

allownvgsatmatchstart()
{
    var_0 = getdvar( "scr_switch_1_targets", "bdg_redepdoor" );
    var_1 = strtok( var_0, "," );
    level.set_relic_martyrdom["scr_switch_1_targets"] = var_1;
    var_2 = getdvar( "scr_switch_2_targets", "door1" );
    var_1 = strtok( var_2, "," );
    level.set_relic_martyrdom["scr_switch_2_targets"] = var_1;
    var_3 = getdvar( "scr_switch_3_targets", "door2,door3" );
    var_1 = strtok( var_3, "," );
    level.set_relic_martyrdom["scr_switch_3_targets"] = var_1;
    var_4 = getdvar( "scr_switch_6_targets", "bdg_vent1,bdg_vent2" );
    var_1 = strtok( var_4, "," );
    level.set_relic_martyrdom["scr_switch_6_targets"] = var_1;
    var_5 = getdvar( "scr_switch_7_targets", "bdg_vent1,bdg_vent2" );
    var_1 = strtok( var_5, "," );
    level.set_relic_martyrdom["scr_switch_7_targets"] = var_1;
}

aigroundturret_dismountcompleted( var_0 )
{
    var_1 = var_0.set_relic_mythic;

    if ( !isdefined( var_1 ) )
    {
        if ( var_0 scriptableisdoor() )
            var_1 = !var_0 scriptabledoorisclosed();
        else
        {
            var_2 = var_0 getscriptablepartstate( "vent_steam" );

            if ( isdefined( var_2 ) )
                var_1 = var_2 == "active";
        }
    }

    return var_1;
}

ammobox_tryuse( var_0, var_1 )
{
    var_0.set_relic_mythic = var_1;

    if ( var_0 scriptableisdoor() )
    {
        if ( var_1 )
            var_0 constraintoscriptgoalradius();
        else
            var_0 vehicle_getinputvalue();
    }
    else
    {
        var_2 = var_0 getscriptablepartstate( "vent_steam" );

        if ( isdefined( var_2 ) )
        {
            if ( var_1 )
                var_0 setscriptablepartstate( "vent_steam", "active" );
            else
                var_0 setscriptablepartstate( "vent_steam", "idle" );
        }
    }
}

any_player_in_laststand( var_0 )
{
    var_1 = aigroundturret_dismountcompleted( var_0 );

    if ( isdefined( var_1 ) )
        ammobox_tryuse( var_0, !var_1 );
}

_id_12F64( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    if ( var_2.classname == "scriptable_scriptable_door_button" )
        scriptable_used( var_2, "button", "usable", var_1, 0 );
}

scriptable_used( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_0.classname == "scriptable_scriptable_door_button" )
    {
        if ( var_0.stack_patch_waittill_context == 1 )
            return;

        if ( isdefined( var_0.enabled ) && var_0.enabled == 0 )
        {
            if ( isdefined( var_0.light ) && var_0.light getscriptablepartstate( "light" ) != "negative" )
                var_0.light setscriptablepartstate( "light", "negative" );

            return;
        }

        var_5 = processcashpileovertimemultiplier( var_0 );

        foreach ( var_7 in var_5 )
        {
            var_2 = aigroundturret_dismountcompleted( var_7 );

            if ( !allassassin_initteamlist( var_7 ) )
            {
                ammobox_tryuse( var_7, !var_2 );

                if ( isdefined( var_0._id_12029 ) )
                    thread analytics_init( var_7, var_0._id_12029 );
            }
        }

        if ( var_5.size > 0 )
        {
            var_0 setscriptablepartstate( var_1, "wait" );

            if ( isdefined( var_0.light ) && var_0.light getscriptablepartstate( "light" ) != "positive" )
                var_0.light setscriptablepartstate( "light", "positive" );
        }
    }
}

_id_144CE()
{
    self endon( "death_or_disconnect" );

    for (;;)
    {
        var_0 = scripts\engine\utility::getent_or_struct( "bdg_esctrigger", "script_noteworthy" );

        if ( isdefined( var_0 ) )
        {
            var_0 waittill( "trigger", var_1 );

            if ( var_1 == level.player )
                var_1 _id_12AB1();

            waitframe();
        }

        wait 0.05;
    }
}

_id_12AB1()
{
    if ( !isdefined( self.arena ) )
    {
        var_0 = scripts\mp\gametypes\br_gulag.gsc::playergetnextarena();
        self.arena = var_0;
    }

    if ( isalive( self ) && scripts\mp\gametypes\br_public.gsc::updateinstantclassswapallowedinternal() )
        thread scripts\mp\gametypes\br_gulag.gsc::_id_12642( self, "debug" );
}
