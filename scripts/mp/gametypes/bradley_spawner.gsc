// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

inittankspawnsplaced()
{
    if ( getdvarint( "scr_allow_vehicles", 0 ) <= 0 )
        return;

    var_0 = scripts\engine\utility::getstructarray( "veh_bromeo_neutral", "targetname" );
    var_1 = scripts\engine\utility::getstructarray( "veh_bromeo_allies", "targetname" );
    var_2 = scripts\engine\utility::getstructarray( "veh_bromeo_axis", "targetname" );
    level.tanktimeoutlist = [];
    spawntanks( var_0 );
    spawntanks( var_1, "allies" );
    spawntanks( var_2, "axis" );
    level thread monitortimeout();
}

monitortimeout()
{
    level endon( "game_ended" );

    for (;;)
    {
        monitortimeoutupdate();
        wait 0.05;
    }
}

monitortimeoutupdate()
{
    level.tanktimeoutlist = scripts\engine\utility::array_removeundefined( level.tanktimeoutlist );

    foreach ( var_1 in level.tanktimeoutlist )
    {
        var_2 = scripts\cp_mp\vehicles\vehicle_occupancy::vehicle_occupancy_getalloccupants( var_1 );
        var_3 = isdefined( var_2 ) && var_2.size > 0;

        if ( !isdefined( var_1.timeoutwasoccupied ) )
        {
            if ( var_3 )
                var_1.timeoutwasoccupied = 1;

            continue;
        }

        if ( isdefined( var_1.timeouttime ) )
        {
            if ( var_3 )
                var_1.timeouttime = undefined;
            else if ( var_1.timeouttime <= gettime() )
                var_1 thread scripts\cp_mp\vehicles\light_tank::light_tank_explode();

            continue;
        }

        if ( !var_3 )
            var_1.timeouttime = gettime() + var_1.script_timeout * 1000;
    }
}

monitoradd( var_0, var_1 )
{
    var_0.script_timeout = var_1;
    level.tanktimeoutlist[level.tanktimeoutlist.size] = var_0;
}

spawntanks( var_0, var_1 )
{
    level endon( "game_ended" );
    wait 0.05;

    foreach ( var_3 in var_0 )
    {
        if ( !isdefined( var_3.angles ) )
            var_3.angles = ( 0, 0, 0 );

        var_4 = scripts\engine\utility::ter_op( isdefined( var_3.script_force_count ), var_3.script_force_count, 0 );
        var_5 = scripts\engine\utility::ter_op( isdefined( var_3.script_timeout ), var_3.script_timeout, 0 );
        level thread spawntankandmonitor( var_3.origin, var_3.angles, var_1, var_4, var_5 );
    }
}

spawntankandmonitor( var_0, var_1, var_2, var_3, var_4 )
{
    level endon( "game_ended" );
    var_5 = spawntank( var_0, var_1, var_2, var_4, 0 );

    if ( var_3 )
    {
        for (;;)
        {
            var_5 waittill( "death" );
            wait 3.0;
            var_5 = spawntank( var_0, var_1, var_2, var_4, 1 );
        }
    }
}

spawntank( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawnstruct();
    scripts\cp_mp\vehicles\light_tank::light_tank_initializespawndata( var_5 );
    var_5.cantimeout = 0;
    var_5.spawnmethod = scripts\engine\utility::ter_op( istrue( var_4 ), "airdrop_at_position_unsafe", "place_at_position_unsafe" );
    var_5.origin = var_0;
    var_5.angles = var_1;
    var_5.team = var_2;
    var_6 = scripts\cp_mp\vehicles\light_tank::light_tank_spawn( var_5 );

    if ( var_3 > 0 )
        monitoradd( var_6, var_3 );

    return var_6;
}

inittankspawns()
{
    level.tankstartspawnallies = scripts\engine\utility::getstructarray( "tdm_bradley_allies", "targetname" );
    level.tankstartspawnaxis = scripts\engine\utility::getstructarray( "tdm_bradley_axis", "targetname" );
    level.tankstartspawnneutral = scripts\engine\utility::getstructarray( "tdm_bradley_neutral", "targetname" );
    level.tankstartspawnalliesdom = scripts\engine\utility::getstructarray( "dom_bradley_allies", "targetname" );
    level.tankstartspawnaxisdom = scripts\engine\utility::getstructarray( "dom_bradley_axis", "targetname" );
    level.tankspawndom_a = scripts\engine\utility::getstructarray( "dom_bradley_a", "targetname" );
    level.tankspawndom_b = scripts\engine\utility::getstructarray( "dom_bradley_b", "targetname" );
    level.tankspawndom_c = scripts\engine\utility::getstructarray( "dom_bradley_c", "targetname" );
    level.tankstartspawnalliescmd = scripts\engine\utility::getstructarray( "cmd_bradley_allies", "targetname" );
    level.tankstartspawnaxiscmd = scripts\engine\utility::getstructarray( "cmd_bradley_axis", "targetname" );
    level.tankspawncmd_2 = scripts\engine\utility::getstructarray( "cmd_bradley_2", "targetname" );
    level.tankspawncmd_3 = scripts\engine\utility::getstructarray( "cmd_bradley_3", "targetname" );
    level.tankspawncmd_1 = scripts\engine\utility::getstructarray( "cmd_bradley_1", "targetname" );

    if ( getdvarint( "scr_bradley_spawner", 0 ) == 0 )
        return;

    var_0 = [ "cmd", "dom", "war", "arm" ];
    var_1 = scripts\engine\utility::array_find( var_0, scripts\mp\utility\game::getgametype() );

    if ( !isdefined( var_1 ) )
        var_1 = var_0.size;

    for ( var_2 = var_1; var_2 < var_0.size; var_2++ )
    {
        var_3 = var_0[var_2];

        if ( var_3 == "war" )
        {
            if ( level.tankstartspawnallies.size != 0 || level.tankstartspawnaxis.size != 0 || level.tankstartspawnneutral.size != 0 )
            {
                spawnstartingbradleystdm();

                if ( level.tankstartspawnneutral.size != 0 )
                    thread kickoffneutralbradleyspawnstdm();

                break;
            }
        }
        else if ( var_3 == "dom" )
        {
            if ( level.tankstartspawnalliesdom.size != 0 || level.tankstartspawnaxisdom.size != 0 || level.tankspawndom_a.size != 0 || level.tankspawndom_b.size != 0 || level.tankspawndom_c.size != 0 )
            {
                thread kickoffneutralbradleyspawnsdom();
                break;
            }
        }
        else if ( var_3 == "cmd" )
        {
            if ( level.tankstartspawnalliescmd.size != 0 || level.tankstartspawnaxiscmd.size != 0 || level.tankspawncmd_1.size != 0 || level.tankspawncmd_2.size != 0 || level.tankspawncmd_3.size != 0 )
            {
                spawnstartingbradleyscmd();
                break;
            }
        }
    }
}

spawnstartingbradleystdm()
{
    if ( level.tankstartspawnallies.size != 0 && level.tankstartspawnaxis.size != 0 )
    {
        var_0 = ( 0, 0, 0 );

        if ( isdefined( level.tankstartspawnallies[0].angles ) )
            var_0 = level.tankstartspawnallies[0].angles;

        thread spawnbradleynoduration( level.tankstartspawnallies[0].origin, var_0, "allies" );
        var_0 = ( 0, 0, 0 );

        if ( isdefined( level.tankstartspawnaxis[0].angles ) )
            var_0 = level.tankstartspawnaxis[0].angles;

        thread spawnbradleynoduration( level.tankstartspawnaxis[0].origin, var_0, "axis" );
    }
}

spawnstartingbradleysdom()
{
    if ( level.tankstartspawnalliesdom.size != 0 && level.tankstartspawnaxisdom.size != 0 )
    {
        var_0 = ( 0, 0, 0 );
        var_1 = ( 0, 0, 0 );
        var_2 = ( 0, 0, 0 );
        var_3 = ( 0, 0, 0 );

        if ( isdefined( level.tankstartspawnalliesdom[0].angles ) )
            var_0 = level.tankstartspawnalliesdom[0].angles;

        var_1 = level.tankstartspawnalliesdom[0].origin;

        if ( isdefined( level.tankstartspawnaxisdom[0].angles ) )
            var_2 = level.tankstartspawnaxisdom[0].angles;

        var_3 = level.tankstartspawnaxisdom[0].origin;

        if ( game["switchedsides"] )
        {
            thread spawnbradleynoduration( var_3, var_2, "allies" );
            thread spawnbradleynoduration( var_1, var_0, "axis" );
        }
        else
        {
            thread spawnbradleynoduration( var_3, var_2, "axis" );
            thread spawnbradleynoduration( var_1, var_0, "allies" );
        }
    }
}

spawnstartingbradleyscmd()
{
    if ( level.tankstartspawnalliescmd.size != 0 && level.tankstartspawnaxiscmd.size != 0 )
    {
        var_0 = ( 0, 0, 0 );

        if ( isdefined( level.tankstartspawnalliescmd[0].angles ) )
            var_0 = level.tankstartspawnalliescmd[0].angles;

        thread spawnbradleynoduration( level.tankstartspawnalliescmd[0].origin, var_0, "allies" );
        var_0 = ( 0, 0, 0 );

        if ( isdefined( level.tankstartspawnaxiscmd[0].angles ) )
            var_0 = level.tankstartspawnaxiscmd[0].angles;

        thread spawnbradleynoduration( level.tankstartspawnaxiscmd[0].origin, var_0, "axis" );
    }
}

kickoffneutralbradleyspawnstdm()
{
    level endon( "game_ended" );
    wait 12;
    var_0 = scripts\engine\utility::random( level.tankstartspawnneutral );
    var_1 = ( 0, 0, 0 );

    if ( isdefined( var_0.angles ) )
        var_1 = var_0.angles;

    thread spawnbradleynoduration( var_0.origin, var_1 );
    var_2 = scripts\mp\utility\game::gettimelimit();
    var_3 = var_2 / 3;
    var_4 = max( var_3, 180 );
    var_4 = min( var_4, 240 );

    for (;;)
    {
        wait( var_4 );

        if ( scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_getgameinstances( "light_tank" ).size < 2 )
        {
            var_0 = selectneutralspawn();
            thread spawnbradleynoduration( var_0.origin, var_0.angles );
        }
    }
}

kickoffneutralbradleyspawnsdom()
{
    level endon( "game_ended" );
    wait 60;
    var_0 = scripts\mp\utility\game::gettimelimit();
    var_1 = var_0 / 3;
    var_2 = max( var_1, 180 );
    var_2 = min( var_2, 240 );

    for (;;)
    {
        wait( var_2 );

        if ( scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_getgameinstances( "light_tank" ).size < 2 )
        {
            var_3 = selectdomspawn();

            if ( !isdefined( var_3 ) )
                var_3 = delayspawnuntilpointcap();

            spawndombradley( var_3 );
        }
    }
}

spawndombradley( var_0 )
{
    if ( var_0.objectivekey == "_a" )
        var_1 = scripts\engine\utility::random( level.tankspawndom_a );
    else if ( var_0.objectivekey == "_b" )
        var_1 = scripts\engine\utility::random( level.tankspawndom_b );
    else
        var_1 = scripts\engine\utility::random( level.tankspawndom_c );

    if ( isdefined( var_1 ) )
    {
        var_2 = ( 0, 0, 0 );

        if ( isdefined( var_1.angles ) )
            var_2 = var_1.angles;

        thread spawnbradleynoduration( var_1.origin, var_2 );
    }
}

tryspawnneutralbradleycmd( var_0 )
{
    if ( scripts\cp_mp\vehicles\vehicle_tracking::vehicle_tracking_getgameinstances( "light_tank" ).size < 2 )
    {
        if ( var_0 == 1 )
        {
            if ( level.tankspawncmd_1.size != 0 )
            {
                var_1 = ( 0, 0, 0 );
                var_2 = scripts\engine\utility::random( level.tankspawncmd_1 );

                if ( isdefined( var_2.angles ) )
                    var_1 = var_2.angles;

                thread spawnbradleynoduration( var_2.origin, var_1, "allies" );
            }
        }
        else if ( var_0 == 2 )
        {
            if ( level.tankspawncmd_2.size != 0 )
            {
                var_1 = ( 0, 0, 0 );
                var_2 = scripts\engine\utility::random( level.tankspawncmd_2 );

                if ( isdefined( var_2.angles ) )
                    var_1 = var_2.angles;

                thread spawnbradleynoduration( var_2.origin, var_1, "allies" );
            }
        }
        else if ( var_0 == 3 )
        {
            if ( level.tankspawncmd_3.size != 0 )
            {
                var_1 = ( 0, 0, 0 );
                var_2 = scripts\engine\utility::random( level.tankspawncmd_3 );

                if ( isdefined( var_2.angles ) )
                    var_1 = var_2.angles;

                thread spawnbradleynoduration( var_2.origin, var_1, "allies" );
            }
        }
    }
}

delayspawnuntilpointcap()
{
    level endon( "game_ended" );

    for (;;)
    {
        wait 3;
        var_0 = selectdomspawn();

        if ( isdefined( var_0 ) )
            return var_0;
    }
}

selectneutralspawn()
{
    var_0 = scripts\engine\utility::random( level.tankstartspawnneutral );
    return var_0;
}

selectdomspawn()
{
    var_0 = scripts\mp\gametypes\dom.gsc::getteamdompoints( "allies" );
    var_1 = scripts\mp\gametypes\dom.gsc::getteamdompoints( "axis" );
    var_2 = scripts\mp\gametypes\dom.gsc::getteamdompoints( "neutral" );

    if ( var_0.size == 3 || var_1.size == 3 )
        return undefined;
    else if ( var_0.size < var_1.size )
    {
        if ( var_0.size == 0 )
            return var_2[0];

        return var_0[0];
    }
    else if ( var_0.size > var_1.size )
    {
        if ( var_1.size == 0 )
            return var_2[0];

        return var_1[0];
    }

    return undefined;
}

spawnbradleynoduration( var_0, var_1, var_2 )
{
    var_3 = spawnstruct();
    scripts\cp_mp\vehicles\light_tank::light_tank_initializespawndata( var_3 );
    var_3.cantimeout = 0;
    var_3.spawnmethod = "airdrop_at_position";
    var_3.origin = var_0;
    var_3.angles = var_1;
    var_3.team = var_2;
    var_4 = scripts\cp_mp\vehicles\light_tank::light_tank_create( var_3 );
}
