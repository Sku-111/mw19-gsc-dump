// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

wait_juggernaut_announce( var_0 )
{
    var_0 notify( "frenzy_event_ready" );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( "s4_mp_kenosha_idle_taunt_01" );
}

kheadtofrenzypoint( var_0 )
{
    var_1 = get_jump_origin();

    if ( isdefined( var_1 ) )
    {
        light_kk_monolith( level._id_11E18.wait_for_player_eliminated[var_1] );
        scripts\mp\gametypes\br_alt_mode_mxp.gsc::waitforremoteend( var_0, var_1 );
    }
    else
        light_kk_monolith( level._id_11E18.wait_for_player_eliminated[level._id_11E18.wait_for_open] );
}

vehicle_occupancy_showcashbag( var_0 )
{
    if ( level._id_11E18._id_13BEF[var_0.agent_type] >= level.delayedeventtypes[16].secondwindthink )
    {
        if ( istrue( var_0.subdued ) )
            return 0;

        var_0 thread scripts\mp\gametypes\br_publicevent_fresno.gsc::kk_onkilled();
        var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( "s4_mp_kenosha_idle_staggered_01" );
        return 0;
    }

    return scripts\mp\gametypes\br_publicevents.gsc::upload_station_interact_used_think( 16 );
}

wait_for_tank_death( var_0 )
{
    var_1 = var_0 scripts\mp\gametypes\_mxp_target.gsc::play_players_arrive_at_extraction( level._id_11E18.playerredeploy );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::waitandstartparachuteoverheadmonitoring( 6 );
    var_0 _id_11E19( var_1, scripts\mp\gametypes\br_alt_mode_mxp.gsc::vehicleturretshootthread );
}

wait_for_tanks_almost_gone( var_0 )
{
    var_1 = getdvarint( "scr_br_pe_fresno_frenzy_ideal_range_kk", 450 );
    var_2 = var_0 scripts\mp\gametypes\br_publicevent_fresno.gsc::propspectating( var_1, level._id_11E18.setincomingremovedcallback._id_13F03 );

    if ( !isdefined( var_2 ) )
    {
        if ( !var_0._id_11EA7 )
        {
            var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( "s4_mp_kenosha_idle_taunt_01" );
            var_0._id_11EA7 = 1;
        }
        else
            kstateinterruptableidle( var_0 );

        return;
    }

    if ( isplayer( var_2 ) )
        var_0._id_13F03 = var_2;
    else if ( isdefined( var_2.as_player ) )
        var_0._id_13F03 = var_2.as_player;

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::wait_in_spectate_for_time( var_0 );
    var_3 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::randomizeattacklocation( var_2.origin, level._id_11E18.waitandstartplunderpolling );
    var_4 = scripts\mp\gametypes\br_public.gsc::semtex_used();
    var_3 = scripts\mp\gametypes\br_public.gsc::modifyplayer_damage( var_3, abs( var_3[2] ) + var_4 );
    var_0 _id_11E19( var_3, scripts\mp\gametypes\br_alt_mode_mxp.gsc::vehicleturretshootthread );
    var_5 = vectortoangles( var_3 - var_0.origin );
    _getrandomlocations::vehicle_spawn_cp_gamemodesupportsabandonedtimeout( var_3, var_5, level._id_11E18.waitandstartplunderpolling );
    waitframe();
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::waitfornukecarriernearlz( var_0 );
    var_0._id_13F03 = undefined;
}

kreturntonormal( var_0 )
{
    disable_kk_monolith();
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::wait_in_spectate_for_time( var_0 );
    var_0._id_11EA4 = var_0._id_11F40;
    level._id_11E18.wait_and_destroy = undefined;
}

kstateinterruptableidle( var_0, var_1 )
{
    if ( !isdefined( var_0.idleindex ) || var_0.idleindex + 1 >= level._id_11E18.kidles.size )
    {
        var_0.idleindex = 0;
        var_0.idles = scripts\engine\utility::array_randomize( level._id_11E18.kidles );
    }
    else
        var_0.idleindex++;

    var_2 = var_0.idleindex;
    var_3 = var_0.idles[var_2];
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( var_3 );
    var_0.nodeidle = 1;
}

gprogresstofrenzylocation( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::ter_op( var_1 == level._id_11E18.setlethalonunresolvedcollision.size - 1, 0, var_1 + 1 );
    var_4 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::score_init( var_0, var_1 );

    if ( var_0.linked_mover )
    {
        if ( var_3 != level._id_11E18.setlastdroppableweaponobj && !var_4 )
            var_0.linked_mover = 0;
    }
    else if ( var_1 != level._id_11E18.setlastdroppableweaponobj && !var_4 )
        var_0.linked_mover = 1;

    var_5 = scripts\engine\utility::ter_op( var_0.linked_mover, var_3, var_1 );

    if ( getdvarint( "disable_swim_to_frenzy", 0 ) )
    {
        while ( level._id_11E18.setlastdroppableweaponobj != var_5 )
        {
            gwalkonpathtowardfrenzypoint( var_0 );
            waitframe();
        }
    }
    else
    {
        if ( !var_4 )
        {
            if ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() == 7 )
                scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_bang_and_boom( var_0 );
        }

        glongtraveltonode( var_0, var_5 );
    }

    gmoveoffpathtofrenzypoint( var_0, var_2 );
}

glongtraveltonode( var_0, var_1 )
{
    [var_3, var_4] = getstepsanddir( var_0, var_1 );

    if ( var_3 > 0 )
    {
        if ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() == 7 )
            var_5 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sandboxprintlineboldwait( var_0 );
        else
        {
            var_5 = level._id_11E18.setlastdroppableweaponobj;
            gstartandswimtonext( var_0 );
        }

        var_6 = level._id_11E18.setlethalonunresolvedcollision[var_5];

        while ( level._id_11E18.setlastdroppableweaponobj != var_1 )
        {
            if ( var_5 != level._id_11E18.setlastdroppableweaponobj && scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() == 7 )
            {
                var_7 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sandboxprintlinebold( var_0 );
                var_8 = level._id_11E18.setlethalonunresolvedcollision[var_7];
                var_9 = vectornormalize( var_0.origin - var_6 );
                var_10 = vectornormalize( var_8 - var_0.origin );
                var_11 = vectordot( var_10, var_9 );

                if ( var_11 > getdvarfloat( "scr_mxp_swim_angle_cos", 0.97 ) )
                {
                    gcontinueswimtonext( var_0, var_8 );
                    continue;
                }
            }

            var_5 = level._id_11E18.setlastdroppableweaponobj;
            var_6 = level._id_11E18.setlethalonunresolvedcollision[var_5];
            scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_bang_and_boom( var_0 );
            gstartandswimtonext( var_0 );
        }
    }

    if ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() == 7 )
        scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_bang_and_boom( var_0 );
}

gcontinueswimtonext( var_0, var_1 )
{
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 6 );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1C( "s4_mp_greenbay_swim_01" );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 6 );
    thread scripts\mp\gametypes\br_alt_mode_mxp.gsc::gstatemovetorootmotion( var_0, var_1 );

    while ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() != 7 )
        waitframe();

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_player_munition_currency( var_0 );
}

gstartandswimtonext( var_0 )
{
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_amped( var_0 );

    while ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() != 7 )
        waitframe();

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_player_munition_currency( var_0 );
}

gwalkonpathtowardfrenzypoint( var_0 )
{
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_dogtags( var_0 );
    gcompletemovetonextnode( var_0 );
}

getstepsanddir( var_0, var_1 )
{
    var_2 = level._id_11E18.setlastdroppableweaponobj - var_1;
    var_3 = 0;

    if ( abs( var_2 ) > 0 )
    {
        var_4 = 0;
        var_5 = 0;

        if ( var_2 > 0 )
        {
            var_4 = var_2;
            var_5 = level._id_11E18.setlethalonunresolvedcollision.size - level._id_11E18.setlastdroppableweaponobj + var_1;
        }
        else
        {
            var_5 = 0 - var_2;
            var_4 = level._id_11E18.setlethalonunresolvedcollision.size - var_1 + level._id_11E18.setlastdroppableweaponobj;
        }

        var_2 = min( var_5, var_4 );

        if ( var_4 > var_5 && var_0.linked_mover )
            var_3 = 1;
        else if ( var_5 > var_4 && !var_0.linked_mover )
            var_3 = 1;
    }

    return [ var_2, var_3 ];
}

gmoveoffpathtofrenzypoint( var_0, var_1 )
{
    var_2 = var_1 - var_0.origin;
    var_3 = vectortoangles( var_2 );
    var_4 = angleclamp180( var_3[1] );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_explodedmg( var_0, var_4, var_1 );
    gstatemovetotarget( var_0, var_1 );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_doomslayer( var_0 );

    if ( isdefined( level._id_11E18.gz_monolith ) )
    {
        var_5 = level._id_11E18.gz_monolith.origin;
        var_0 _id_11E19( var_5, scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_activate );
    }

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 0 );
}

gheadtofrenzypoint( var_0 )
{
    var_1 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new();

    if ( var_1 == 14 || var_1 == 15 )
    {
        level._id_11E18.wait_for_next_hack_complete notify( "break_idle" );
        scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 12 );
    }

    gcompletemovetonextnode( var_0 );
    [var_3, var_4] = ggetsafepoint();
    light_gz_monolith( var_4 );
    gprogresstofrenzylocation( var_0, var_3, var_4 );
}

gcontinuewalktonextnode( var_0 )
{
    while ( !scripts\mp\gametypes\br_alt_mode_mxp.gsc::score_event_kill( var_0 ) )
        ganimatewalkwithoutovershooting( var_0 );

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_grounded( var_0, 12, 1 );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_player_munition_currency( var_0 );
}

ganimatewalkwithoutovershooting( var_0 )
{
    thread gmonitorwalk( var_0 );
    var_0 notify( "gz_at_node" );
    var_1 = var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1C( "s4_mp_greenbay_walk_01" );
    var_2 = getanimlength( var_1 );
    var_3 = var_0 scripts\engine\utility::waittill_notify_or_timeout_return( "gz_at_node", var_2 );
    var_0 notify( "walk_cycle_done" );
    return var_3 == "timeout";
}

gmonitorwalk( var_0 )
{
    var_0 notify( "goal_stopped" );
    var_0 endon( "goal_stopped" );
    var_0 endon( "walk_cycle_done" );

    for (;;)
    {
        if ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::score_event_kill( var_0 ) )
        {
            var_0 notify( "gz_at_node" );
            return;
        }

        waitframe();
    }
}

gstatemovetotarget( var_0, var_1 )
{
    var_0 endon( "goal_reached" );
    var_0 endon( "goal_interrupted" );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 2 );

    while ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() == 2 )
        gstatecontinuetotarget( var_0, var_1 );

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 12 );
}

gcompletemovetonextnode( var_0 )
{
    var_0 notify( "goal_stopped" );

    if ( scripts\mp\gametypes\br_alt_mode_mxp.gsc::ginwalkingstate() )
        gcontinuewalktonextnode( var_0 );

    for ( var_1 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new(); var_1 == 6; var_1 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_computer_think_new() )
        waitframe();

    if ( var_1 == 7 )
    {
        scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_player_munition_currency( var_0 );

        if ( getdvarint( "disable_swim_to_frenzy", 0 ) )
            scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_bang_and_boom( var_0 );
    }
}

gstatecontinuetotarget( var_0, var_1 )
{
    var_0 endon( "goal_reached" );
    var_0 endon( "goal_interrupted" );
    thread gmonitortotarget( var_0, var_1 );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1D( "s4_mp_greenbay_walk_01" );
    var_0 notify( "walk_cycle_done" );
}

gmonitortotarget( var_0, var_1 )
{
    var_0 notify( "goal_stopped" );
    var_0 endon( "goal_stopped" );
    var_0 endon( "walk_cycle_done" );

    for (;;)
    {
        if ( gisclosetofrenzypoint( var_0, var_1 ) )
        {
            var_0 notify( "goal_reached" );
            return;
        }

        waitframe();
    }
}

gisclosetofrenzypoint( var_0, var_1 )
{
    var_2 = 100;
    var_3 = distance2d( var_1, var_0.origin );

    if ( var_3 <= level._id_11E18.ggoaldist )
        return 1;

    var_4 = var_1 - var_0.origin;
    var_5 = var_0.angles;
    var_6 = anglestoforward( var_5 );
    var_7 = vectordot( var_4, var_6 );
    return var_7 <= 0;
}

trunidlewait( var_0 )
{
    self notify( "frenzy_event_ready" );
    self endon( "frenzy_event_ready" );

    for (;;)
        scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1D( var_0 );
}

set_dvars( var_0 )
{
    var_0 notify( "frenzy_event_ready" );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( "s4_mp_greenbay_idle_taunt_01" );
}

post_blockade_breadcrumb_struct( var_0 )
{
    if ( level._id_11E18._id_13BEF[var_0.agent_type] >= level.delayedeventtypes[16].secondwindthink )
    {
        if ( istrue( var_0.subdued ) )
            return 0;

        var_0 thread scripts\mp\gametypes\br_publicevent_fresno.gsc::gz_onkilled();
        var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1D( "s4_mp_greenbay_idle_staggered_01" );
        return 0;
    }

    return scripts\mp\gametypes\br_publicevents.gsc::upload_station_interact_used_think( 16 );
}

select_woods_two_spawners( var_0 )
{
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 0 );
    var_1 = var_0.cashtorefund;
    var_2 = var_1 scripts\mp\gametypes\_mxp_target.gsc::play_players_arrive_at_extraction( var_1.radius );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 13 );
    var_0 _id_11E19( var_2, scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_activate );
}

send_munition_used_notify( var_0 )
{
    var_1 = getdvarint( "scr_br_pe_fresno_frenzy_ideal_range_gz", 900 );
    var_2 = var_0 scripts\mp\gametypes\br_publicevent_fresno.gsc::propspectating( var_1, level._id_11E18.wait_for_next_hack_complete._id_13F03 );

    if ( !isdefined( var_2 ) )
    {
        if ( !var_0._id_11EA7 )
        {
            var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( "s4_mp_greenbay_idle_lookaround_01" );
            var_0._id_11EA7 = 1;
        }
        else
            gstateinterruptableidle( var_0 );

        return;
    }

    if ( isplayer( var_2 ) )
        var_0._id_13F03 = var_2;
    else if ( isdefined( var_2.as_player ) )
        var_0._id_13F03 = var_2.as_player;

    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_distances_for_groups( var_0 );
    var_3 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::randomizeattacklocation( var_2.origin, level._id_11E18.gsmallkillstreakradius );
    var_4 = scripts\mp\gametypes\br_public.gsc::semtex_used();
    var_5 = scripts\mp\gametypes\br_public.gsc::modifyplayer_damage( var_3, abs( var_3[2] ) + var_4 );
    var_6 = level._id_11E18.gtargetairborneheight < var_3[2] - var_5[2];

    if ( var_6 )
    {
        var_7 = vectortoangles( var_3 - var_0.origin );
        _getrandomlocations::greenbaystrikeatpoint( var_3, var_7, level._id_11E18.gsmallkillstreakradius );
    }
    else
    {
        var_7 = vectortoangles( var_5 - var_0.origin );
        _getrandomlocations::serverroomdogtagrevive( var_5, var_7, level._id_11E18.gsmallkillstreakradius );
    }

    waitframe();
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_grounded( var_0, 0, 0 );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_relic_aggressive_melee_params( var_0 );
    var_0._id_13F03 = undefined;
}

gstateinterruptableidle( var_0, var_1 )
{
    if ( !isdefined( var_0.idleindex ) || var_0.idleindex + 1 >= level._id_11E18.gidles.size )
    {
        var_0.idleindex = 0;
        var_0.idles = scripts\engine\utility::array_randomize( level._id_11E18.gidles );
    }
    else
        var_0.idleindex++;

    var_2 = var_0.idleindex;
    var_3 = var_0.idles[var_2];
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( var_3 );
    var_0.nodeidle = 1;
}

set_door_open( var_0 )
{
    disable_gz_monolith();
    var_1 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sandboxprintlinebold( var_0 );
    var_2 = level._id_11E18.setlethalonunresolvedcollision[var_1];
    var_0 _id_11E19( var_2, scripts\mp\gametypes\br_alt_mode_mxp.gsc::sat_activate );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 1 );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1D( "s4_mp_greenbay_walk_start_01" );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 2 );
    var_0.chopper_carepackage = undefined;
    var_0.nodeidle = 1;
}

gswimouttosea( var_0, var_1 )
{
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 5 );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1D( "s4_mp_greenbay_dive_01" );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::set_maze_ai_stealth_settings( 6 );
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1C( "s4_mp_greenbay_swim_01" );
    scripts\mp\gametypes\br_alt_mode_mxp.gsc::gstatemovetorootmotion( var_0, var_1 );
}

gstatecontinueswimming( var_0 )
{
    var_0 scripts\mp\gametypes\br_alt_mode_mxp.gsc::_id_13C1C( "s4_mp_greenbay_swim_01" );
    var_1 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::sandboxprintlinebold( var_0 );
    var_2 = level._id_11E18.setlethalonunresolvedcollision[var_1];
    thread scripts\mp\gametypes\br_alt_mode_mxp.gsc::gstatemovetorootmotion( var_0, var_2 );
}

ggetsafepoint()
{
    var_2 = level._id_11E18.setincomingremovedcallback scripts\engine\utility::array_sort_with_func( getarraykeys( level._id_11E18.seq3_tanksettings ), scripts\mp\gametypes\br_alt_mode_mxp.gsc::post_race );

    if ( !isdefined( level.br_circle.dangercircleent ) )
    {
        var_1 = level._id_11E18.seq3_tanksettings[var_2[0]];
        return [ var_1.score_event_civilian_killed, var_1.origin ];
    }

    var_3 = min( 6, var_2.size / 2 );

    for ( var_4 = 0; var_4 < var_3; var_4++ )
    {
        var_5 = var_2[var_4];
        var_1 = level._id_11E18.seq3_tanksettings[var_5];

        if ( is_safe_point( var_1.origin ) )
            return [ var_1.score_event_civilian_killed, var_1.origin ];
    }

    var_1 = level._id_11E18.seq3_tanksettings[var_2[0]];
    return [ var_1.score_event_civilian_killed, var_1.origin ];
}

is_safe_point( var_0 )
{
    if ( istrue( level.br_circle_disabled ) )
        return 1;

    if ( !isdefined( level.br_circle.dangercircleent ) || !isdefined( level.br_circle.safecircleent ) )
        return 0;

    if ( !scripts\mp\gametypes\br_circle.gsc::ispointincurrentsafecircle( var_0 ) )
        return 0;

    if ( scripts\mp\gametypes\br_circle.gsc::updatescavengerhud( var_0 ) )
        return 1;

    if ( isdefined( level._id_11E18.pe_endtime ) && isdefined( level._id_11E18.safe_circle_end_time ) )
        return level._id_11E18.safe_circle_end_time > level._id_11E18.pe_endtime;

    return 0;
}

get_jump_origin()
{
    var_0 = level._id_11E18.wait_for_open;
    var_1 = level._id_11E18.wait_for_open;

    for ( var_2 = 0; var_2 < level._id_11E18.wait_for_player_eliminated.size; var_2++ )
    {
        var_0 = scripts\engine\utility::ter_op( var_0 + 1 < level._id_11E18.wait_for_player_eliminated.size, var_0 + 1, 0 );
        var_3 = level._id_11E18.wait_for_player_eliminated[var_0];

        if ( var_0 > 0 && level._id_11E18.wait_for_open != var_0 && is_safe_point( var_3 ) )
            return var_0;

        var_1 = scripts\engine\utility::ter_op( var_1 > 0, var_1 - 1, level._id_11E18.wait_for_player_eliminated.size - 1 );
        var_4 = level._id_11E18.wait_for_player_eliminated[var_1];

        if ( var_1 > 0 && level._id_11E18.wait_for_open != var_0 && is_safe_point( var_4 ) )
            return var_1;
    }
}

_id_11E19( var_0, var_1 )
{
    var_2 = self.origin;
    var_3 = self.angles;
    var_4 = var_0 - var_2;
    var_5 = vectortoangles( var_4 );
    var_6 = angleclamp180( var_5[1] );
    var_7 = angleclamp180( var_3[1] );
    var_8 = angleclamp180( var_6 - var_7 );
    [var_10, var_11, var_12] = [[ var_1 ]]( self, var_8 );
    var_13 = 1;

    if ( var_10 != "" )
        var_14 = scripts\mp\gametypes\br_alt_mode_mxp.gsc::tplayinterruptableanim( var_10 );

    self orientmode( "face point", var_0 );
    return var_13;
}

light_kk_monolith( var_0 )
{
    var_1 = getentitylessscriptablearrayinradius( "scriptable_lm_mkg_cliff_rock_06_kenosha", "classname" );
    var_2 = undefined;
    var_3 = float( 10000000000.0 );

    foreach ( var_5 in var_1 )
    {
        var_6 = distancesquared( var_5.origin, var_0 );

        if ( var_6 < var_3 )
        {
            var_3 = var_6;
            var_2 = var_5;
        }
    }

    if ( isdefined( var_2 ) )
        var_2 setscriptablepartstate( "fx", "start" );

    level._id_11E18.kk_monolith = var_2;
    level thread scripts\mp\gametypes\br_publicevent_fresno.gsc::attackerisinflictorforradiusexplosiveweapon( var_0, level._id_11E18.wait_for_next_hack_complete );
}

light_gz_monolith( var_0 )
{
    var_1 = getentitylessscriptablearrayinradius( "scriptable_lm_mkg_cliff_rock_06_greenbay", "classname" );
    var_2 = undefined;
    var_3 = float( 10000000000.0 );

    foreach ( var_5 in var_1 )
    {
        var_6 = distancesquared( var_5.origin, var_0 );

        if ( var_6 < var_3 )
        {
            var_3 = var_6;
            var_2 = var_5;
        }
    }

    if ( isdefined( var_2 ) )
        var_2 setscriptablepartstate( "fx", "start" );

    level._id_11E18.gz_monolith = var_2;
    var_8 = getdvarfloat( "scr_br_pe_fresno_gz_offset", 1.16667 );
    var_9 = vectornormalize( scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin() - var_0 );
    var_6 = level._id_11E18.playerredeploy * var_8;
    var_10 = var_0 + var_9 * var_6;
    level thread scripts\mp\gametypes\br_publicevent_fresno.gsc::attackerisinflictorforradiusexplosiveweapon( var_10, level._id_11E18.setincomingremovedcallback );
}

disable_kk_monolith()
{
    if ( isdefined( level._id_11E18.kk_monolith ) )
        level._id_11E18.kk_monolith setscriptablepartstate( "fx", "stop" );

    level._id_11E18.kk_monolith = undefined;
}

disable_gz_monolith()
{
    if ( isdefined( level._id_11E18.gz_monolith ) )
        level._id_11E18.gz_monolith setscriptablepartstate( "fx", "stop" );

    level._id_11E18.gz_monolith = undefined;
}
