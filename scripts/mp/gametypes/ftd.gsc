// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._effect["vfx_br3_teleport_smoke"] = loadfx( "vfx/iw8_br/island/gameplay/vfx_br3_teleport_smoke" );
    var_0 = getdvarint( "scr_ftv_enable", 0 );

    if ( var_0 )
    {
        teammarkedfor();
        var_1 = 1;
        thread _id_13245( var_1 );
    }
    else
        move_platform( 1 );
}

teammarkedfor()
{
    scripts\engine\scriptable::_id_12F5B( "part_door", ::petrograd_interaction_think );
    throwing_knife_cp_trytopickup();
    level.petobjectivefilter = [];
}

_id_13245( var_0 )
{
    level endon( "game_ended" );
    var_1 = getentitylessscriptablearrayinradius( "scriptable_br_fast_travel_door", "classname" );
    var_2 = getentitylessscriptablearrayinradius( "scriptable_br_fast_travel_light", "classname" );
    var_3 = scripts\engine\utility::getstructarray( "scriptable_br_fast_travel_arrival", "script_noteworthy" );
    var_4 = getentarray( "ftv_trigger", "script_noteworthy" );
    var_5 = 0;

    foreach ( var_7 in var_1 )
    {
        var_8 = var_7.script_noteworthy;

        if ( isdefined( var_8 ) )
        {
            var_9 = [];

            foreach ( var_11 in var_2 )
            {
                if ( var_11.script_noteworthy == var_8 )
                    var_9 = scripts\engine\utility::array_add( var_9, var_11 );
            }

            foreach ( var_14 in var_3 )
            {
                if ( var_14.targetname == var_8 )
                {
                    foreach ( var_16 in var_4 )
                    {
                        if ( var_16.targetname == var_8 )
                        {
                            throwingknife_fire_begin_fx( var_7, var_9, var_14, var_16 );
                            var_5++;
                            break;
                        }
                    }
                }
            }
        }
    }

    if ( var_5 != var_1.size )
    {

    }

    if ( var_5 > 0 )
    {
        if ( var_0 )
            level waittill( "prematch_done" );

        thread _id_12126();
        thread atv_initcollision();

        foreach ( var_7 in level.petobjectivefilter )
            attackerinitammo( var_7 );
    }
}

throwingknife_fire_begin_fx( var_0, var_1, var_2, var_3 )
{
    var_0.usable = 1;
    var_0._id_13AEB = randomint( 4 );
    var_0.statuslightlist = var_1;
    var_0.destination = var_2;
    var_0.ph = var_3;
    var_0.ph._id_121D7 = var_0;
    scripts\mp\utility\trigger::makeenterexittrigger( var_0.ph, ::petrograd_interaction_delayed, undefined );
    level.petobjectivefilter[level.petobjectivefilter.size] = var_0;
}

petrograd_interaction_think( var_0, var_1, var_2, var_3, var_4 )
{
    if ( var_1 == "part_door" && isdoorscriptableclosed( var_2 ) )
    {
        if ( istrue( var_0.usable ) && !istrue( var_0.cankeepusingbomb ) )
            var_0 thread _id_12125( var_3 );
    }
}

closedoorscriptable()
{
    var_0 = "closed_" + self.script_noteworthy;
    self setscriptablepartstate( "part_door", var_0 );
}

isdoorscriptableclosed( var_0 )
{
    if ( var_0 == "inactive" || var_0 == "open" || var_0 == "disabled" )
        return 0;
    else
        return 1;
}

attackerinitammo( var_0 )
{
    var_0 closedoorscriptable();
    var_0 _id_13145( "inactive" );
    var_0.cankeepusingbomb = 0;
    var_0 thread _id_11D04();
}

_id_12125( var_0 )
{
    var_1 = self;
    var_2 = var_0.origin - var_1.origin;

    if ( vectordot( var_2, anglestoforward( var_1.angles ) ) <= 0 )
        return;

    if ( istrue( var_1.cankeepusingbomb ) )
        return;

    level endon( "game_ended" );
    var_1 endon( "ftd_close" );
    var_1._id_1269A = [];
    var_1 setscriptablepartstate( "part_door", "open" );
    var_1 notify( "ftd_open" );
    var_1 thread _id_13C4E();
    var_1 thread petrograd_lead_model();
}

petrograd_interaction_delayed( var_0, var_1 )
{
    var_2 = var_1._id_121D7;

    if ( var_0 isinexecutionvictim() || var_0 isinexecutionattack() )
        return;

    var_0 thread _id_1386A( var_0 registerdonetsksubmap( var_2, 0 ), var_2, "mp_wz_ch3_mines_fast_travel" );
}

getspectators()
{
    var_0 = [];

    foreach ( var_2 in level.players )
    {
        if ( var_2 isspectatingplayer() )
        {
            if ( self == var_2 getspectatingplayer() )
                var_0 = scripts\engine\utility::array_add( var_0, var_2 );
        }
    }

    return var_0;
}

_id_1386A( var_0, var_1, var_2 )
{
    var_3 = self;
    level endon( "game_ended" );
    var_3 endon( "death" );
    var_3 endon( "disconnect" );
    var_3 thread _id_126D0( var_1 );
    var_4 = getspectators();

    foreach ( var_6 in var_4 )
    {
        var_6 _id_12853( var_2 );
        var_6 _id_1277C( var_2 );
    }

    var_3 _id_12853( var_2 );
    var_3 _id_1277C( var_2 );
    var_3 setsoundsubmix( "fade_to_black_all_except_music_and_scripted5", 0.5 );
    wait 0.1;
    var_1 battle_tracks_updateexternallisteningzone( var_3 );
    var_3 setorigin( var_0 );
    var_8 = var_1.angles;
    var_9 = ( 0, ( var_8[1] + 180 ) % 360, 0 );
    var_3 setplayerangles( var_9 );
    wait 4.0;
    var_3._id_12A49 = 1;
}

_id_13C4E()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "ftd_close" );
    var_0._id_13B81 = gettime();
    var_0._id_13B7C = undefined;

    for (;;)
    {
        if ( isdefined( var_0._id_13B7C ) && ( gettime() - var_0._id_13B7C ) / 1000 >= getdvarint( "scr_br_ftd_InactiveTime", 10 ) )
        {
            var_0 thread heli_land_logic( 0 );
            return;
        }

        if ( ( gettime() - var_0._id_13B81 ) / 1000 >= getdvarint( "scr_br_ftd_MaxOpenTime", 20 ) )
        {
            var_0 thread heli_land_logic( 0 );
            return;
        }

        wait 1;
    }
}

petrograd_lead_model()
{
    var_0 = self;
    level endon( "game_ended" );
    var_0 endon( "end_ftd_queue" );

    if ( !isdefined( var_0.petrograd_interactions_init ) )
        var_0.petrograd_interactions_init = [];

    for (;;)
    {
        waitframe();

        if ( !isdefined( var_0.petrograd_interactions_init ) || var_0.petrograd_interactions_init.size <= 0 )
        {
            var_0.tv_station_fastrope_one_infil_rider_start_targetname = 0;
            continue;
        }

        var_0.tv_station_fastrope_one_infil_rider_start_targetname = 1;
        var_1 = var_0.petrograd_interactions_init[0];

        if ( !isdefined( var_1 ) || !isalive( var_1 ) )
        {
            var_0.petrograd_interactions_init = var_0 _id_12C1A( var_1 );
            var_0.tv_station_fastrope_one_infil_rider_start_targetname = 0;
            var_1 notify( "ftdqueue_travel_completed" );
            continue;
        }

        var_1 thread play_vo_or_timeout( var_0, var_1 registerdonetsksubmap( var_0, 1 ) );
        var_1 scripts\engine\utility::_id_143A5( "player_done_warping", "death" );
        var_0.petrograd_interactions_init = var_0 _id_12C1A( var_1 );
        var_0.tv_station_fastrope_one_infil_rider_start_targetname = 0;
        var_1 notify( "ftdqueue_travel_completed" );
    }
}

battle_tracks_updateexternallisteningzone( var_0 )
{
    var_1 = self;

    if ( !isdefined( var_0 ) || !isplayer( var_0 ) )
        return;

    if ( !isdefined( var_1.petrograd_interactions_init ) )
        var_1.petrograd_interactions_init = [];

    if ( scripts\engine\utility::array_contains( var_1.petrograd_interactions_init, var_0 ) )
        return;

    var_1._id_13B7C = gettime();
    var_1.petrograd_interactions_init[var_1.petrograd_interactions_init.size] = var_0;
}

_id_12C1A( var_0 )
{
    var_1 = self;
    var_2 = scripts\engine\utility::array_remove( var_1.petrograd_interactions_init, var_0 );
    return var_2;
}

_id_12853( var_0 )
{
    var_1 = self;
    var_1 skydive_cutparachuteon( var_0 );
    var_1 setclientomnvar( "ui_br_bink_overlay_state", 10 );
}

_id_1277C( var_0 )
{
    var_1 = self;
    var_1 preloadcinematicforplayer( var_0 );
}

_id_138F8()
{
    var_0 = self;
    var_0 setclientomnvar( "ui_br_bink_overlay_state", 5 );
    wait 0.5;
    var_0 setclientomnvar( "ui_br_bink_overlay_state", 0 );
    var_0 skydive_cutparachuteoff();
}

_id_126D0( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 playerhide();
    var_1 freezecontrols( 1 );
    var_1 vehiclepinonminimap( 1 );
    var_1.validateboltent = 1;

    if ( isdefined( var_0 ) )
        var_0._id_1269A[var_1.guid] = var_1;

    var_2 = 8.5;
    var_3 = scripts\engine\utility::_id_143BD( var_2, "player_done_warping", "prematch_end", "ftdqueue_travel_completed", "death", "disconnect" );

    if ( isdefined( var_0 ) )
    {
        if ( var_3 == "disconnect" )
        {
            var_0._id_1269A = scripts\engine\utility::array_removeundefined( var_0._id_1269A );
            return;
        }
        else
            var_0._id_1269A = scripts\engine\utility::array_remove( var_0._id_1269A, var_1 );
    }

    var_1 vehiclepinonminimap( 0 );
    var_1 freezecontrols( 0 );
    var_1 playershow();
    var_1.validateboltent = undefined;
    var_1 clearsoundsubmix( "fade_to_black_all_except_music_and_scripted5", 2 );
    var_1 thread atv_outline();
}

atv_outline()
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "disconnect" );
    var_0 = spawn( "script_model", self.origin );
    var_0._id_129C7 = gettime();
    var_0.team = self.team;
    var_0 makeportableradar( self );
    level.disable_super_in_turret._id_129C6[var_0 getentitynumber()] = var_0;
    wait 3;
    var_0 delete();
}

play_vo_or_timeout( var_0, var_1 )
{
    var_2 = self;
    level endon( "game_ended" );
    var_2 endon( "death" );
    var_2 endon( "disconnect" );

    while ( !istrue( var_2._id_12A49 ) )
        waitframe();

    var_2._id_12A49 = 0;
    var_3 = 7.5;
    var_2 scripts\mp\gametypes\br_public.gsc::_id_126B9( var_1, var_3 );
    var_2 waittill( "playerPrestreamComplete" );
    wait 0.45;
    var_1 = var_1 + ( 0, 0, 20 );
    var_2 setorigin( var_1 );
    playfx( scripts\engine\utility::getfx( "vfx_br3_teleport_smoke" ), var_2.origin );
    var_2 playsoundtoplayer( "sfx_underground_room_arrive", var_2 );
    var_4 = var_0.angles;
    var_5 = ( 0, ( var_4[1] + 180 ) % 360, 0 );
    var_2 setplayerangles( var_5 );
    waitframe();
    var_2 clearsoundsubmix( "fade_to_black_all_except_music_and_scripted5", 2 );
    var_2 _id_138F8();
    var_6 = getspectators();

    foreach ( var_8 in var_6 )
        var_8 _id_138F8();

    var_2 notify( "player_done_warping" );
}

registerdonetsksubmap( var_0, var_1 )
{
    var_2 = self;
    var_3 = var_0.destination.origin;

    if ( var_1 )
    {
        var_4 = var_0._id_13AEB;
        var_0._id_13AEB = ( var_0._id_13AEB + 1 ) % 4;
        var_5 = getdvarint( "scr_br_ftd_ArrivalRadius", 50 );

        for ( var_6 = 0; var_6 < level.petplundertimer.size; var_6++ )
        {
            var_7 = ( var_4 + var_6 ) % 4;
            var_8 = var_3 + level.petplundertimer[var_7] * var_5;

            if ( capsuletracepassed( var_8, 16, 32, var_2 ) )
                return var_8;

            var_9 = 10;

            for ( var_10 = 0; var_10 < var_9; var_10++ )
            {
                var_11 = anglestoforward( ( 0, 360 * var_10 / var_9, 0 ) ) * 3 * 16;
                var_12 = var_8 + var_11;

                if ( capsuletracepassed( var_12, 16, 32, var_2 ) )
                    return var_12;
            }
        }
    }

    return var_3;
}

heli_land_logic( var_0 )
{
    var_1 = self;
    level endon( "game_ended" );
    var_1 endon( "ftd_open" );
    var_2 = var_1 getscriptablepartstate( "part_door" );

    if ( var_2 != "inactive" )
    {
        if ( istrue( var_0 ) )
            var_1 setscriptablepartstate( "part_door", "disabled" );
        else
            var_1 closedoorscriptable();
    }

    if ( isdefined( var_1._id_1269A ) )
    {
        var_1.usable = 0;

        while ( var_1._id_1269A.size != 0 )
            wait 0.1;

        var_1.usable = 1;
    }

    var_1 notify( "ftd_close" );
    var_1 thread _id_13385();
}

_id_13385()
{
    var_0 = self;

    if ( !isdefined( var_0.petrograd_interactions_init ) )
        return;

    level endon( "game_ended" );
    wait 1.0;

    while ( istrue( var_0.tv_station_fastrope_one_infil_rider_start_targetname ) )
        waitframe();

    var_0 notify( "end_ftd_queue" );
    var_0.petrograd_interactions_init = undefined;
}

ispointoutsidedisplayedsafecircle( var_0 )
{
    var_1 = scripts\mp\gametypes\br_circle.gsc::getsafecircleorigin();
    var_2 = float( scripts\mp\gametypes\br_circle.gsc::getsafecircleradius() );

    if ( !isdefined( var_1 ) || !isdefined( var_2 ) || var_2 <= 0 )
        return 0;

    var_3 = distance2dsquared( var_0, var_1 );

    if ( var_3 >= var_2 * var_2 )
        return 1;

    return 0;
}

unblockclasschange()
{
    var_0 = self;
    var_1 = getdvarint( "scr_br_ftd_TimeUntilArrivalInDanger", 75 );
    var_2 = 0;

    if ( scripts\mp\gametypes\br_circle.gsc::getdangercircleradius() > 0 )
    {
        var_2 = scripts\mp\gametypes\br_circle.gsc::updateprestreamrespawn( var_0.origin ) == 0;

        if ( scripts\mp\gametypes\br_circle.gsc::getmintimetillpointindangercircle( var_0.origin ) < var_1 )
            var_2 = 1;
    }

    return var_2;
}

throwing_knife_cp_trytopickup()
{
    level.petplundertimer = [];
    var_0 = ( 1, 0, 0 );
    var_1 = 90.0;

    for ( var_2 = 0; var_2 < 4; var_2++ )
    {
        var_0 = rotatevector( var_0, ( 0, var_1, 0 ) );
        level.petplundertimer[level.petplundertimer.size] = var_0;
    }
}

_id_11D04()
{
    level endon( "game_ended" );
    var_0 = self;
    var_1 = var_0.destination;

    for (;;)
    {
        var_2 = getdvarint( "scr_br_ftd_ArrivalDangerRadius", 500 );
        var_3 = getdvarint( "scr_br_ftd_ExplosiveDangerRadiusSquared", 250000 );

        if ( !istrue( var_0.cankeepusingbomb ) && var_1 unblockclasschange() == 1 )
        {
            var_0.cankeepusingbomb = 1;
            var_0 thread heli_land_logic( 1 );
            var_0 _id_13145( "inactive" );
        }
        else if ( istrue( var_0.cankeepusingbomb ) && var_1 unblockclasschange() == 0 )
        {
            var_0.cankeepusingbomb = 0;
            var_0 closedoorscriptable();
        }

        if ( !istrue( var_0.cankeepusingbomb ) )
        {
            var_4 = getdvarint( "scr_br_ftd_ArrivalDangerDistance", 220 );
            var_5 = var_1.origin;
            var_6 = 0;

            foreach ( var_8 in level.mines )
            {
                if ( isdefined( var_8 ) && distancesquared( var_5, var_8.origin ) <= var_3 )
                {
                    var_6 = 1;
                    break;
                }
            }

            if ( var_6 == 0 )
            {
                var_10 = scripts\mp\utility\player::getplayersinradius( var_5, var_2 );

                foreach ( var_12 in var_10 )
                {
                    if ( abs( var_12.origin[2] - var_5[2] ) < 200 )
                    {
                        var_6 = 1;
                        break;
                    }
                }
            }

            if ( var_6 || ispointinsidecitykiller( var_1.origin ) )
                var_14 = "negative";
            else if ( ispointoutsidedisplayedsafecircle( var_1.origin ) )
                var_14 = "warning";
            else
                var_14 = "positive";

            var_0 _id_13145( var_14 );
        }

        wait 1.0;
    }
}

ispointinsidecitykiller( var_0 )
{
    if ( isdefined( level.gulagloadoutindex ) && isdefined( level.gulagloadoutindex.instances ) )
    {
        foreach ( var_2 in level.gulagloadoutindex.instances )
        {
            if ( _getlocationscircleinfluencedwithnoise::citykiller_ispointindamagezone( var_0, var_2 ) )
                return 1;
        }
    }

    return 0;
}

_id_13145( var_0 )
{
    var_1 = self;

    if ( isdefined( var_1 ) && isdefined( var_1.statuslightlist ) )
    {
        foreach ( var_3 in var_1.statuslightlist )
            var_3 setscriptablepartstate( "part_light", var_0 );
    }
}

_id_12126()
{
    wait 1.0;
    var_0 = getentitylessscriptablearrayinradius( "scriptable_scriptable_ftv_hatch", "classname" );

    foreach ( var_2 in var_0 )
        var_2 setscriptablepartstate( "hatch", "open" );

    var_4 = getentitylessscriptablearrayinradius( "scriptable_scriptable_ftv_door", "classname" );

    foreach ( var_6 in var_4 )
        var_6 setscriptablepartstate( "door", "open" );
}

atv_initcollision()
{
    wait 1.0;
    var_0 = getentitylessscriptablearrayinradius( "scriptable_scriptable_ftv_objective", "classname" );

    foreach ( var_2 in var_0 )
        var_2 setscriptablepartstate( "objective", "open" );
}

move_platform( var_0 )
{
    var_1 = getentarray( "ftv_killbox", "script_noteworthy" );

    foreach ( var_3 in var_1 )
    {
        if ( var_0 )
        {
            thread _id_11CFF( var_3 );
            continue;
        }

        var_3 notify( "remove_kill_trigger" );
    }
}

_id_11CFF( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "remove_kill_trigger" );

    for (;;)
    {
        var_0 waittill( "trigger", var_1 );

        if ( isplayer( var_1 ) )
            var_1 dodamage( 10000, var_1.origin, var_0, var_0, "MOD_TRIGGER_HURT" );
    }
}

left_side_spawn_adjuster( var_0 )
{
    if ( var_0 == "spawn" )
        lengthmod();
}

lengthmod()
{
    if ( leaveforplayer() )
    {
        var_0 = level.players[0];
        var_1 = spawnstruct();
        var_1.angles = var_0.angles;
        var_1.origin = var_0.origin + anglestoforward( var_0.angles ) * 100;
        level.petwatchtype[level.petwatchtype.size] = var_1;

        if ( level.petwatchtype.size % 2 == 0 )
        {
            var_2 = easepower( "br_fast_travel_door", var_1.origin, var_1.angles );
            var_3 = lethal_boxes( var_2 );
            var_4 = lengthdelta( level.petwatchtype[level.petwatchtype.size - 2] );
            var_5 = [ var_3 ];
            throwingknife_fire_begin_fx( var_2, var_5, var_4 );
            attackerinitammo( var_2 );
        }
        else
            var_2 = easepower( "br_fast_travel_door", var_1.origin, var_1.angles );
    }
}

lethal_boxes( var_0 )
{
    var_1 = ( 10, 0, 150 );
    var_2 = rotatevector( var_1, var_0.angles );
    var_3 = easepower( "br_fast_travel_light", var_0.origin + var_2, ( -90, var_0.angles[1], 0 ) );
    return var_3;
}

lengthdelta( var_0 )
{
    var_1 = anglestoforward( ( 0, ( var_0.angles[1] + 180 ) % 360, 0 ) );
    var_2 = spawn( "script_origin", var_0.origin + 100 * var_1 );
    return var_2;
}

leaveforplayer()
{
    if ( isdefined( level.petwatchtype ) == 0 )
        level.petwatchtype = [];

    if ( isdefined( level.petobjectivefilter ) == 0 )
    {
        teammarkedfor();
        return 1;
    }

    if ( level.petobjectivefilter.size < 16 )
        return 1;

    return 0;
}
