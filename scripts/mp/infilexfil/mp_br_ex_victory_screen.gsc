// IW8 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

victoryscreenexfil_should_enable()
{
    return level.script == "mp_wz_island";
}

victoryscreenexfil_init()
{
    level.brendingoverrideinfo = spawnstruct();
    level.brendingoverrideinfo.preloadending = 1;
    level.brendingoverrideinfo.endingstructsoverridefunc = ::victoryscreenexfil_override_ending_structs;
    level.brendingoverrideinfo.endingviewingplayersetup = ::victoryscreenexfil_ending_viewing_player_setup;
    level.brendingoverrideinfo.overridewinnersfunc = ::victoryscreenexfil_get_winners;
    level.brendingoverrideinfo.exfiltypename = "victory_screen";
    level.brendingoverrideinfo.endingpackoverridefunc = ::victoryscreenexfil_ending_pack_override;
    level.brendingoverrideinfo.playeranims = create_player_anims_array();
}

victoryscreenexfil_override_ending_structs( var_0 )
{
    if ( level.script == "mp_wz_island" )
    {
        var_1 = [];
        var_2 = ( 21605, -50768, 440 );
        var_3 = scripts\engine\utility::drop_to_ground( var_2, 1000, -1000, ( 0, 0, 1 ) );
        var_1[0] = scripts\mp\gametypes\br_ending.gsc::init_level_drop_structs( var_3, ( 0, 300, 0 ) );
        return var_1;
    }

    return var_0;
}

#using_animtree("script_model");

victoryscreenexfil_ending_pack_override( var_0 )
{
    if ( !getdvarint( "scr_br_ending_placement" ) )
    {
        self._id_13CE3 = get_victoryscreenexfil_transient();
        unloadinfiltransient( self._id_13CE3 );
        setomnvarforallclients( "ui_br_end_game_splash_type", 18 );
        var_1 = getdvarfloat( "scr_br_end_transient_wait", 6.0 );
        wait( var_1 );
    }

    if ( self.winners.size == 0 )
        scripts\mp\gametypes\br_ending.gsc::init_death_animations( self );

    self._id_121B8 = [];
    var_2 = 0;
    var_3 = "scene";
    self._id_121B8[var_2] = scripts\mp\gametypes\br_ending.gsc::init_bomb_objective( var_3 + var_2 );

    for ( var_4 = 0; var_4 < self.winners.size; var_4++ )
    {
        var_5 = self.winners[var_4];
        var_6 = level.brendingoverrideinfo.playeranims[var_4].playeranim;
        var_7 = var_6;
        var_8 = undefined;
        self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::back_vector( var_5, var_6, var_7, var_8 );
    }

    var_9 = scripts\mp\gametypes\br_ending.gsc::_id_135CA( "veh8_mil_air_mindia8" );
    self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::back_struct( var_9, %wz_victoryscreen_helicopter );
    var_10 = scripts\mp\gametypes\br_ending.gsc::_id_135CA( "veh_s4_mil_ratrace_suv_wz" );
    self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::back_struct( var_10, %wz_victoryscreen_suv );
    self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::awardstadiumblueprint( %wz_victoryscreen_sh001_cam );
    var_2++;

    for ( var_4 = 0; var_4 < self.winners.size; var_4++ )
    {
        self._id_121B8[var_2] = scripts\mp\gametypes\br_ending.gsc::init_bomb_objective( var_3 + var_2 );
        self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::backendevent( var_4, ::victoryscreenexfil_player_highlight_camera_start );
        self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::awardstadiumblueprint( level.brendingoverrideinfo.playeranims[var_4].cameraanim );
        var_2++;
    }

    self._id_121B8[var_2] = scripts\mp\gametypes\br_ending.gsc::init_bomb_objective( var_3 + var_2 );
    self._id_121B8[var_2] scripts\mp\gametypes\br_ending.gsc::awardstadiumblueprint( %wz_victoryscreen_sh012_cam );
    thread watch_ending_all_scenes_end();
}

watch_ending_all_scenes_end()
{
    self waittill( "all_scenes_end" );
    var_0 = 0.2;

    foreach ( var_2 in level.players )
        var_2 thread scripts\mp\gametypes\br_ending.gsc::nag_get_in_heli( var_0 );
}

create_player_anims_array()
{
    var_0 = [];
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc04;
    var_1.cameraanim = %wz_victoryscreen_sh004_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc02;
    var_1.cameraanim = %wz_victoryscreen_sh002_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc06;
    var_1.cameraanim = %wz_victoryscreen_sh006_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc05;
    var_1.cameraanim = %wz_victoryscreen_sh005_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc01;
    var_1.cameraanim = %wz_victoryscreen_sh011_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc03;
    var_1.cameraanim = %wz_victoryscreen_sh003_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc07;
    var_1.cameraanim = %wz_victoryscreen_sh007_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc08;
    var_1.cameraanim = %wz_victoryscreen_sh008_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc10;
    var_1.cameraanim = %wz_victoryscreen_sh009_cam;
    var_0[var_0.size] = var_1;
    var_1 = spawnstruct();
    var_1.playeranim = %wz_victoryscreen_idle_npc09;
    var_1.cameraanim = %wz_victoryscreen_sh010_cam;
    var_0[var_0.size] = var_1;
    return var_0;
}

get_victoryscreenexfil_transient()
{
    return "mp_infil_wz_island_ending_victory_screen_tr";
}

enable_player_hightlight( var_0 )
{
    if ( var_0 == 0 )
        setomnvarforallclients( "ui_br_end_game_splash_type", 13 );
    else if ( var_0 == 1 )
        setomnvarforallclients( "ui_br_end_game_splash_type", 14 );
    else if ( var_0 == 2 )
        setomnvarforallclients( "ui_br_end_game_splash_type", 15 );
    else if ( var_0 == 3 )
        setomnvarforallclients( "ui_br_end_game_splash_type", 16 );
    else
    {

    }
}

victoryscreenexfil_player_highlight_camera_start( var_0 )
{
    enable_player_hightlight( var_0 );
}

victoryscreenexfil_ending_viewing_player_setup()
{
    self endon( "disconnect" );
    var_0 = 0.5;
    var_1 = 1;
    self setclientomnvar( "ui_world_fade", 1 );
    self playerhide( 1 );
    wait( var_0 );
    scripts\mp\gametypes\br_ending.gsc::musictriggerthink( var_1 );
}

victoryscreenexfil_get_winners( var_0 )
{
    var_1 = min( level.brendingoverrideinfo.playeranims.size, var_0.size );
    return scripts\engine\utility::array_slice( var_0, 0, var_1 );
}
